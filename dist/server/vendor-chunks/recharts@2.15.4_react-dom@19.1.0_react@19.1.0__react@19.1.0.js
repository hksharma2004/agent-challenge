"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0";
exports.ids = ["vendor-chunks/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Bar.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Bar.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bar: () => (/* binding */ Bar)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var react_smooth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-smooth */ \"(ssr)/./node_modules/.pnpm/react-smooth@4.0.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-smooth/es6/index.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isEqual */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _ErrorBar__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ErrorBar */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _component_Cell__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../component/Cell */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cell.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../component/LabelList */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_BarUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/BarUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/BarUtils.js\");\nvar _excluded = [\n    \"value\",\n    \"background\"\n];\nvar _Bar;\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Render a group of bar\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Bar = /*#__PURE__*/ function(_PureComponent) {\n    function Bar() {\n        var _this;\n        _classCallCheck(this, Bar);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, Bar, [].concat(args));\n        _defineProperty(_this, \"state\", {\n            isAnimationFinished: false\n        });\n        _defineProperty(_this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.uniqueId)('recharts-bar-'));\n        _defineProperty(_this, \"handleAnimationEnd\", function() {\n            var onAnimationEnd = _this.props.onAnimationEnd;\n            _this.setState({\n                isAnimationFinished: true\n            });\n            if (onAnimationEnd) {\n                onAnimationEnd();\n            }\n        });\n        _defineProperty(_this, \"handleAnimationStart\", function() {\n            var onAnimationStart = _this.props.onAnimationStart;\n            _this.setState({\n                isAnimationFinished: false\n            });\n            if (onAnimationStart) {\n                onAnimationStart();\n            }\n        });\n        return _this;\n    }\n    _inherits(Bar, _PureComponent);\n    return _createClass(Bar, [\n        {\n            key: \"renderRectanglesStatically\",\n            value: function renderRectanglesStatically(data) {\n                var _this2 = this;\n                var _this$props = this.props, shape = _this$props.shape, dataKey = _this$props.dataKey, activeIndex = _this$props.activeIndex, activeBar = _this$props.activeBar;\n                var baseProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__.filterProps)(this.props, false);\n                return data && data.map(function(entry, i) {\n                    var isActive = i === activeIndex;\n                    var option = isActive ? activeBar : shape;\n                    var props = _objectSpread(_objectSpread(_objectSpread({}, baseProps), entry), {}, {\n                        isActive: isActive,\n                        option: option,\n                        index: i,\n                        dataKey: dataKey,\n                        onAnimationStart: _this2.handleAnimationStart,\n                        onAnimationEnd: _this2.handleAnimationEnd\n                    });\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_6__.Layer, _extends({\n                        className: \"recharts-bar-rectangle\"\n                    }, (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventsOfChild)(_this2.props, entry, i), {\n                        // https://github.com/recharts/recharts/issues/5415\n                        // eslint-disable-next-line react/no-array-index-key\n                        key: \"rectangle-\".concat(entry === null || entry === void 0 ? void 0 : entry.x, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.y, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.value, \"-\").concat(i)\n                    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.BarRectangle, props));\n                });\n            }\n        },\n        {\n            key: \"renderRectanglesWithAnimation\",\n            value: function renderRectanglesWithAnimation() {\n                var _this3 = this;\n                var _this$props2 = this.props, data = _this$props2.data, layout = _this$props2.layout, isAnimationActive = _this$props2.isAnimationActive, animationBegin = _this$props2.animationBegin, animationDuration = _this$props2.animationDuration, animationEasing = _this$props2.animationEasing, animationId = _this$props2.animationId;\n                var prevData = this.state.prevData;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_smooth__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    begin: animationBegin,\n                    duration: animationDuration,\n                    isActive: isAnimationActive,\n                    easing: animationEasing,\n                    from: {\n                        t: 0\n                    },\n                    to: {\n                        t: 1\n                    },\n                    key: \"bar-\".concat(animationId),\n                    onAnimationEnd: this.handleAnimationEnd,\n                    onAnimationStart: this.handleAnimationStart\n                }, function(_ref) {\n                    var t = _ref.t;\n                    var stepData = data.map(function(entry, index) {\n                        var prev = prevData && prevData[index];\n                        if (prev) {\n                            var interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.interpolateNumber)(prev.x, entry.x);\n                            var interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.interpolateNumber)(prev.y, entry.y);\n                            var interpolatorWidth = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.interpolateNumber)(prev.width, entry.width);\n                            var interpolatorHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.interpolateNumber)(prev.height, entry.height);\n                            return _objectSpread(_objectSpread({}, entry), {}, {\n                                x: interpolatorX(t),\n                                y: interpolatorY(t),\n                                width: interpolatorWidth(t),\n                                height: interpolatorHeight(t)\n                            });\n                        }\n                        if (layout === 'horizontal') {\n                            var _interpolatorHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.interpolateNumber)(0, entry.height);\n                            var h = _interpolatorHeight(t);\n                            return _objectSpread(_objectSpread({}, entry), {}, {\n                                y: entry.y + entry.height - h,\n                                height: h\n                            });\n                        }\n                        var interpolator = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.interpolateNumber)(0, entry.width);\n                        var w = interpolator(t);\n                        return _objectSpread(_objectSpread({}, entry), {}, {\n                            width: w\n                        });\n                    });\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_6__.Layer, null, _this3.renderRectanglesStatically(stepData));\n                });\n            }\n        },\n        {\n            key: \"renderRectangles\",\n            value: function renderRectangles() {\n                var _this$props3 = this.props, data = _this$props3.data, isAnimationActive = _this$props3.isAnimationActive;\n                var prevData = this.state.prevData;\n                if (isAnimationActive && data && data.length && (!prevData || !lodash_isEqual__WEBPACK_IMPORTED_MODULE_2___default()(prevData, data))) {\n                    return this.renderRectanglesWithAnimation();\n                }\n                return this.renderRectanglesStatically(data);\n            }\n        },\n        {\n            key: \"renderBackground\",\n            value: function renderBackground() {\n                var _this4 = this;\n                var _this$props4 = this.props, data = _this$props4.data, dataKey = _this$props4.dataKey, activeIndex = _this$props4.activeIndex;\n                var backgroundProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__.filterProps)(this.props.background, false);\n                return data.map(function(entry, i) {\n                    var value = entry.value, background = entry.background, rest = _objectWithoutProperties(entry, _excluded);\n                    if (!background) {\n                        return null;\n                    }\n                    var props = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, rest), {}, {\n                        fill: '#eee'\n                    }, background), backgroundProps), (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventsOfChild)(_this4.props, entry, i)), {}, {\n                        onAnimationStart: _this4.handleAnimationStart,\n                        onAnimationEnd: _this4.handleAnimationEnd,\n                        dataKey: dataKey,\n                        index: i,\n                        className: 'recharts-bar-background-rectangle'\n                    });\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.BarRectangle, _extends({\n                        key: \"background-bar-\".concat(i),\n                        option: _this4.props.background,\n                        isActive: i === activeIndex\n                    }, props));\n                });\n            }\n        },\n        {\n            key: \"renderErrorBar\",\n            value: function renderErrorBar(needClip, clipPathId) {\n                if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n                    return null;\n                }\n                var _this$props5 = this.props, data = _this$props5.data, xAxis = _this$props5.xAxis, yAxis = _this$props5.yAxis, layout = _this$props5.layout, children = _this$props5.children;\n                var errorBarItems = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__.findAllByType)(children, _ErrorBar__WEBPACK_IMPORTED_MODULE_10__.ErrorBar);\n                if (!errorBarItems) {\n                    return null;\n                }\n                var offset = layout === 'vertical' ? data[0].height / 2 : data[0].width / 2;\n                var dataPointFormatter = function dataPointFormatter(dataPoint, dataKey) {\n                    /**\n         * if the value coming from `getComposedData` is an array then this is a stacked bar chart.\n         * arr[1] represents end value of the bar since the data is in the form of [startValue, endValue].\n         * */ var value = Array.isArray(dataPoint.value) ? dataPoint.value[1] : dataPoint.value;\n                    return {\n                        x: dataPoint.x,\n                        y: dataPoint.y,\n                        value: value,\n                        errorVal: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getValueByDataKey)(dataPoint, dataKey)\n                    };\n                };\n                var errorBarProps = {\n                    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n                };\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_6__.Layer, errorBarProps, errorBarItems.map(function(item) {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(item, {\n                        key: \"error-bar-\".concat(clipPathId, \"-\").concat(item.props.dataKey),\n                        data: data,\n                        xAxis: xAxis,\n                        yAxis: yAxis,\n                        layout: layout,\n                        offset: offset,\n                        dataPointFormatter: dataPointFormatter\n                    });\n                }));\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this$props6 = this.props, hide = _this$props6.hide, data = _this$props6.data, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, left = _this$props6.left, top = _this$props6.top, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, background = _this$props6.background, id = _this$props6.id;\n                if (hide || !data || !data.length) {\n                    return null;\n                }\n                var isAnimationFinished = this.state.isAnimationFinished;\n                var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-bar', className);\n                var needClipX = xAxis && xAxis.allowDataOverflow;\n                var needClipY = yAxis && yAxis.allowDataOverflow;\n                var needClip = needClipX || needClipY;\n                var clipPathId = lodash_isNil__WEBPACK_IMPORTED_MODULE_3___default()(id) ? this.id : id;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_6__.Layer, {\n                    className: layerClass\n                }, needClipX || needClipY ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"clipPath\", {\n                    id: \"clipPath-\".concat(clipPathId)\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                    x: needClipX ? left : left - width / 2,\n                    y: needClipY ? top : top - height / 2,\n                    width: needClipX ? width : width * 2,\n                    height: needClipY ? height : height * 2\n                }))) : null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_6__.Layer, {\n                    className: \"recharts-bar-rectangles\",\n                    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n                }, background ? this.renderBackground() : null, this.renderRectangles()), this.renderErrorBar(needClip, clipPathId), (!isAnimationActive || isAnimationFinished) && _component_LabelList__WEBPACK_IMPORTED_MODULE_12__.LabelList.renderCallByParent(this.props, data));\n            }\n        }\n    ], [\n        {\n            key: \"getDerivedStateFromProps\",\n            value: function getDerivedStateFromProps(nextProps, prevState) {\n                if (nextProps.animationId !== prevState.prevAnimationId) {\n                    return {\n                        prevAnimationId: nextProps.animationId,\n                        curData: nextProps.data,\n                        prevData: prevState.curData\n                    };\n                }\n                if (nextProps.data !== prevState.curData) {\n                    return {\n                        curData: nextProps.data\n                    };\n                }\n                return null;\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n_Bar = Bar;\n_defineProperty(Bar, \"displayName\", 'Bar');\n_defineProperty(Bar, \"defaultProps\", {\n    xAxisId: 0,\n    yAxisId: 0,\n    legendType: 'rect',\n    minPointSize: 0,\n    hide: false,\n    data: [],\n    layout: 'vertical',\n    activeBar: false,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_13__.Global.isSsr,\n    animationBegin: 0,\n    animationDuration: 400,\n    animationEasing: 'ease'\n});\n/**\n * Compose the data of each group\n * @param {Object} props Props for the component\n * @param {Object} item        An instance of Bar\n * @param {Array} barPosition  The offset and size of each bar\n * @param {Object} xAxis       The configuration of x-axis\n * @param {Object} yAxis       The configuration of y-axis\n * @param {Array} stackedData  The stacked data of a bar item\n * @return{Array} Composed data\n */ _defineProperty(Bar, \"getComposedData\", function(_ref2) {\n    var props = _ref2.props, item = _ref2.item, barPosition = _ref2.barPosition, bandSize = _ref2.bandSize, xAxis = _ref2.xAxis, yAxis = _ref2.yAxis, xAxisTicks = _ref2.xAxisTicks, yAxisTicks = _ref2.yAxisTicks, stackedData = _ref2.stackedData, dataStartIndex = _ref2.dataStartIndex, displayedData = _ref2.displayedData, offset = _ref2.offset;\n    var pos = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.findPositionOfBar)(barPosition, item);\n    if (!pos) {\n        return null;\n    }\n    var layout = props.layout;\n    var itemDefaultProps = item.type.defaultProps;\n    var itemProps = itemDefaultProps !== undefined ? _objectSpread(_objectSpread({}, itemDefaultProps), item.props) : item.props;\n    var dataKey = itemProps.dataKey, children = itemProps.children, minPointSizeProp = itemProps.minPointSize;\n    var numericAxis = layout === 'horizontal' ? yAxis : xAxis;\n    var stackedDomain = stackedData ? numericAxis.scale.domain() : null;\n    var baseValue = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getBaseValueOfBar)({\n        numericAxis: numericAxis\n    });\n    var cells = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__.findAllByType)(children, _component_Cell__WEBPACK_IMPORTED_MODULE_14__.Cell);\n    var rects = displayedData.map(function(entry, index) {\n        var value, x, y, width, height, background;\n        if (stackedData) {\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.truncateByDomain)(stackedData[dataStartIndex + index], stackedDomain);\n        } else {\n            value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getValueByDataKey)(entry, dataKey);\n            if (!Array.isArray(value)) {\n                value = [\n                    baseValue,\n                    value\n                ];\n            }\n        }\n        var minPointSize = (0,_util_BarUtils__WEBPACK_IMPORTED_MODULE_8__.minPointSizeCallback)(minPointSizeProp, _Bar.defaultProps.minPointSize)(value[1], index);\n        if (layout === 'horizontal') {\n            var _ref4;\n            var _ref3 = [\n                yAxis.scale(value[0]),\n                yAxis.scale(value[1])\n            ], baseValueScale = _ref3[0], currentValueScale = _ref3[1];\n            x = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getCateCoordinateOfBar)({\n                axis: xAxis,\n                ticks: xAxisTicks,\n                bandSize: bandSize,\n                offset: pos.offset,\n                entry: entry,\n                index: index\n            });\n            y = (_ref4 = currentValueScale !== null && currentValueScale !== void 0 ? currentValueScale : baseValueScale) !== null && _ref4 !== void 0 ? _ref4 : undefined;\n            width = pos.size;\n            var computedHeight = baseValueScale - currentValueScale;\n            height = Number.isNaN(computedHeight) ? 0 : computedHeight;\n            background = {\n                x: x,\n                y: yAxis.y,\n                width: width,\n                height: yAxis.height\n            };\n            if (Math.abs(minPointSize) > 0 && Math.abs(height) < Math.abs(minPointSize)) {\n                var delta = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.mathSign)(height || minPointSize) * (Math.abs(minPointSize) - Math.abs(height));\n                y -= delta;\n                height += delta;\n            }\n        } else {\n            var _ref5 = [\n                xAxis.scale(value[0]),\n                xAxis.scale(value[1])\n            ], _baseValueScale = _ref5[0], _currentValueScale = _ref5[1];\n            x = _baseValueScale;\n            y = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getCateCoordinateOfBar)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize: bandSize,\n                offset: pos.offset,\n                entry: entry,\n                index: index\n            });\n            width = _currentValueScale - _baseValueScale;\n            height = pos.size;\n            background = {\n                x: xAxis.x,\n                y: y,\n                width: xAxis.width,\n                height: height\n            };\n            if (Math.abs(minPointSize) > 0 && Math.abs(width) < Math.abs(minPointSize)) {\n                var _delta = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.mathSign)(width || minPointSize) * (Math.abs(minPointSize) - Math.abs(width));\n                width += _delta;\n            }\n        }\n        return _objectSpread(_objectSpread(_objectSpread({}, entry), {}, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            value: stackedData ? value : value[1],\n            payload: entry,\n            background: background\n        }, cells && cells[index] && cells[index].props), {}, {\n            tooltipPayload: [\n                (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTooltipItem)(item, entry)\n            ],\n            tooltipPosition: {\n                x: x + width / 2,\n                y: y + height / 2\n            }\n        });\n    });\n    return _objectSpread({\n        data: rects,\n        layout: layout\n    }, offset);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Bar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Brush.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Brush.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Brush: () => (/* binding */ Brush)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! victory-vendor/d3-scale */ \"(ssr)/./node_modules/.pnpm/victory-vendor@36.9.2/node_modules/victory-vendor/es/d3-scale.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/range */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/range.js\");\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_range__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Text__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../component/Text */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Text.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_CssPrefixUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/CssPrefixUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CssPrefixUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Brush\n */ \n\n\n\n\n\n\n\n\n\n\nvar createScale = function createScale(_ref) {\n    var data = _ref.data, startIndex = _ref.startIndex, endIndex = _ref.endIndex, x = _ref.x, width = _ref.width, travellerWidth = _ref.travellerWidth;\n    if (!data || !data.length) {\n        return {};\n    }\n    var len = data.length;\n    var scale = (0,victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_2__.scalePoint)().domain(lodash_range__WEBPACK_IMPORTED_MODULE_4___default()(0, len)).range([\n        x,\n        x + width - travellerWidth\n    ]);\n    var scaleValues = scale.domain().map(function(entry) {\n        return scale(entry);\n    });\n    return {\n        isTextActive: false,\n        isSlideMoving: false,\n        isTravellerMoving: false,\n        isTravellerFocused: false,\n        startX: scale(startIndex),\n        endX: scale(endIndex),\n        scale: scale,\n        scaleValues: scaleValues\n    };\n};\nvar isTouch = function isTouch(e) {\n    return e.changedTouches && !!e.changedTouches.length;\n};\nvar Brush = /*#__PURE__*/ function(_PureComponent) {\n    function Brush(props) {\n        var _this;\n        _classCallCheck(this, Brush);\n        _this = _callSuper(this, Brush, [\n            props\n        ]);\n        _defineProperty(_this, \"handleDrag\", function(e) {\n            if (_this.leaveTimer) {\n                clearTimeout(_this.leaveTimer);\n                _this.leaveTimer = null;\n            }\n            if (_this.state.isTravellerMoving) {\n                _this.handleTravellerMove(e);\n            } else if (_this.state.isSlideMoving) {\n                _this.handleSlideDrag(e);\n            }\n        });\n        _defineProperty(_this, \"handleTouchMove\", function(e) {\n            if (e.changedTouches != null && e.changedTouches.length > 0) {\n                _this.handleDrag(e.changedTouches[0]);\n            }\n        });\n        _defineProperty(_this, \"handleDragEnd\", function() {\n            _this.setState({\n                isTravellerMoving: false,\n                isSlideMoving: false\n            }, function() {\n                var _this$props = _this.props, endIndex = _this$props.endIndex, onDragEnd = _this$props.onDragEnd, startIndex = _this$props.startIndex;\n                onDragEnd === null || onDragEnd === void 0 || onDragEnd({\n                    endIndex: endIndex,\n                    startIndex: startIndex\n                });\n            });\n            _this.detachDragEndListener();\n        });\n        _defineProperty(_this, \"handleLeaveWrapper\", function() {\n            if (_this.state.isTravellerMoving || _this.state.isSlideMoving) {\n                _this.leaveTimer = window.setTimeout(_this.handleDragEnd, _this.props.leaveTimeOut);\n            }\n        });\n        _defineProperty(_this, \"handleEnterSlideOrTraveller\", function() {\n            _this.setState({\n                isTextActive: true\n            });\n        });\n        _defineProperty(_this, \"handleLeaveSlideOrTraveller\", function() {\n            _this.setState({\n                isTextActive: false\n            });\n        });\n        _defineProperty(_this, \"handleSlideDragStart\", function(e) {\n            var event = isTouch(e) ? e.changedTouches[0] : e;\n            _this.setState({\n                isTravellerMoving: false,\n                isSlideMoving: true,\n                slideMoveStartX: event.pageX\n            });\n            _this.attachDragEndListener();\n        });\n        _this.travellerDragStartHandlers = {\n            startX: _this.handleTravellerDragStart.bind(_this, 'startX'),\n            endX: _this.handleTravellerDragStart.bind(_this, 'endX')\n        };\n        _this.state = {};\n        return _this;\n    }\n    _inherits(Brush, _PureComponent);\n    return _createClass(Brush, [\n        {\n            key: \"componentWillUnmount\",\n            value: function componentWillUnmount() {\n                if (this.leaveTimer) {\n                    clearTimeout(this.leaveTimer);\n                    this.leaveTimer = null;\n                }\n                this.detachDragEndListener();\n            }\n        },\n        {\n            key: \"getIndex\",\n            value: function getIndex(_ref2) {\n                var startX = _ref2.startX, endX = _ref2.endX;\n                var scaleValues = this.state.scaleValues;\n                var _this$props2 = this.props, gap = _this$props2.gap, data = _this$props2.data;\n                var lastIndex = data.length - 1;\n                var min = Math.min(startX, endX);\n                var max = Math.max(startX, endX);\n                var minIndex = Brush.getIndexInRange(scaleValues, min);\n                var maxIndex = Brush.getIndexInRange(scaleValues, max);\n                return {\n                    startIndex: minIndex - minIndex % gap,\n                    endIndex: maxIndex === lastIndex ? lastIndex : maxIndex - maxIndex % gap\n                };\n            }\n        },\n        {\n            key: \"getTextOfTick\",\n            value: function getTextOfTick(index) {\n                var _this$props3 = this.props, data = _this$props3.data, tickFormatter = _this$props3.tickFormatter, dataKey = _this$props3.dataKey;\n                var text = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_5__.getValueByDataKey)(data[index], dataKey, index);\n                return lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default()(tickFormatter) ? tickFormatter(text, index) : text;\n            }\n        },\n        {\n            key: \"attachDragEndListener\",\n            value: function attachDragEndListener() {\n                window.addEventListener('mouseup', this.handleDragEnd, true);\n                window.addEventListener('touchend', this.handleDragEnd, true);\n                window.addEventListener('mousemove', this.handleDrag, true);\n            }\n        },\n        {\n            key: \"detachDragEndListener\",\n            value: function detachDragEndListener() {\n                window.removeEventListener('mouseup', this.handleDragEnd, true);\n                window.removeEventListener('touchend', this.handleDragEnd, true);\n                window.removeEventListener('mousemove', this.handleDrag, true);\n            }\n        },\n        {\n            key: \"handleSlideDrag\",\n            value: function handleSlideDrag(e) {\n                var _this$state = this.state, slideMoveStartX = _this$state.slideMoveStartX, startX = _this$state.startX, endX = _this$state.endX;\n                var _this$props4 = this.props, x = _this$props4.x, width = _this$props4.width, travellerWidth = _this$props4.travellerWidth, startIndex = _this$props4.startIndex, endIndex = _this$props4.endIndex, onChange = _this$props4.onChange;\n                var delta = e.pageX - slideMoveStartX;\n                if (delta > 0) {\n                    delta = Math.min(delta, x + width - travellerWidth - endX, x + width - travellerWidth - startX);\n                } else if (delta < 0) {\n                    delta = Math.max(delta, x - startX, x - endX);\n                }\n                var newIndex = this.getIndex({\n                    startX: startX + delta,\n                    endX: endX + delta\n                });\n                if ((newIndex.startIndex !== startIndex || newIndex.endIndex !== endIndex) && onChange) {\n                    onChange(newIndex);\n                }\n                this.setState({\n                    startX: startX + delta,\n                    endX: endX + delta,\n                    slideMoveStartX: e.pageX\n                });\n            }\n        },\n        {\n            key: \"handleTravellerDragStart\",\n            value: function handleTravellerDragStart(id, e) {\n                var event = isTouch(e) ? e.changedTouches[0] : e;\n                this.setState({\n                    isSlideMoving: false,\n                    isTravellerMoving: true,\n                    movingTravellerId: id,\n                    brushMoveStartX: event.pageX\n                });\n                this.attachDragEndListener();\n            }\n        },\n        {\n            key: \"handleTravellerMove\",\n            value: function handleTravellerMove(e) {\n                var _this$state2 = this.state, brushMoveStartX = _this$state2.brushMoveStartX, movingTravellerId = _this$state2.movingTravellerId, endX = _this$state2.endX, startX = _this$state2.startX;\n                var prevValue = this.state[movingTravellerId];\n                var _this$props5 = this.props, x = _this$props5.x, width = _this$props5.width, travellerWidth = _this$props5.travellerWidth, onChange = _this$props5.onChange, gap = _this$props5.gap, data = _this$props5.data;\n                var params = {\n                    startX: this.state.startX,\n                    endX: this.state.endX\n                };\n                var delta = e.pageX - brushMoveStartX;\n                if (delta > 0) {\n                    delta = Math.min(delta, x + width - travellerWidth - prevValue);\n                } else if (delta < 0) {\n                    delta = Math.max(delta, x - prevValue);\n                }\n                params[movingTravellerId] = prevValue + delta;\n                var newIndex = this.getIndex(params);\n                var startIndex = newIndex.startIndex, endIndex = newIndex.endIndex;\n                var isFullGap = function isFullGap() {\n                    var lastIndex = data.length - 1;\n                    if (movingTravellerId === 'startX' && (endX > startX ? startIndex % gap === 0 : endIndex % gap === 0) || endX < startX && endIndex === lastIndex || movingTravellerId === 'endX' && (endX > startX ? endIndex % gap === 0 : startIndex % gap === 0) || endX > startX && endIndex === lastIndex) {\n                        return true;\n                    }\n                    return false;\n                };\n                this.setState(_defineProperty(_defineProperty({}, movingTravellerId, prevValue + delta), \"brushMoveStartX\", e.pageX), function() {\n                    if (onChange) {\n                        if (isFullGap()) {\n                            onChange(newIndex);\n                        }\n                    }\n                });\n            }\n        },\n        {\n            key: \"handleTravellerMoveKeyboard\",\n            value: function handleTravellerMoveKeyboard(direction, id) {\n                var _this2 = this;\n                // scaleValues are a list of coordinates. For example: [65, 250, 435, 620, 805, 990].\n                var _this$state3 = this.state, scaleValues = _this$state3.scaleValues, startX = _this$state3.startX, endX = _this$state3.endX;\n                // currentScaleValue refers to which coordinate the current traveller should be placed at.\n                var currentScaleValue = this.state[id];\n                var currentIndex = scaleValues.indexOf(currentScaleValue);\n                if (currentIndex === -1) {\n                    return;\n                }\n                var newIndex = currentIndex + direction;\n                if (newIndex === -1 || newIndex >= scaleValues.length) {\n                    return;\n                }\n                var newScaleValue = scaleValues[newIndex];\n                // Prevent travellers from being on top of each other or overlapping\n                if (id === 'startX' && newScaleValue >= endX || id === 'endX' && newScaleValue <= startX) {\n                    return;\n                }\n                this.setState(_defineProperty({}, id, newScaleValue), function() {\n                    _this2.props.onChange(_this2.getIndex({\n                        startX: _this2.state.startX,\n                        endX: _this2.state.endX\n                    }));\n                });\n            }\n        },\n        {\n            key: \"renderBackground\",\n            value: function renderBackground() {\n                var _this$props6 = this.props, x = _this$props6.x, y = _this$props6.y, width = _this$props6.width, height = _this$props6.height, fill = _this$props6.fill, stroke = _this$props6.stroke;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                    stroke: stroke,\n                    fill: fill,\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }\n        },\n        {\n            key: \"renderPanorama\",\n            value: function renderPanorama() {\n                var _this$props7 = this.props, x = _this$props7.x, y = _this$props7.y, width = _this$props7.width, height = _this$props7.height, data = _this$props7.data, children = _this$props7.children, padding = _this$props7.padding;\n                var chartElement = react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);\n                if (!chartElement) {\n                    return null;\n                }\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(chartElement, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    margin: padding,\n                    compact: true,\n                    data: data\n                });\n            }\n        },\n        {\n            key: \"renderTravellerLayer\",\n            value: function renderTravellerLayer(travellerX, id) {\n                var _data$startIndex, _data$endIndex, _this3 = this;\n                var _this$props8 = this.props, y = _this$props8.y, travellerWidth = _this$props8.travellerWidth, height = _this$props8.height, traveller = _this$props8.traveller, ariaLabel = _this$props8.ariaLabel, data = _this$props8.data, startIndex = _this$props8.startIndex, endIndex = _this$props8.endIndex;\n                var x = Math.max(travellerX, this.props.x);\n                var travellerProps = _objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(this.props, false)), {}, {\n                    x: x,\n                    y: y,\n                    width: travellerWidth,\n                    height: height\n                });\n                var ariaLabelBrush = ariaLabel || \"Min value: \".concat((_data$startIndex = data[startIndex]) === null || _data$startIndex === void 0 ? void 0 : _data$startIndex.name, \", Max value: \").concat((_data$endIndex = data[endIndex]) === null || _data$endIndex === void 0 ? void 0 : _data$endIndex.name);\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_7__.Layer, {\n                    tabIndex: 0,\n                    role: \"slider\",\n                    \"aria-label\": ariaLabelBrush,\n                    \"aria-valuenow\": travellerX,\n                    className: \"recharts-brush-traveller\",\n                    onMouseEnter: this.handleEnterSlideOrTraveller,\n                    onMouseLeave: this.handleLeaveSlideOrTraveller,\n                    onMouseDown: this.travellerDragStartHandlers[id],\n                    onTouchStart: this.travellerDragStartHandlers[id],\n                    onKeyDown: function onKeyDown(e) {\n                        if (![\n                            'ArrowLeft',\n                            'ArrowRight'\n                        ].includes(e.key)) {\n                            return;\n                        }\n                        e.preventDefault();\n                        e.stopPropagation();\n                        _this3.handleTravellerMoveKeyboard(e.key === 'ArrowRight' ? 1 : -1, id);\n                    },\n                    onFocus: function onFocus() {\n                        _this3.setState({\n                            isTravellerFocused: true\n                        });\n                    },\n                    onBlur: function onBlur() {\n                        _this3.setState({\n                            isTravellerFocused: false\n                        });\n                    },\n                    style: {\n                        cursor: 'col-resize'\n                    }\n                }, Brush.renderTraveller(traveller, travellerProps));\n            }\n        },\n        {\n            key: \"renderSlide\",\n            value: function renderSlide(startX, endX) {\n                var _this$props9 = this.props, y = _this$props9.y, height = _this$props9.height, stroke = _this$props9.stroke, travellerWidth = _this$props9.travellerWidth;\n                var x = Math.min(startX, endX) + travellerWidth;\n                var width = Math.max(Math.abs(endX - startX) - travellerWidth, 0);\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                    className: \"recharts-brush-slide\",\n                    onMouseEnter: this.handleEnterSlideOrTraveller,\n                    onMouseLeave: this.handleLeaveSlideOrTraveller,\n                    onMouseDown: this.handleSlideDragStart,\n                    onTouchStart: this.handleSlideDragStart,\n                    style: {\n                        cursor: 'move'\n                    },\n                    stroke: \"none\",\n                    fill: stroke,\n                    fillOpacity: 0.2,\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }\n        },\n        {\n            key: \"renderText\",\n            value: function renderText() {\n                var _this$props10 = this.props, startIndex = _this$props10.startIndex, endIndex = _this$props10.endIndex, y = _this$props10.y, height = _this$props10.height, travellerWidth = _this$props10.travellerWidth, stroke = _this$props10.stroke;\n                var _this$state4 = this.state, startX = _this$state4.startX, endX = _this$state4.endX;\n                var offset = 5;\n                var attrs = {\n                    pointerEvents: 'none',\n                    fill: stroke\n                };\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_7__.Layer, {\n                    className: \"recharts-brush-texts\"\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_component_Text__WEBPACK_IMPORTED_MODULE_8__.Text, _extends({\n                    textAnchor: \"end\",\n                    verticalAnchor: \"middle\",\n                    x: Math.min(startX, endX) - offset,\n                    y: y + height / 2\n                }, attrs), this.getTextOfTick(startIndex)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_component_Text__WEBPACK_IMPORTED_MODULE_8__.Text, _extends({\n                    textAnchor: \"start\",\n                    verticalAnchor: \"middle\",\n                    x: Math.max(startX, endX) + travellerWidth + offset,\n                    y: y + height / 2\n                }, attrs), this.getTextOfTick(endIndex)));\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this$props11 = this.props, data = _this$props11.data, className = _this$props11.className, children = _this$props11.children, x = _this$props11.x, y = _this$props11.y, width = _this$props11.width, height = _this$props11.height, alwaysShowText = _this$props11.alwaysShowText;\n                var _this$state5 = this.state, startX = _this$state5.startX, endX = _this$state5.endX, isTextActive = _this$state5.isTextActive, isSlideMoving = _this$state5.isSlideMoving, isTravellerMoving = _this$state5.isTravellerMoving, isTravellerFocused = _this$state5.isTravellerFocused;\n                if (!data || !data.length || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(x) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(y) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(width) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_9__.isNumber)(height) || width <= 0 || height <= 0) {\n                    return null;\n                }\n                var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-brush', className);\n                var isPanoramic = react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children) === 1;\n                var style = (0,_util_CssPrefixUtils__WEBPACK_IMPORTED_MODULE_10__.generatePrefixStyle)('userSelect', 'none');\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_7__.Layer, {\n                    className: layerClass,\n                    onMouseLeave: this.handleLeaveWrapper,\n                    onTouchMove: this.handleTouchMove,\n                    style: style\n                }, this.renderBackground(), isPanoramic && this.renderPanorama(), this.renderSlide(startX, endX), this.renderTravellerLayer(startX, 'startX'), this.renderTravellerLayer(endX, 'endX'), (isTextActive || isSlideMoving || isTravellerMoving || isTravellerFocused || alwaysShowText) && this.renderText());\n            }\n        }\n    ], [\n        {\n            key: \"renderDefaultTraveller\",\n            value: function renderDefaultTraveller(props) {\n                var x = props.x, y = props.y, width = props.width, height = props.height, stroke = props.stroke;\n                var lineY = Math.floor(y + height / 2) - 1;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height,\n                    fill: stroke,\n                    stroke: \"none\"\n                }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", {\n                    x1: x + 1,\n                    y1: lineY,\n                    x2: x + width - 1,\n                    y2: lineY,\n                    fill: \"none\",\n                    stroke: \"#fff\"\n                }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", {\n                    x1: x + 1,\n                    y1: lineY + 2,\n                    x2: x + width - 1,\n                    y2: lineY + 2,\n                    fill: \"none\",\n                    stroke: \"#fff\"\n                }));\n            }\n        },\n        {\n            key: \"renderTraveller\",\n            value: function renderTraveller(option, props) {\n                var rectangle;\n                if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n                    rectangle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, props);\n                } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default()(option)) {\n                    rectangle = option(props);\n                } else {\n                    rectangle = Brush.renderDefaultTraveller(props);\n                }\n                return rectangle;\n            }\n        },\n        {\n            key: \"getDerivedStateFromProps\",\n            value: function getDerivedStateFromProps(nextProps, prevState) {\n                var data = nextProps.data, width = nextProps.width, x = nextProps.x, travellerWidth = nextProps.travellerWidth, updateId = nextProps.updateId, startIndex = nextProps.startIndex, endIndex = nextProps.endIndex;\n                if (data !== prevState.prevData || updateId !== prevState.prevUpdateId) {\n                    return _objectSpread({\n                        prevData: data,\n                        prevTravellerWidth: travellerWidth,\n                        prevUpdateId: updateId,\n                        prevX: x,\n                        prevWidth: width\n                    }, data && data.length ? createScale({\n                        data: data,\n                        width: width,\n                        x: x,\n                        travellerWidth: travellerWidth,\n                        startIndex: startIndex,\n                        endIndex: endIndex\n                    }) : {\n                        scale: null,\n                        scaleValues: null\n                    });\n                }\n                if (prevState.scale && (width !== prevState.prevWidth || x !== prevState.prevX || travellerWidth !== prevState.prevTravellerWidth)) {\n                    prevState.scale.range([\n                        x,\n                        x + width - travellerWidth\n                    ]);\n                    var scaleValues = prevState.scale.domain().map(function(entry) {\n                        return prevState.scale(entry);\n                    });\n                    return {\n                        prevData: data,\n                        prevTravellerWidth: travellerWidth,\n                        prevUpdateId: updateId,\n                        prevX: x,\n                        prevWidth: width,\n                        startX: prevState.scale(nextProps.startIndex),\n                        endX: prevState.scale(nextProps.endIndex),\n                        scaleValues: scaleValues\n                    };\n                }\n                return null;\n            }\n        },\n        {\n            key: \"getIndexInRange\",\n            value: function getIndexInRange(valueRange, x) {\n                var len = valueRange.length;\n                var start = 0;\n                var end = len - 1;\n                while(end - start > 1){\n                    var middle = Math.floor((start + end) / 2);\n                    if (valueRange[middle] > x) {\n                        end = middle;\n                    } else {\n                        start = middle;\n                    }\n                }\n                return x >= valueRange[end] ? end : start;\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n_defineProperty(Brush, \"displayName\", 'Brush');\n_defineProperty(Brush, \"defaultProps\", {\n    height: 40,\n    travellerWidth: 5,\n    gap: 1,\n    fill: '#fff',\n    stroke: '#666',\n    padding: {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1\n    },\n    leaveTimeOut: 1000,\n    alwaysShowText: false\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Brush.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianAxis.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianAxis.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CartesianAxis: () => (/* binding */ CartesianAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/get */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ShallowEqual__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ShallowEqual */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ShallowEqual.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Text__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../component/Text */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Text.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../component/Label */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _getTicks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getTicks */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getTicks.js\");\nvar _excluded = [\n    \"viewBox\"\n], _excluded2 = [\n    \"viewBox\"\n], _excluded3 = [\n    \"ticks\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Cartesian Axis\n */ \n\n\n\n\n\n\n\n\n\n\n\n/** The orientation of the axis in correspondence to the chart */ /** A unit to be appended to a value */ /** The formatter function of tick */ var CartesianAxis = /*#__PURE__*/ function(_Component) {\n    function CartesianAxis(props) {\n        var _this;\n        _classCallCheck(this, CartesianAxis);\n        _this = _callSuper(this, CartesianAxis, [\n            props\n        ]);\n        _this.state = {\n            fontSize: '',\n            letterSpacing: ''\n        };\n        return _this;\n    }\n    _inherits(CartesianAxis, _Component);\n    return _createClass(CartesianAxis, [\n        {\n            key: \"shouldComponentUpdate\",\n            value: function shouldComponentUpdate(_ref, nextState) {\n                var viewBox = _ref.viewBox, restProps = _objectWithoutProperties(_ref, _excluded);\n                // props.viewBox is sometimes generated every time -\n                // check that specially as object equality is likely to fail\n                var _this$props = this.props, viewBoxOld = _this$props.viewBox, restPropsOld = _objectWithoutProperties(_this$props, _excluded2);\n                return !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_4__.shallowEqual)(viewBox, viewBoxOld) || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_4__.shallowEqual)(restProps, restPropsOld) || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_4__.shallowEqual)(nextState, this.state);\n            }\n        },\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                var htmlLayer = this.layerReference;\n                if (!htmlLayer) return;\n                var tick = htmlLayer.getElementsByClassName('recharts-cartesian-axis-tick-value')[0];\n                if (tick) {\n                    this.setState({\n                        fontSize: window.getComputedStyle(tick).fontSize,\n                        letterSpacing: window.getComputedStyle(tick).letterSpacing\n                    });\n                }\n            }\n        },\n        {\n            key: \"getTickLineCoord\",\n            value: function getTickLineCoord(data) {\n                var _this$props2 = this.props, x = _this$props2.x, y = _this$props2.y, width = _this$props2.width, height = _this$props2.height, orientation = _this$props2.orientation, tickSize = _this$props2.tickSize, mirror = _this$props2.mirror, tickMargin = _this$props2.tickMargin;\n                var x1, x2, y1, y2, tx, ty;\n                var sign = mirror ? -1 : 1;\n                var finalTickSize = data.tickSize || tickSize;\n                var tickCoord = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(data.tickCoord) ? data.tickCoord : data.coordinate;\n                switch(orientation){\n                    case 'top':\n                        x1 = x2 = data.coordinate;\n                        y2 = y + +!mirror * height;\n                        y1 = y2 - sign * finalTickSize;\n                        ty = y1 - sign * tickMargin;\n                        tx = tickCoord;\n                        break;\n                    case 'left':\n                        y1 = y2 = data.coordinate;\n                        x2 = x + +!mirror * width;\n                        x1 = x2 - sign * finalTickSize;\n                        tx = x1 - sign * tickMargin;\n                        ty = tickCoord;\n                        break;\n                    case 'right':\n                        y1 = y2 = data.coordinate;\n                        x2 = x + +mirror * width;\n                        x1 = x2 + sign * finalTickSize;\n                        tx = x1 + sign * tickMargin;\n                        ty = tickCoord;\n                        break;\n                    default:\n                        x1 = x2 = data.coordinate;\n                        y2 = y + +mirror * height;\n                        y1 = y2 + sign * finalTickSize;\n                        ty = y1 + sign * tickMargin;\n                        tx = tickCoord;\n                        break;\n                }\n                return {\n                    line: {\n                        x1: x1,\n                        y1: y1,\n                        x2: x2,\n                        y2: y2\n                    },\n                    tick: {\n                        x: tx,\n                        y: ty\n                    }\n                };\n            }\n        },\n        {\n            key: \"getTickTextAnchor\",\n            value: function getTickTextAnchor() {\n                var _this$props3 = this.props, orientation = _this$props3.orientation, mirror = _this$props3.mirror;\n                var textAnchor;\n                switch(orientation){\n                    case 'left':\n                        textAnchor = mirror ? 'start' : 'end';\n                        break;\n                    case 'right':\n                        textAnchor = mirror ? 'end' : 'start';\n                        break;\n                    default:\n                        textAnchor = 'middle';\n                        break;\n                }\n                return textAnchor;\n            }\n        },\n        {\n            key: \"getTickVerticalAnchor\",\n            value: function getTickVerticalAnchor() {\n                var _this$props4 = this.props, orientation = _this$props4.orientation, mirror = _this$props4.mirror;\n                var verticalAnchor = 'end';\n                switch(orientation){\n                    case 'left':\n                    case 'right':\n                        verticalAnchor = 'middle';\n                        break;\n                    case 'top':\n                        verticalAnchor = mirror ? 'start' : 'end';\n                        break;\n                    default:\n                        verticalAnchor = mirror ? 'end' : 'start';\n                        break;\n                }\n                return verticalAnchor;\n            }\n        },\n        {\n            key: \"renderAxisLine\",\n            value: function renderAxisLine() {\n                var _this$props5 = this.props, x = _this$props5.x, y = _this$props5.y, width = _this$props5.width, height = _this$props5.height, orientation = _this$props5.orientation, mirror = _this$props5.mirror, axisLine = _this$props5.axisLine;\n                var props = _objectSpread(_objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(this.props, false)), (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(axisLine, false)), {}, {\n                    fill: 'none'\n                });\n                if (orientation === 'top' || orientation === 'bottom') {\n                    var needHeight = +(orientation === 'top' && !mirror || orientation === 'bottom' && mirror);\n                    props = _objectSpread(_objectSpread({}, props), {}, {\n                        x1: x,\n                        y1: y + needHeight * height,\n                        x2: x + width,\n                        y2: y + needHeight * height\n                    });\n                } else {\n                    var needWidth = +(orientation === 'left' && !mirror || orientation === 'right' && mirror);\n                    props = _objectSpread(_objectSpread({}, props), {}, {\n                        x1: x + needWidth * width,\n                        y1: y,\n                        x2: x + needWidth * width,\n                        y2: y + height\n                    });\n                }\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", _extends({}, props, {\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-cartesian-axis-line', lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(axisLine, 'className'))\n                }));\n            }\n        },\n        {\n            key: \"renderTicks\",\n            value: /**\n     * render the ticks\n     * @param {Array} ticks The ticks to actually render (overrides what was passed in props)\n     * @param {string} fontSize Fontsize to consider for tick spacing\n     * @param {string} letterSpacing Letterspacing to consider for tick spacing\n     * @return {ReactComponent} renderedTicks\n     */ function renderTicks(ticks, fontSize, letterSpacing) {\n                var _this2 = this;\n                var _this$props6 = this.props, tickLine = _this$props6.tickLine, stroke = _this$props6.stroke, tick = _this$props6.tick, tickFormatter = _this$props6.tickFormatter, unit = _this$props6.unit;\n                var finalTicks = (0,_getTicks__WEBPACK_IMPORTED_MODULE_7__.getTicks)(_objectSpread(_objectSpread({}, this.props), {}, {\n                    ticks: ticks\n                }), fontSize, letterSpacing);\n                var textAnchor = this.getTickTextAnchor();\n                var verticalAnchor = this.getTickVerticalAnchor();\n                var axisProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(this.props, false);\n                var customTickProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(tick, false);\n                var tickLineProps = _objectSpread(_objectSpread({}, axisProps), {}, {\n                    fill: 'none'\n                }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(tickLine, false));\n                var items = finalTicks.map(function(entry, i) {\n                    var _this2$getTickLineCoo = _this2.getTickLineCoord(entry), lineCoord = _this2$getTickLineCoo.line, tickCoord = _this2$getTickLineCoo.tick;\n                    var tickProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n                        textAnchor: textAnchor,\n                        verticalAnchor: verticalAnchor\n                    }, axisProps), {}, {\n                        stroke: 'none',\n                        fill: stroke\n                    }, customTickProps), tickCoord), {}, {\n                        index: i,\n                        payload: entry,\n                        visibleTicksCount: finalTicks.length,\n                        tickFormatter: tickFormatter\n                    });\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, _extends({\n                        className: \"recharts-cartesian-axis-tick\",\n                        key: \"tick-\".concat(entry.value, \"-\").concat(entry.coordinate, \"-\").concat(entry.tickCoord)\n                    }, (0,_util_types__WEBPACK_IMPORTED_MODULE_9__.adaptEventsOfChild)(_this2.props, entry, i)), tickLine && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", _extends({}, tickLineProps, lineCoord, {\n                        className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-cartesian-axis-tick-line', lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(tickLine, 'className'))\n                    })), tick && CartesianAxis.renderTickItem(tick, tickProps, \"\".concat(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(tickFormatter) ? tickFormatter(entry.value, i) : entry.value).concat(unit || '')));\n                });\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n                    className: \"recharts-cartesian-axis-ticks\"\n                }, items);\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this3 = this;\n                var _this$props7 = this.props, axisLine = _this$props7.axisLine, width = _this$props7.width, height = _this$props7.height, ticksGenerator = _this$props7.ticksGenerator, className = _this$props7.className, hide = _this$props7.hide;\n                if (hide) {\n                    return null;\n                }\n                var _this$props8 = this.props, ticks = _this$props8.ticks, noTicksProps = _objectWithoutProperties(_this$props8, _excluded3);\n                var finalTicks = ticks;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(ticksGenerator)) {\n                    finalTicks = ticks && ticks.length > 0 ? ticksGenerator(this.props) : ticksGenerator(noTicksProps);\n                }\n                if (width <= 0 || height <= 0 || !finalTicks || !finalTicks.length) {\n                    return null;\n                }\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, {\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-cartesian-axis', className),\n                    ref: function ref(_ref2) {\n                        _this3.layerReference = _ref2;\n                    }\n                }, axisLine && this.renderAxisLine(), this.renderTicks(finalTicks, this.state.fontSize, this.state.letterSpacing), _component_Label__WEBPACK_IMPORTED_MODULE_10__.Label.renderCallByParent(this.props));\n            }\n        }\n    ], [\n        {\n            key: \"renderTickItem\",\n            value: function renderTickItem(option, props, value) {\n                var tickItem;\n                var combinedClassName = (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(props.className, 'recharts-cartesian-axis-tick-value');\n                if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n                    tickItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, _objectSpread(_objectSpread({}, props), {}, {\n                        className: combinedClassName\n                    }));\n                } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n                    tickItem = option(_objectSpread(_objectSpread({}, props), {}, {\n                        className: combinedClassName\n                    }));\n                } else {\n                    tickItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_component_Text__WEBPACK_IMPORTED_MODULE_11__.Text, _extends({}, props, {\n                        className: \"recharts-cartesian-axis-tick-value\"\n                    }), value);\n                }\n                return tickItem;\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n_defineProperty(CartesianAxis, \"displayName\", 'CartesianAxis');\n_defineProperty(CartesianAxis, \"defaultProps\", {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    viewBox: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    },\n    // The orientation of axis\n    orientation: 'bottom',\n    // The ticks\n    ticks: [],\n    stroke: '#666',\n    tickLine: true,\n    axisLine: true,\n    tick: true,\n    mirror: false,\n    minTickGap: 5,\n    // The width or height of tick\n    tickSize: 6,\n    tickMargin: 2,\n    interval: 'preserveEnd'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianAxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianGrid.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianGrid.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CartesianGrid: () => (/* binding */ CartesianGrid)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _util_LogUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/LogUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _getTicks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getTicks */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getTicks.js\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CartesianAxis */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js\");\nvar _excluded = [\n    \"x1\",\n    \"y1\",\n    \"x2\",\n    \"y2\",\n    \"key\"\n], _excluded2 = [\n    \"offset\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n/**\n * @fileOverview Cartesian Grid\n */ \n\n\n\n\n\n\n\n\n/**\n * The <CartesianGrid horizontal\n */ var Background = function Background(props) {\n    var fill = props.fill;\n    if (!fill || fill === 'none') {\n        return null;\n    }\n    var fillOpacity = props.fillOpacity, x = props.x, y = props.y, width = props.width, height = props.height, ry = props.ry;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n        x: x,\n        y: y,\n        ry: ry,\n        width: width,\n        height: height,\n        stroke: \"none\",\n        fill: fill,\n        fillOpacity: fillOpacity,\n        className: \"recharts-cartesian-grid-bg\"\n    });\n};\nfunction renderLineItem(option, props) {\n    var lineItem;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n        // @ts-expect-error typescript does not see the props type when cloning an element\n        lineItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, props);\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n        lineItem = option(props);\n    } else {\n        var x1 = props.x1, y1 = props.y1, x2 = props.x2, y2 = props.y2, key = props.key, others = _objectWithoutProperties(props, _excluded);\n        var _filterProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(others, false), __ = _filterProps.offset, restOfFilteredProps = _objectWithoutProperties(_filterProps, _excluded2);\n        lineItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", _extends({}, restOfFilteredProps, {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            fill: \"none\",\n            key: key\n        }));\n    }\n    return lineItem;\n}\nfunction HorizontalGridLines(props) {\n    var x = props.x, width = props.width, _props$horizontal = props.horizontal, horizontal = _props$horizontal === void 0 ? true : _props$horizontal, horizontalPoints = props.horizontalPoints;\n    if (!horizontal || !horizontalPoints || !horizontalPoints.length) {\n        return null;\n    }\n    var items = horizontalPoints.map(function(entry, i) {\n        var lineItemProps = _objectSpread(_objectSpread({}, props), {}, {\n            x1: x,\n            y1: entry,\n            x2: x + width,\n            y2: entry,\n            key: \"line-\".concat(i),\n            index: i\n        });\n        return renderLineItem(horizontal, lineItemProps);\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        className: \"recharts-cartesian-grid-horizontal\"\n    }, items);\n}\nfunction VerticalGridLines(props) {\n    var y = props.y, height = props.height, _props$vertical = props.vertical, vertical = _props$vertical === void 0 ? true : _props$vertical, verticalPoints = props.verticalPoints;\n    if (!vertical || !verticalPoints || !verticalPoints.length) {\n        return null;\n    }\n    var items = verticalPoints.map(function(entry, i) {\n        var lineItemProps = _objectSpread(_objectSpread({}, props), {}, {\n            x1: entry,\n            y1: y,\n            x2: entry,\n            y2: y + height,\n            key: \"line-\".concat(i),\n            index: i\n        });\n        return renderLineItem(vertical, lineItemProps);\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        className: \"recharts-cartesian-grid-vertical\"\n    }, items);\n}\nfunction HorizontalStripes(props) {\n    var horizontalFill = props.horizontalFill, fillOpacity = props.fillOpacity, x = props.x, y = props.y, width = props.width, height = props.height, horizontalPoints = props.horizontalPoints, _props$horizontal2 = props.horizontal, horizontal = _props$horizontal2 === void 0 ? true : _props$horizontal2;\n    if (!horizontal || !horizontalFill || !horizontalFill.length) {\n        return null;\n    }\n    // Why =y -y? I was trying to find any difference that this makes, with floating point numbers and edge cases but ... nothing.\n    var roundedSortedHorizontalPoints = horizontalPoints.map(function(e) {\n        return Math.round(e + y - y);\n    }).sort(function(a, b) {\n        return a - b;\n    });\n    // Why is this condition `!==` instead of `<=` ?\n    if (y !== roundedSortedHorizontalPoints[0]) {\n        roundedSortedHorizontalPoints.unshift(0);\n    }\n    var items = roundedSortedHorizontalPoints.map(function(entry, i) {\n        // Why do we strip only the last stripe if it is invisible, and not all invisible stripes?\n        var lastStripe = !roundedSortedHorizontalPoints[i + 1];\n        var lineHeight = lastStripe ? y + height - entry : roundedSortedHorizontalPoints[i + 1] - entry;\n        if (lineHeight <= 0) {\n            return null;\n        }\n        var colorIndex = i % horizontalFill.length;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n            key: \"react-\".concat(i) // eslint-disable-line react/no-array-index-key\n            ,\n            y: entry,\n            x: x,\n            height: lineHeight,\n            width: width,\n            stroke: \"none\",\n            fill: horizontalFill[colorIndex],\n            fillOpacity: fillOpacity,\n            className: \"recharts-cartesian-grid-bg\"\n        });\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        className: \"recharts-cartesian-gridstripes-horizontal\"\n    }, items);\n}\nfunction VerticalStripes(props) {\n    var _props$vertical2 = props.vertical, vertical = _props$vertical2 === void 0 ? true : _props$vertical2, verticalFill = props.verticalFill, fillOpacity = props.fillOpacity, x = props.x, y = props.y, width = props.width, height = props.height, verticalPoints = props.verticalPoints;\n    if (!vertical || !verticalFill || !verticalFill.length) {\n        return null;\n    }\n    var roundedSortedVerticalPoints = verticalPoints.map(function(e) {\n        return Math.round(e + x - x);\n    }).sort(function(a, b) {\n        return a - b;\n    });\n    if (x !== roundedSortedVerticalPoints[0]) {\n        roundedSortedVerticalPoints.unshift(0);\n    }\n    var items = roundedSortedVerticalPoints.map(function(entry, i) {\n        var lastStripe = !roundedSortedVerticalPoints[i + 1];\n        var lineWidth = lastStripe ? x + width - entry : roundedSortedVerticalPoints[i + 1] - entry;\n        if (lineWidth <= 0) {\n            return null;\n        }\n        var colorIndex = i % verticalFill.length;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n            key: \"react-\".concat(i) // eslint-disable-line react/no-array-index-key\n            ,\n            x: entry,\n            y: y,\n            width: lineWidth,\n            height: height,\n            stroke: \"none\",\n            fill: verticalFill[colorIndex],\n            fillOpacity: fillOpacity,\n            className: \"recharts-cartesian-grid-bg\"\n        });\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        className: \"recharts-cartesian-gridstripes-vertical\"\n    }, items);\n}\nvar defaultVerticalCoordinatesGenerator = function defaultVerticalCoordinatesGenerator(_ref, syncWithTicks) {\n    var xAxis = _ref.xAxis, width = _ref.width, height = _ref.height, offset = _ref.offset;\n    return (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_3__.getCoordinatesOfGrid)((0,_getTicks__WEBPACK_IMPORTED_MODULE_4__.getTicks)(_objectSpread(_objectSpread(_objectSpread({}, _CartesianAxis__WEBPACK_IMPORTED_MODULE_5__.CartesianAxis.defaultProps), xAxis), {}, {\n        ticks: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_3__.getTicksOfAxis)(xAxis, true),\n        viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        }\n    })), offset.left, offset.left + offset.width, syncWithTicks);\n};\nvar defaultHorizontalCoordinatesGenerator = function defaultHorizontalCoordinatesGenerator(_ref2, syncWithTicks) {\n    var yAxis = _ref2.yAxis, width = _ref2.width, height = _ref2.height, offset = _ref2.offset;\n    return (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_3__.getCoordinatesOfGrid)((0,_getTicks__WEBPACK_IMPORTED_MODULE_4__.getTicks)(_objectSpread(_objectSpread(_objectSpread({}, _CartesianAxis__WEBPACK_IMPORTED_MODULE_5__.CartesianAxis.defaultProps), yAxis), {}, {\n        ticks: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_3__.getTicksOfAxis)(yAxis, true),\n        viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        }\n    })), offset.top, offset.top + offset.height, syncWithTicks);\n};\nvar defaultProps = {\n    horizontal: true,\n    vertical: true,\n    // The ordinates of horizontal grid lines\n    horizontalPoints: [],\n    // The abscissas of vertical grid lines\n    verticalPoints: [],\n    stroke: '#ccc',\n    fill: 'none',\n    // The fill of colors of grid lines\n    verticalFill: [],\n    horizontalFill: []\n};\nfunction CartesianGrid(props) {\n    var _props$stroke, _props$fill, _props$horizontal3, _props$horizontalFill, _props$vertical3, _props$verticalFill;\n    var chartWidth = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_6__.useChartWidth)();\n    var chartHeight = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_6__.useChartHeight)();\n    var offset = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_6__.useOffset)();\n    var propsIncludingDefaults = _objectSpread(_objectSpread({}, props), {}, {\n        stroke: (_props$stroke = props.stroke) !== null && _props$stroke !== void 0 ? _props$stroke : defaultProps.stroke,\n        fill: (_props$fill = props.fill) !== null && _props$fill !== void 0 ? _props$fill : defaultProps.fill,\n        horizontal: (_props$horizontal3 = props.horizontal) !== null && _props$horizontal3 !== void 0 ? _props$horizontal3 : defaultProps.horizontal,\n        horizontalFill: (_props$horizontalFill = props.horizontalFill) !== null && _props$horizontalFill !== void 0 ? _props$horizontalFill : defaultProps.horizontalFill,\n        vertical: (_props$vertical3 = props.vertical) !== null && _props$vertical3 !== void 0 ? _props$vertical3 : defaultProps.vertical,\n        verticalFill: (_props$verticalFill = props.verticalFill) !== null && _props$verticalFill !== void 0 ? _props$verticalFill : defaultProps.verticalFill,\n        x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(props.x) ? props.x : offset.left,\n        y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(props.y) ? props.y : offset.top,\n        width: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(props.width) ? props.width : offset.width,\n        height: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(props.height) ? props.height : offset.height\n    });\n    var x = propsIncludingDefaults.x, y = propsIncludingDefaults.y, width = propsIncludingDefaults.width, height = propsIncludingDefaults.height, syncWithTicks = propsIncludingDefaults.syncWithTicks, horizontalValues = propsIncludingDefaults.horizontalValues, verticalValues = propsIncludingDefaults.verticalValues;\n    // @ts-expect-error the scale prop is mixed up - we need to untagle this at some point\n    var xAxis = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_6__.useArbitraryXAxis)();\n    // @ts-expect-error the scale prop is mixed up - we need to untagle this at some point\n    var yAxis = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_6__.useYAxisWithFiniteDomainOrRandom)();\n    if (!(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(width) || width <= 0 || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(height) || height <= 0 || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(x) || x !== +x || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(y) || y !== +y) {\n        return null;\n    }\n    /*\n   * verticalCoordinatesGenerator and horizontalCoordinatesGenerator are defined\n   * outside of the propsIncludingDefaults because they were never part of the original props\n   * and they were never passed as a prop down to horizontal/vertical custom elements.\n   * If we add these two to propsIncludingDefaults then we are changing public API.\n   * Not a bad thing per se but also not necessary.\n   */ var verticalCoordinatesGenerator = propsIncludingDefaults.verticalCoordinatesGenerator || defaultVerticalCoordinatesGenerator;\n    var horizontalCoordinatesGenerator = propsIncludingDefaults.horizontalCoordinatesGenerator || defaultHorizontalCoordinatesGenerator;\n    var horizontalPoints = propsIncludingDefaults.horizontalPoints, verticalPoints = propsIncludingDefaults.verticalPoints;\n    // No horizontal points are specified\n    if ((!horizontalPoints || !horizontalPoints.length) && lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(horizontalCoordinatesGenerator)) {\n        var isHorizontalValues = horizontalValues && horizontalValues.length;\n        var generatorResult = horizontalCoordinatesGenerator({\n            yAxis: yAxis ? _objectSpread(_objectSpread({}, yAxis), {}, {\n                ticks: isHorizontalValues ? horizontalValues : yAxis.ticks\n            }) : undefined,\n            width: chartWidth,\n            height: chartHeight,\n            offset: offset\n        }, isHorizontalValues ? true : syncWithTicks);\n        (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_8__.warn)(Array.isArray(generatorResult), \"horizontalCoordinatesGenerator should return Array but instead it returned [\".concat(_typeof(generatorResult), \"]\"));\n        if (Array.isArray(generatorResult)) {\n            horizontalPoints = generatorResult;\n        }\n    }\n    // No vertical points are specified\n    if ((!verticalPoints || !verticalPoints.length) && lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(verticalCoordinatesGenerator)) {\n        var isVerticalValues = verticalValues && verticalValues.length;\n        var _generatorResult = verticalCoordinatesGenerator({\n            xAxis: xAxis ? _objectSpread(_objectSpread({}, xAxis), {}, {\n                ticks: isVerticalValues ? verticalValues : xAxis.ticks\n            }) : undefined,\n            width: chartWidth,\n            height: chartHeight,\n            offset: offset\n        }, isVerticalValues ? true : syncWithTicks);\n        (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_8__.warn)(Array.isArray(_generatorResult), \"verticalCoordinatesGenerator should return Array but instead it returned [\".concat(_typeof(_generatorResult), \"]\"));\n        if (Array.isArray(_generatorResult)) {\n            verticalPoints = _generatorResult;\n        }\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", {\n        className: \"recharts-cartesian-grid\"\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Background, {\n        fill: propsIncludingDefaults.fill,\n        fillOpacity: propsIncludingDefaults.fillOpacity,\n        x: propsIncludingDefaults.x,\n        y: propsIncludingDefaults.y,\n        width: propsIncludingDefaults.width,\n        height: propsIncludingDefaults.height,\n        ry: propsIncludingDefaults.ry\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(HorizontalGridLines, _extends({}, propsIncludingDefaults, {\n        offset: offset,\n        horizontalPoints: horizontalPoints,\n        xAxis: xAxis,\n        yAxis: yAxis\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(VerticalGridLines, _extends({}, propsIncludingDefaults, {\n        offset: offset,\n        verticalPoints: verticalPoints,\n        xAxis: xAxis,\n        yAxis: yAxis\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(HorizontalStripes, _extends({}, propsIncludingDefaults, {\n        horizontalPoints: horizontalPoints\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(VerticalStripes, _extends({}, propsIncludingDefaults, {\n        verticalPoints: verticalPoints\n    })));\n}\nCartesianGrid.displayName = 'CartesianGrid';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianGrid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ErrorBar.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ErrorBar.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorBar: () => (/* binding */ ErrorBar)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nvar _excluded = [\n    \"offset\",\n    \"layout\",\n    \"width\",\n    \"dataKey\",\n    \"data\",\n    \"dataPointFormatter\",\n    \"xAxis\",\n    \"yAxis\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Render a group of error bar\n */ \n\n\n\n// eslint-disable-next-line react/prefer-stateless-function -- requires static defaultProps\nvar ErrorBar = /*#__PURE__*/ function(_React$Component) {\n    function ErrorBar() {\n        _classCallCheck(this, ErrorBar);\n        return _callSuper(this, ErrorBar, arguments);\n    }\n    _inherits(ErrorBar, _React$Component);\n    return _createClass(ErrorBar, [\n        {\n            key: \"render\",\n            value: function render() {\n                var _this$props = this.props, offset = _this$props.offset, layout = _this$props.layout, width = _this$props.width, dataKey = _this$props.dataKey, data = _this$props.data, dataPointFormatter = _this$props.dataPointFormatter, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, others = _objectWithoutProperties(_this$props, _excluded);\n                var svgProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(others, false);\n                !!(this.props.direction === 'x' && xAxis.type !== 'number') ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'ErrorBar requires Axis type property to be \"number\".') : 0 : void 0;\n                var errorBars = data.map(function(entry) {\n                    var _dataPointFormatter = dataPointFormatter(entry, dataKey), x = _dataPointFormatter.x, y = _dataPointFormatter.y, value = _dataPointFormatter.value, errorVal = _dataPointFormatter.errorVal;\n                    if (!errorVal) {\n                        return null;\n                    }\n                    var lineCoordinates = [];\n                    var lowBound, highBound;\n                    if (Array.isArray(errorVal)) {\n                        var _errorVal = _slicedToArray(errorVal, 2);\n                        lowBound = _errorVal[0];\n                        highBound = _errorVal[1];\n                    } else {\n                        lowBound = highBound = errorVal;\n                    }\n                    if (layout === 'vertical') {\n                        // error bar for horizontal charts, the y is fixed, x is a range value\n                        var scale = xAxis.scale;\n                        var yMid = y + offset;\n                        var yMin = yMid + width;\n                        var yMax = yMid - width;\n                        var xMin = scale(value - lowBound);\n                        var xMax = scale(value + highBound);\n                        // the right line of |--|\n                        lineCoordinates.push({\n                            x1: xMax,\n                            y1: yMin,\n                            x2: xMax,\n                            y2: yMax\n                        });\n                        // the middle line of |--|\n                        lineCoordinates.push({\n                            x1: xMin,\n                            y1: yMid,\n                            x2: xMax,\n                            y2: yMid\n                        });\n                        // the left line of |--|\n                        lineCoordinates.push({\n                            x1: xMin,\n                            y1: yMin,\n                            x2: xMin,\n                            y2: yMax\n                        });\n                    } else if (layout === 'horizontal') {\n                        // error bar for horizontal charts, the x is fixed, y is a range value\n                        var _scale = yAxis.scale;\n                        var xMid = x + offset;\n                        var _xMin = xMid - width;\n                        var _xMax = xMid + width;\n                        var _yMin = _scale(value - lowBound);\n                        var _yMax = _scale(value + highBound);\n                        // the top line\n                        lineCoordinates.push({\n                            x1: _xMin,\n                            y1: _yMax,\n                            x2: _xMax,\n                            y2: _yMax\n                        });\n                        // the middle line\n                        lineCoordinates.push({\n                            x1: xMid,\n                            y1: _yMin,\n                            x2: xMid,\n                            y2: _yMax\n                        });\n                        // the bottom line\n                        lineCoordinates.push({\n                            x1: _xMin,\n                            y1: _yMin,\n                            x2: _xMax,\n                            y2: _yMin\n                        });\n                    }\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_3__.Layer, _extends({\n                        className: \"recharts-errorBar\",\n                        key: \"bar-\".concat(lineCoordinates.map(function(c) {\n                            return \"\".concat(c.x1, \"-\").concat(c.x2, \"-\").concat(c.y1, \"-\").concat(c.y2);\n                        }))\n                    }, svgProps), lineCoordinates.map(function(coordinates) {\n                        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", _extends({}, coordinates, {\n                            key: \"line-\".concat(coordinates.x1, \"-\").concat(coordinates.x2, \"-\").concat(coordinates.y1, \"-\").concat(coordinates.y2)\n                        }));\n                    }));\n                });\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_3__.Layer, {\n                    className: \"recharts-errorBars\"\n                }, errorBars);\n            }\n        }\n    ]);\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n_defineProperty(ErrorBar, \"defaultProps\", {\n    stroke: 'black',\n    strokeWidth: 1.5,\n    width: 5,\n    offset: 0,\n    layout: 'horizontal'\n});\n_defineProperty(ErrorBar, \"displayName\", 'ErrorBar');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ErrorBar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Line.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Line.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Line: () => (/* binding */ Line)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_smooth__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-smooth */ \"(ssr)/./node_modules/.pnpm/react-smooth@4.0.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-smooth/es6/index.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _shape_Curve__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shape/Curve */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Curve.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../shape/Dot */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_LabelList__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../component/LabelList */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/LabelList.js\");\n/* harmony import */ var _ErrorBar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ErrorBar */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\nvar _excluded = [\n    \"type\",\n    \"layout\",\n    \"connectNulls\",\n    \"ref\"\n], _excluded2 = [\n    \"key\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Line\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Line = /*#__PURE__*/ function(_PureComponent) {\n    function Line() {\n        var _this;\n        _classCallCheck(this, Line);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, Line, [].concat(args));\n        _defineProperty(_this, \"state\", {\n            isAnimationFinished: true,\n            totalLength: 0\n        });\n        _defineProperty(_this, \"generateSimpleStrokeDasharray\", function(totalLength, length) {\n            return \"\".concat(length, \"px \").concat(totalLength - length, \"px\");\n        });\n        _defineProperty(_this, \"getStrokeDasharray\", function(length, totalLength, lines) {\n            var lineLength = lines.reduce(function(pre, next) {\n                return pre + next;\n            });\n            // if lineLength is 0 return the default when no strokeDasharray is provided\n            if (!lineLength) {\n                return _this.generateSimpleStrokeDasharray(totalLength, length);\n            }\n            var count = Math.floor(length / lineLength);\n            var remainLength = length % lineLength;\n            var restLength = totalLength - length;\n            var remainLines = [];\n            for(var i = 0, sum = 0; i < lines.length; sum += lines[i], ++i){\n                if (sum + lines[i] > remainLength) {\n                    remainLines = [].concat(_toConsumableArray(lines.slice(0, i)), [\n                        remainLength - sum\n                    ]);\n                    break;\n                }\n            }\n            var emptyLines = remainLines.length % 2 === 0 ? [\n                0,\n                restLength\n            ] : [\n                restLength\n            ];\n            return [].concat(_toConsumableArray(Line.repeat(lines, count)), _toConsumableArray(remainLines), emptyLines).map(function(line) {\n                return \"\".concat(line, \"px\");\n            }).join(', ');\n        });\n        _defineProperty(_this, \"id\", (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.uniqueId)('recharts-line-'));\n        _defineProperty(_this, \"pathRef\", function(node) {\n            _this.mainCurve = node;\n        });\n        _defineProperty(_this, \"handleAnimationEnd\", function() {\n            _this.setState({\n                isAnimationFinished: true\n            });\n            if (_this.props.onAnimationEnd) {\n                _this.props.onAnimationEnd();\n            }\n        });\n        _defineProperty(_this, \"handleAnimationStart\", function() {\n            _this.setState({\n                isAnimationFinished: false\n            });\n            if (_this.props.onAnimationStart) {\n                _this.props.onAnimationStart();\n            }\n        });\n        return _this;\n    }\n    _inherits(Line, _PureComponent);\n    return _createClass(Line, [\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                if (!this.props.isAnimationActive) {\n                    return;\n                }\n                var totalLength = this.getTotalLength();\n                this.setState({\n                    totalLength: totalLength\n                });\n            }\n        },\n        {\n            key: \"componentDidUpdate\",\n            value: function componentDidUpdate() {\n                if (!this.props.isAnimationActive) {\n                    return;\n                }\n                var totalLength = this.getTotalLength();\n                if (totalLength !== this.state.totalLength) {\n                    this.setState({\n                        totalLength: totalLength\n                    });\n                }\n            }\n        },\n        {\n            key: \"getTotalLength\",\n            value: function getTotalLength() {\n                var curveDom = this.mainCurve;\n                try {\n                    return curveDom && curveDom.getTotalLength && curveDom.getTotalLength() || 0;\n                } catch (err) {\n                    return 0;\n                }\n            }\n        },\n        {\n            key: \"renderErrorBar\",\n            value: function renderErrorBar(needClip, clipPathId) {\n                if (this.props.isAnimationActive && !this.state.isAnimationFinished) {\n                    return null;\n                }\n                var _this$props = this.props, points = _this$props.points, xAxis = _this$props.xAxis, yAxis = _this$props.yAxis, layout = _this$props.layout, children = _this$props.children;\n                var errorBarItems = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.findAllByType)(children, _ErrorBar__WEBPACK_IMPORTED_MODULE_7__.ErrorBar);\n                if (!errorBarItems) {\n                    return null;\n                }\n                var dataPointFormatter = function dataPointFormatter(dataPoint, dataKey) {\n                    return {\n                        x: dataPoint.x,\n                        y: dataPoint.y,\n                        value: dataPoint.value,\n                        errorVal: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_8__.getValueByDataKey)(dataPoint.payload, dataKey)\n                    };\n                };\n                var errorBarProps = {\n                    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null\n                };\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, errorBarProps, errorBarItems.map(function(item) {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(item, {\n                        key: \"bar-\".concat(item.props.dataKey),\n                        data: points,\n                        xAxis: xAxis,\n                        yAxis: yAxis,\n                        layout: layout,\n                        dataPointFormatter: dataPointFormatter\n                    });\n                }));\n            }\n        },\n        {\n            key: \"renderDots\",\n            value: function renderDots(needClip, clipDot, clipPathId) {\n                var isAnimationActive = this.props.isAnimationActive;\n                if (isAnimationActive && !this.state.isAnimationFinished) {\n                    return null;\n                }\n                var _this$props2 = this.props, dot = _this$props2.dot, points = _this$props2.points, dataKey = _this$props2.dataKey;\n                var lineProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(this.props, false);\n                var customDotProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(dot, true);\n                var dots = points.map(function(entry, i) {\n                    var dotProps = _objectSpread(_objectSpread(_objectSpread({\n                        key: \"dot-\".concat(i),\n                        r: 3\n                    }, lineProps), customDotProps), {}, {\n                        index: i,\n                        cx: entry.x,\n                        cy: entry.y,\n                        value: entry.value,\n                        dataKey: dataKey,\n                        payload: entry.payload,\n                        points: points\n                    });\n                    return Line.renderDotItem(dot, dotProps);\n                });\n                var dotsProps = {\n                    clipPath: needClip ? \"url(#clipPath-\".concat(clipDot ? '' : 'dots-').concat(clipPathId, \")\") : null\n                };\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, _extends({\n                    className: \"recharts-line-dots\",\n                    key: \"dots\"\n                }, dotsProps), dots);\n            }\n        },\n        {\n            key: \"renderCurveStatically\",\n            value: function renderCurveStatically(points, needClip, clipPathId, props) {\n                var _this$props3 = this.props, type = _this$props3.type, layout = _this$props3.layout, connectNulls = _this$props3.connectNulls, ref = _this$props3.ref, others = _objectWithoutProperties(_this$props3, _excluded);\n                var curveProps = _objectSpread(_objectSpread(_objectSpread({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(others, true)), {}, {\n                    fill: 'none',\n                    className: 'recharts-line-curve',\n                    clipPath: needClip ? \"url(#clipPath-\".concat(clipPathId, \")\") : null,\n                    points: points\n                }, props), {}, {\n                    type: type,\n                    layout: layout,\n                    connectNulls: connectNulls\n                });\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Curve__WEBPACK_IMPORTED_MODULE_10__.Curve, _extends({}, curveProps, {\n                    pathRef: this.pathRef\n                }));\n            }\n        },\n        {\n            key: \"renderCurveWithAnimation\",\n            value: function renderCurveWithAnimation(needClip, clipPathId) {\n                var _this2 = this;\n                var _this$props4 = this.props, points = _this$props4.points, strokeDasharray = _this$props4.strokeDasharray, isAnimationActive = _this$props4.isAnimationActive, animationBegin = _this$props4.animationBegin, animationDuration = _this$props4.animationDuration, animationEasing = _this$props4.animationEasing, animationId = _this$props4.animationId, animateNewValues = _this$props4.animateNewValues, width = _this$props4.width, height = _this$props4.height;\n                var _this$state = this.state, prevPoints = _this$state.prevPoints, totalLength = _this$state.totalLength;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_smooth__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                    begin: animationBegin,\n                    duration: animationDuration,\n                    isActive: isAnimationActive,\n                    easing: animationEasing,\n                    from: {\n                        t: 0\n                    },\n                    to: {\n                        t: 1\n                    },\n                    key: \"line-\".concat(animationId),\n                    onAnimationEnd: this.handleAnimationEnd,\n                    onAnimationStart: this.handleAnimationStart\n                }, function(_ref) {\n                    var t = _ref.t;\n                    if (prevPoints) {\n                        var prevPointsDiffFactor = prevPoints.length / points.length;\n                        var stepData = points.map(function(entry, index) {\n                            var prevPointIndex = Math.floor(index * prevPointsDiffFactor);\n                            if (prevPoints[prevPointIndex]) {\n                                var prev = prevPoints[prevPointIndex];\n                                var interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.interpolateNumber)(prev.x, entry.x);\n                                var interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.interpolateNumber)(prev.y, entry.y);\n                                return _objectSpread(_objectSpread({}, entry), {}, {\n                                    x: interpolatorX(t),\n                                    y: interpolatorY(t)\n                                });\n                            }\n                            // magic number of faking previous x and y location\n                            if (animateNewValues) {\n                                var _interpolatorX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.interpolateNumber)(width * 2, entry.x);\n                                var _interpolatorY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.interpolateNumber)(height / 2, entry.y);\n                                return _objectSpread(_objectSpread({}, entry), {}, {\n                                    x: _interpolatorX(t),\n                                    y: _interpolatorY(t)\n                                });\n                            }\n                            return _objectSpread(_objectSpread({}, entry), {}, {\n                                x: entry.x,\n                                y: entry.y\n                            });\n                        });\n                        return _this2.renderCurveStatically(stepData, needClip, clipPathId);\n                    }\n                    var interpolator = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.interpolateNumber)(0, totalLength);\n                    var curLength = interpolator(t);\n                    var currentStrokeDasharray;\n                    if (strokeDasharray) {\n                        var lines = \"\".concat(strokeDasharray).split(/[,\\s]+/gim).map(function(num) {\n                            return parseFloat(num);\n                        });\n                        currentStrokeDasharray = _this2.getStrokeDasharray(curLength, totalLength, lines);\n                    } else {\n                        currentStrokeDasharray = _this2.generateSimpleStrokeDasharray(totalLength, curLength);\n                    }\n                    return _this2.renderCurveStatically(points, needClip, clipPathId, {\n                        strokeDasharray: currentStrokeDasharray\n                    });\n                });\n            }\n        },\n        {\n            key: \"renderCurve\",\n            value: function renderCurve(needClip, clipPathId) {\n                var _this$props5 = this.props, points = _this$props5.points, isAnimationActive = _this$props5.isAnimationActive;\n                var _this$state2 = this.state, prevPoints = _this$state2.prevPoints, totalLength = _this$state2.totalLength;\n                if (isAnimationActive && points && points.length && (!prevPoints && totalLength > 0 || !lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default()(prevPoints, points))) {\n                    return this.renderCurveWithAnimation(needClip, clipPathId);\n                }\n                return this.renderCurveStatically(points, needClip, clipPathId);\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _filterProps;\n                var _this$props6 = this.props, hide = _this$props6.hide, dot = _this$props6.dot, points = _this$props6.points, className = _this$props6.className, xAxis = _this$props6.xAxis, yAxis = _this$props6.yAxis, top = _this$props6.top, left = _this$props6.left, width = _this$props6.width, height = _this$props6.height, isAnimationActive = _this$props6.isAnimationActive, id = _this$props6.id;\n                if (hide || !points || !points.length) {\n                    return null;\n                }\n                var isAnimationFinished = this.state.isAnimationFinished;\n                var hasSinglePoint = points.length === 1;\n                var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('recharts-line', className);\n                var needClipX = xAxis && xAxis.allowDataOverflow;\n                var needClipY = yAxis && yAxis.allowDataOverflow;\n                var needClip = needClipX || needClipY;\n                var clipPathId = lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default()(id) ? this.id : id;\n                var _ref2 = (_filterProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(dot, false)) !== null && _filterProps !== void 0 ? _filterProps : {\n                    r: 3,\n                    strokeWidth: 2\n                }, _ref2$r = _ref2.r, r = _ref2$r === void 0 ? 3 : _ref2$r, _ref2$strokeWidth = _ref2.strokeWidth, strokeWidth = _ref2$strokeWidth === void 0 ? 2 : _ref2$strokeWidth;\n                var _ref3 = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.hasClipDot)(dot) ? dot : {}, _ref3$clipDot = _ref3.clipDot, clipDot = _ref3$clipDot === void 0 ? true : _ref3$clipDot;\n                var dotSize = r * 2 + strokeWidth;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, {\n                    className: layerClass\n                }, needClipX || needClipY ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"clipPath\", {\n                    id: \"clipPath-\".concat(clipPathId)\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                    x: needClipX ? left : left - width / 2,\n                    y: needClipY ? top : top - height / 2,\n                    width: needClipX ? width : width * 2,\n                    height: needClipY ? height : height * 2\n                })), !clipDot && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"clipPath\", {\n                    id: \"clipPath-dots-\".concat(clipPathId)\n                }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                    x: left - dotSize / 2,\n                    y: top - dotSize / 2,\n                    width: width + dotSize,\n                    height: height + dotSize\n                }))) : null, !hasSinglePoint && this.renderCurve(needClip, clipPathId), this.renderErrorBar(needClip, clipPathId), (hasSinglePoint || dot) && this.renderDots(needClip, clipDot, clipPathId), (!isAnimationActive || isAnimationFinished) && _component_LabelList__WEBPACK_IMPORTED_MODULE_12__.LabelList.renderCallByParent(this.props, points));\n            }\n        }\n    ], [\n        {\n            key: \"getDerivedStateFromProps\",\n            value: function getDerivedStateFromProps(nextProps, prevState) {\n                if (nextProps.animationId !== prevState.prevAnimationId) {\n                    return {\n                        prevAnimationId: nextProps.animationId,\n                        curPoints: nextProps.points,\n                        prevPoints: prevState.curPoints\n                    };\n                }\n                if (nextProps.points !== prevState.curPoints) {\n                    return {\n                        curPoints: nextProps.points\n                    };\n                }\n                return null;\n            }\n        },\n        {\n            key: \"repeat\",\n            value: function repeat(lines, count) {\n                var linesUnit = lines.length % 2 !== 0 ? [].concat(_toConsumableArray(lines), [\n                    0\n                ]) : lines;\n                var result = [];\n                for(var i = 0; i < count; ++i){\n                    result = [].concat(_toConsumableArray(result), _toConsumableArray(linesUnit));\n                }\n                return result;\n            }\n        },\n        {\n            key: \"renderDotItem\",\n            value: function renderDotItem(option, props) {\n                var dotItem;\n                if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n                    dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, props);\n                } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n                    dotItem = option(props);\n                } else {\n                    var key = props.key, dotProps = _objectWithoutProperties(props, _excluded2);\n                    var className = (0,clsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('recharts-line-dot', typeof option !== 'boolean' ? option.className : '');\n                    dotItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_13__.Dot, _extends({\n                        key: key\n                    }, dotProps, {\n                        className: className\n                    }));\n                }\n                return dotItem;\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n_defineProperty(Line, \"displayName\", 'Line');\n_defineProperty(Line, \"defaultProps\", {\n    xAxisId: 0,\n    yAxisId: 0,\n    connectNulls: false,\n    activeDot: true,\n    dot: true,\n    legendType: 'line',\n    stroke: '#3182bd',\n    strokeWidth: 1,\n    fill: '#fff',\n    points: [],\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_14__.Global.isSsr,\n    animateNewValues: true,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease',\n    hide: false,\n    label: false\n});\n/**\n * Compose the data of each group\n * @param {Object} props The props from the component\n * @param  {Object} xAxis   The configuration of x-axis\n * @param  {Object} yAxis   The configuration of y-axis\n * @param  {String} dataKey The unique key of a group\n * @return {Array}  Composed data\n */ _defineProperty(Line, \"getComposedData\", function(_ref4) {\n    var props = _ref4.props, xAxis = _ref4.xAxis, yAxis = _ref4.yAxis, xAxisTicks = _ref4.xAxisTicks, yAxisTicks = _ref4.yAxisTicks, dataKey = _ref4.dataKey, bandSize = _ref4.bandSize, displayedData = _ref4.displayedData, offset = _ref4.offset;\n    var layout = props.layout;\n    var points = displayedData.map(function(entry, index) {\n        var value = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_8__.getValueByDataKey)(entry, dataKey);\n        if (layout === 'horizontal') {\n            return {\n                x: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_8__.getCateCoordinateOfLine)({\n                    axis: xAxis,\n                    ticks: xAxisTicks,\n                    bandSize: bandSize,\n                    entry: entry,\n                    index: index\n                }),\n                y: lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default()(value) ? null : yAxis.scale(value),\n                value: value,\n                payload: entry\n            };\n        }\n        return {\n            x: lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default()(value) ? null : xAxis.scale(value),\n            y: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_8__.getCateCoordinateOfLine)({\n                axis: yAxis,\n                ticks: yAxisTicks,\n                bandSize: bandSize,\n                entry: entry,\n                index: index\n            }),\n            value: value,\n            payload: entry\n        };\n    });\n    return _objectSpread({\n        points: points,\n        layout: layout\n    }, offset);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Line.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceArea.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceArea.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReferenceArea: () => (/* binding */ ReferenceArea)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../component/Label */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _util_CartesianUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/CartesianUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js\");\n/* harmony import */ var _util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/IfOverflowMatches */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_LogUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/LogUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\");\n/* harmony import */ var _shape_Rectangle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shape/Rectangle */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Reference Line\n */ \n\n\n\n\n\n\n\n\n\n\nvar getRect = function getRect(hasX1, hasX2, hasY1, hasY2, props) {\n    var xValue1 = props.x1, xValue2 = props.x2, yValue1 = props.y1, yValue2 = props.y2, xAxis = props.xAxis, yAxis = props.yAxis;\n    if (!xAxis || !yAxis) return null;\n    var scales = (0,_util_CartesianUtils__WEBPACK_IMPORTED_MODULE_3__.createLabeledScales)({\n        x: xAxis.scale,\n        y: yAxis.scale\n    });\n    var p1 = {\n        x: hasX1 ? scales.x.apply(xValue1, {\n            position: 'start'\n        }) : scales.x.rangeMin,\n        y: hasY1 ? scales.y.apply(yValue1, {\n            position: 'start'\n        }) : scales.y.rangeMin\n    };\n    var p2 = {\n        x: hasX2 ? scales.x.apply(xValue2, {\n            position: 'end'\n        }) : scales.x.rangeMax,\n        y: hasY2 ? scales.y.apply(yValue2, {\n            position: 'end'\n        }) : scales.y.rangeMax\n    };\n    if ((0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(props, 'discard') && (!scales.isInRange(p1) || !scales.isInRange(p2))) {\n        return null;\n    }\n    return (0,_util_CartesianUtils__WEBPACK_IMPORTED_MODULE_3__.rectWithPoints)(p1, p2);\n};\n// eslint-disable-next-line react/prefer-stateless-function -- requires static defaultProps\nvar ReferenceArea = /*#__PURE__*/ function(_React$Component) {\n    function ReferenceArea() {\n        _classCallCheck(this, ReferenceArea);\n        return _callSuper(this, ReferenceArea, arguments);\n    }\n    _inherits(ReferenceArea, _React$Component);\n    return _createClass(ReferenceArea, [\n        {\n            key: \"render\",\n            value: function render() {\n                var _this$props = this.props, x1 = _this$props.x1, x2 = _this$props.x2, y1 = _this$props.y1, y2 = _this$props.y2, className = _this$props.className, alwaysShow = _this$props.alwaysShow, clipPathId = _this$props.clipPathId;\n                (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_5__.warn)(alwaysShow === undefined, 'The alwaysShow prop is deprecated. Please use ifOverflow=\"extendDomain\" instead.');\n                var hasX1 = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_6__.isNumOrStr)(x1);\n                var hasX2 = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_6__.isNumOrStr)(x2);\n                var hasY1 = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_6__.isNumOrStr)(y1);\n                var hasY2 = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_6__.isNumOrStr)(y2);\n                var shape = this.props.shape;\n                if (!hasX1 && !hasX2 && !hasY1 && !hasY2 && !shape) {\n                    return null;\n                }\n                var rect = getRect(hasX1, hasX2, hasY1, hasY2, this.props);\n                if (!rect && !shape) {\n                    return null;\n                }\n                var clipPath = (0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(this.props, 'hidden') ? \"url(#\".concat(clipPathId, \")\") : undefined;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_7__.Layer, {\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('recharts-reference-area', className)\n                }, ReferenceArea.renderRect(shape, _objectSpread(_objectSpread({\n                    clipPath: clipPath\n                }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_8__.filterProps)(this.props, true)), rect)), _component_Label__WEBPACK_IMPORTED_MODULE_9__.Label.renderCallByParent(this.props, rect));\n            }\n        }\n    ]);\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n_defineProperty(ReferenceArea, \"displayName\", 'ReferenceArea');\n_defineProperty(ReferenceArea, \"defaultProps\", {\n    isFront: false,\n    ifOverflow: 'discard',\n    xAxisId: 0,\n    yAxisId: 0,\n    r: 10,\n    fill: '#ccc',\n    fillOpacity: 0.5,\n    stroke: 'none',\n    strokeWidth: 1\n});\n_defineProperty(ReferenceArea, \"renderRect\", function(option, props) {\n    var rect;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n        rect = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, props);\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n        rect = option(props);\n    } else {\n        rect = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Rectangle__WEBPACK_IMPORTED_MODULE_10__.Rectangle, _extends({}, props, {\n            className: \"recharts-reference-area-rect\"\n        }));\n    }\n    return rect;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceArea.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceDot.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceDot.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReferenceDot: () => (/* binding */ ReferenceDot)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shape/Dot */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../component/Label */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/IfOverflowMatches */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js\");\n/* harmony import */ var _util_CartesianUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/CartesianUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js\");\n/* harmony import */ var _util_LogUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/LogUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Reference Dot\n */ \n\n\n\n\n\n\n\n\n\n\nvar getCoordinate = function getCoordinate(props) {\n    var x = props.x, y = props.y, xAxis = props.xAxis, yAxis = props.yAxis;\n    var scales = (0,_util_CartesianUtils__WEBPACK_IMPORTED_MODULE_3__.createLabeledScales)({\n        x: xAxis.scale,\n        y: yAxis.scale\n    });\n    var result = scales.apply({\n        x: x,\n        y: y\n    }, {\n        bandAware: true\n    });\n    if ((0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(props, 'discard') && !scales.isInRange(result)) {\n        return null;\n    }\n    return result;\n};\n// eslint-disable-next-line react/prefer-stateless-function -- requires static defaultProps\nvar ReferenceDot = /*#__PURE__*/ function(_React$Component) {\n    function ReferenceDot() {\n        _classCallCheck(this, ReferenceDot);\n        return _callSuper(this, ReferenceDot, arguments);\n    }\n    _inherits(ReferenceDot, _React$Component);\n    return _createClass(ReferenceDot, [\n        {\n            key: \"render\",\n            value: function render() {\n                var _this$props = this.props, x = _this$props.x, y = _this$props.y, r = _this$props.r, alwaysShow = _this$props.alwaysShow, clipPathId = _this$props.clipPathId;\n                var isX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumOrStr)(x);\n                var isY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumOrStr)(y);\n                (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_6__.warn)(alwaysShow === undefined, 'The alwaysShow prop is deprecated. Please use ifOverflow=\"extendDomain\" instead.');\n                if (!isX || !isY) {\n                    return null;\n                }\n                var coordinate = getCoordinate(this.props);\n                if (!coordinate) {\n                    return null;\n                }\n                var cx = coordinate.x, cy = coordinate.y;\n                var _this$props2 = this.props, shape = _this$props2.shape, className = _this$props2.className;\n                var clipPath = (0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(this.props, 'hidden') ? \"url(#\".concat(clipPathId, \")\") : undefined;\n                var dotProps = _objectSpread(_objectSpread({\n                    clipPath: clipPath\n                }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__.filterProps)(this.props, true)), {}, {\n                    cx: cx,\n                    cy: cy\n                });\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_8__.Layer, {\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('recharts-reference-dot', className)\n                }, ReferenceDot.renderDot(shape, dotProps), _component_Label__WEBPACK_IMPORTED_MODULE_9__.Label.renderCallByParent(this.props, {\n                    x: cx - r,\n                    y: cy - r,\n                    width: 2 * r,\n                    height: 2 * r\n                }));\n            }\n        }\n    ]);\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n_defineProperty(ReferenceDot, \"displayName\", 'ReferenceDot');\n_defineProperty(ReferenceDot, \"defaultProps\", {\n    isFront: false,\n    ifOverflow: 'discard',\n    xAxisId: 0,\n    yAxisId: 0,\n    r: 10,\n    fill: '#fff',\n    stroke: '#ccc',\n    fillOpacity: 1,\n    strokeWidth: 1\n});\n_defineProperty(ReferenceDot, \"renderDot\", function(option, props) {\n    var dot;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n        dot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, props);\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n        dot = option(props);\n    } else {\n        dot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_10__.Dot, _extends({}, props, {\n            cx: props.cx,\n            cy: props.cy,\n            className: \"recharts-reference-dot-dot\"\n        }));\n    }\n    return dot;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceDot.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceLine.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceLine.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReferenceLine: () => (/* binding */ ReferenceLine),\n/* harmony export */   getEndPoints: () => (/* binding */ getEndPoints)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_some__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/some */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/some.js\");\n/* harmony import */ var lodash_some__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_some__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Label__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../component/Label */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/IfOverflowMatches */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_CartesianUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/CartesianUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js\");\n/* harmony import */ var _util_LogUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/LogUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n/**\n * @fileOverview Reference Line\n */ \n\n\n\n\n\n\n\n\n\n\n\n/**\n * This excludes `viewBox` prop from svg for two reasons:\n * 1. The components wants viewBox of object type, and svg wants string\n *    - so there's a conflict, and the component will throw if it gets string\n * 2. Internally the component calls `filterProps` which filters the viewBox away anyway\n */ var renderLine = function renderLine(option, props) {\n    var line;\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(option)) {\n        line = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(option, props);\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n        line = option(props);\n    } else {\n        line = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", _extends({}, props, {\n            className: \"recharts-reference-line-line\"\n        }));\n    }\n    return line;\n};\n// TODO: ScaleHelper\nvar getEndPoints = function getEndPoints(scales, isFixedX, isFixedY, isSegment, viewBox, position, xAxisOrientation, yAxisOrientation, props) {\n    var x = viewBox.x, y = viewBox.y, width = viewBox.width, height = viewBox.height;\n    if (isFixedY) {\n        var yCoord = props.y;\n        var coord = scales.y.apply(yCoord, {\n            position: position\n        });\n        if ((0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(props, 'discard') && !scales.y.isInRange(coord)) {\n            return null;\n        }\n        var points = [\n            {\n                x: x + width,\n                y: coord\n            },\n            {\n                x: x,\n                y: coord\n            }\n        ];\n        return yAxisOrientation === 'left' ? points.reverse() : points;\n    }\n    if (isFixedX) {\n        var xCoord = props.x;\n        var _coord = scales.x.apply(xCoord, {\n            position: position\n        });\n        if ((0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(props, 'discard') && !scales.x.isInRange(_coord)) {\n            return null;\n        }\n        var _points = [\n            {\n                x: _coord,\n                y: y + height\n            },\n            {\n                x: _coord,\n                y: y\n            }\n        ];\n        return xAxisOrientation === 'top' ? _points.reverse() : _points;\n    }\n    if (isSegment) {\n        var segment = props.segment;\n        var _points2 = segment.map(function(p) {\n            return scales.apply(p, {\n                position: position\n            });\n        });\n        if ((0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(props, 'discard') && lodash_some__WEBPACK_IMPORTED_MODULE_2___default()(_points2, function(p) {\n            return !scales.isInRange(p);\n        })) {\n            return null;\n        }\n        return _points2;\n    }\n    return null;\n};\nfunction ReferenceLineImpl(props) {\n    var fixedX = props.x, fixedY = props.y, segment = props.segment, xAxisId = props.xAxisId, yAxisId = props.yAxisId, shape = props.shape, className = props.className, alwaysShow = props.alwaysShow;\n    var clipPathId = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_5__.useClipPathId)();\n    var xAxis = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_5__.useXAxisOrThrow)(xAxisId);\n    var yAxis = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_5__.useYAxisOrThrow)(yAxisId);\n    var viewBox = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_5__.useViewBox)();\n    if (!clipPathId || !viewBox) {\n        return null;\n    }\n    (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_6__.warn)(alwaysShow === undefined, 'The alwaysShow prop is deprecated. Please use ifOverflow=\"extendDomain\" instead.');\n    var scales = (0,_util_CartesianUtils__WEBPACK_IMPORTED_MODULE_7__.createLabeledScales)({\n        x: xAxis.scale,\n        y: yAxis.scale\n    });\n    var isX = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_8__.isNumOrStr)(fixedX);\n    var isY = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_8__.isNumOrStr)(fixedY);\n    var isSegment = segment && segment.length === 2;\n    var endPoints = getEndPoints(scales, isX, isY, isSegment, viewBox, props.position, xAxis.orientation, yAxis.orientation, props);\n    if (!endPoints) {\n        return null;\n    }\n    var _endPoints = _slicedToArray(endPoints, 2), _endPoints$ = _endPoints[0], x1 = _endPoints$.x, y1 = _endPoints$.y, _endPoints$2 = _endPoints[1], x2 = _endPoints$2.x, y2 = _endPoints$2.y;\n    var clipPath = (0,_util_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(props, 'hidden') ? \"url(#\".concat(clipPathId, \")\") : undefined;\n    var lineProps = _objectSpread(_objectSpread({\n        clipPath: clipPath\n    }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_9__.filterProps)(props, true)), {}, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_10__.Layer, {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-reference-line', className)\n    }, renderLine(shape, lineProps), _component_Label__WEBPACK_IMPORTED_MODULE_11__.Label.renderCallByParent(props, (0,_util_CartesianUtils__WEBPACK_IMPORTED_MODULE_7__.rectWithCoords)({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n    })));\n}\n// eslint-disable-next-line react/prefer-stateless-function -- requires static defaultProps\nvar ReferenceLine = /*#__PURE__*/ function(_React$Component) {\n    function ReferenceLine() {\n        _classCallCheck(this, ReferenceLine);\n        return _callSuper(this, ReferenceLine, arguments);\n    }\n    _inherits(ReferenceLine, _React$Component);\n    return _createClass(ReferenceLine, [\n        {\n            key: \"render\",\n            value: function render() {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ReferenceLineImpl, this.props);\n            }\n        }\n    ]);\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n_defineProperty(ReferenceLine, \"displayName\", 'ReferenceLine');\n_defineProperty(ReferenceLine, \"defaultProps\", {\n    isFront: false,\n    ifOverflow: 'discard',\n    xAxisId: 0,\n    yAxisId: 0,\n    fill: 'none',\n    stroke: '#ccc',\n    fillOpacity: 1,\n    strokeWidth: 1,\n    position: 'middle'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceLine.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/XAxis.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/XAxis.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   XAxis: () => (/* binding */ XAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CartesianAxis */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n/**\n * @fileOverview X Axis\n */ \n\n\n\n\n/** Define of XAxis props */ function XAxisImpl(_ref) {\n    var xAxisId = _ref.xAxisId;\n    var width = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__.useChartWidth)();\n    var height = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__.useChartHeight)();\n    var axisOptions = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__.useXAxisOrThrow)(xAxisId);\n    if (axisOptions == null) {\n        return null;\n    }\n    return(/*#__PURE__*/ // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CartesianAxis__WEBPACK_IMPORTED_MODULE_3__.CartesianAxis, _extends({}, axisOptions, {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"recharts-\".concat(axisOptions.axisType, \" \").concat(axisOptions.axisType), axisOptions.className),\n        viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        },\n        ticksGenerator: function ticksGenerator(axis) {\n            return (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_4__.getTicksOfAxis)(axis, true);\n        }\n    })));\n}\n// eslint-disable-next-line react/prefer-stateless-function -- requires static defaultProps\nvar XAxis = /*#__PURE__*/ function(_React$Component) {\n    function XAxis() {\n        _classCallCheck(this, XAxis);\n        return _callSuper(this, XAxis, arguments);\n    }\n    _inherits(XAxis, _React$Component);\n    return _createClass(XAxis, [\n        {\n            key: \"render\",\n            value: function render() {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(XAxisImpl, this.props);\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n_defineProperty(XAxis, \"displayName\", 'XAxis');\n_defineProperty(XAxis, \"defaultProps\", {\n    allowDecimals: true,\n    hide: false,\n    orientation: 'bottom',\n    width: 0,\n    height: 30,\n    mirror: false,\n    xAxisId: 0,\n    tickCount: 5,\n    type: 'category',\n    padding: {\n        left: 0,\n        right: 0\n    },\n    allowDataOverflow: false,\n    scale: 'auto',\n    reversed: false,\n    allowDuplicatedCategory: true\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jYXJ0ZXNpYW4vWEF4aXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLFNBQVNBLFFBQVFDLENBQUM7SUFBSTtJQUEyQixPQUFPRCxVQUFVLGNBQWMsT0FBT0UsVUFBVSxZQUFZLE9BQU9BLE9BQU9DLFFBQVEsR0FBRyxTQUFVRixDQUFDO1FBQUksT0FBTyxPQUFPQTtJQUFHLElBQUksU0FBVUEsQ0FBQztRQUFJLE9BQU9BLEtBQUssY0FBYyxPQUFPQyxVQUFVRCxFQUFFLFdBQVcsS0FBS0MsVUFBVUQsTUFBTUMsT0FBT0UsU0FBUyxHQUFHLFdBQVcsT0FBT0g7SUFBRyxHQUFHRCxRQUFRQztBQUFJO0FBQzdULFNBQVNJLGdCQUFnQkMsUUFBUSxFQUFFQyxXQUFXO0lBQUksSUFBSSxDQUFFRCxDQUFBQSxvQkFBb0JDLFdBQVUsR0FBSTtRQUFFLE1BQU0sSUFBSUMsVUFBVTtJQUFzQztBQUFFO0FBQ3hKLFNBQVNDLGtCQUFrQkMsTUFBTSxFQUFFQyxLQUFLO0lBQUksSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELE1BQU1FLE1BQU0sRUFBRUQsSUFBSztRQUFFLElBQUlFLGFBQWFILEtBQUssQ0FBQ0MsRUFBRTtRQUFFRSxXQUFXQyxVQUFVLEdBQUdELFdBQVdDLFVBQVUsSUFBSTtRQUFPRCxXQUFXRSxZQUFZLEdBQUc7UUFBTSxJQUFJLFdBQVdGLFlBQVlBLFdBQVdHLFFBQVEsR0FBRztRQUFNQyxPQUFPQyxjQUFjLENBQUNULFFBQVFVLGVBQWVOLFdBQVdPLEdBQUcsR0FBR1A7SUFBYTtBQUFFO0FBQzVVLFNBQVNRLGFBQWFmLFdBQVcsRUFBRWdCLFVBQVUsRUFBRUMsV0FBVztJQUFJLElBQUlELFlBQVlkLGtCQUFrQkYsWUFBWUgsU0FBUyxFQUFFbUI7SUFBYSxJQUFJQyxhQUFhZixrQkFBa0JGLGFBQWFpQjtJQUFjTixPQUFPQyxjQUFjLENBQUNaLGFBQWEsYUFBYTtRQUFFVSxVQUFVO0lBQU07SUFBSSxPQUFPVjtBQUFhO0FBQzVSLFNBQVNrQixXQUFXQyxDQUFDLEVBQUV6QixDQUFDLEVBQUUwQixDQUFDO0lBQUksT0FBTzFCLElBQUkyQixnQkFBZ0IzQixJQUFJNEIsMkJBQTJCSCxHQUFHSSw4QkFBOEJDLFFBQVFDLFNBQVMsQ0FBQy9CLEdBQUcwQixLQUFLLEVBQUUsRUFBRUMsZ0JBQWdCRixHQUFHLFdBQVcsSUFBSXpCLEVBQUVnQyxLQUFLLENBQUNQLEdBQUdDO0FBQUs7QUFDMU0sU0FBU0UsMkJBQTJCSyxJQUFJLEVBQUVDLElBQUk7SUFBSSxJQUFJQSxRQUFTbkMsQ0FBQUEsUUFBUW1DLFVBQVUsWUFBWSxPQUFPQSxTQUFTLFVBQVMsR0FBSTtRQUFFLE9BQU9BO0lBQU0sT0FBTyxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUFFLE1BQU0sSUFBSTNCLFVBQVU7SUFBNkQ7SUFBRSxPQUFPNEIsdUJBQXVCRjtBQUFPO0FBQy9SLFNBQVNFLHVCQUF1QkYsSUFBSTtJQUFJLElBQUlBLFNBQVMsS0FBSyxHQUFHO1FBQUUsTUFBTSxJQUFJRyxlQUFlO0lBQThEO0lBQUUsT0FBT0g7QUFBTTtBQUNySyxTQUFTSjtJQUE4QixJQUFJO1FBQUUsSUFBSUosSUFBSSxDQUFDWSxRQUFRbEMsU0FBUyxDQUFDbUMsT0FBTyxDQUFDSixJQUFJLENBQUNKLFFBQVFDLFNBQVMsQ0FBQ00sU0FBUyxFQUFFLEVBQUUsWUFBYTtJQUFLLEVBQUUsT0FBT1osR0FBRyxDQUFDO0lBQUUsT0FBTyxDQUFDSSw0QkFBNEIsU0FBU0E7UUFBOEIsT0FBTyxDQUFDLENBQUNKO0lBQUc7QUFBTTtBQUNsUCxTQUFTRSxnQkFBZ0IzQixDQUFDO0lBQUkyQixrQkFBa0JWLE9BQU9zQixjQUFjLEdBQUd0QixPQUFPdUIsY0FBYyxDQUFDQyxJQUFJLEtBQUssU0FBU2QsZ0JBQWdCM0IsQ0FBQztRQUFJLE9BQU9BLEVBQUUwQyxTQUFTLElBQUl6QixPQUFPdUIsY0FBYyxDQUFDeEM7SUFBSTtJQUFHLE9BQU8yQixnQkFBZ0IzQjtBQUFJO0FBQ25OLFNBQVMyQyxVQUFVQyxRQUFRLEVBQUVDLFVBQVU7SUFBSSxJQUFJLE9BQU9BLGVBQWUsY0FBY0EsZUFBZSxNQUFNO1FBQUUsTUFBTSxJQUFJdEMsVUFBVTtJQUF1RDtJQUFFcUMsU0FBU3pDLFNBQVMsR0FBR2MsT0FBTzZCLE1BQU0sQ0FBQ0QsY0FBY0EsV0FBVzFDLFNBQVMsRUFBRTtRQUFFLGFBQWE7WUFBRTRDLE9BQU9IO1lBQVU1QixVQUFVO1lBQU1ELGNBQWM7UUFBSztJQUFFO0lBQUlFLE9BQU9DLGNBQWMsQ0FBQzBCLFVBQVUsYUFBYTtRQUFFNUIsVUFBVTtJQUFNO0lBQUksSUFBSTZCLFlBQVlHLGdCQUFnQkosVUFBVUM7QUFBYTtBQUNuYyxTQUFTRyxnQkFBZ0JoRCxDQUFDLEVBQUVpRCxDQUFDO0lBQUlELGtCQUFrQi9CLE9BQU9zQixjQUFjLEdBQUd0QixPQUFPc0IsY0FBYyxDQUFDRSxJQUFJLEtBQUssU0FBU08sZ0JBQWdCaEQsQ0FBQyxFQUFFaUQsQ0FBQztRQUFJakQsRUFBRTBDLFNBQVMsR0FBR087UUFBRyxPQUFPakQ7SUFBRztJQUFHLE9BQU9nRCxnQkFBZ0JoRCxHQUFHaUQ7QUFBSTtBQUN2TSxTQUFTQyxnQkFBZ0JDLEdBQUcsRUFBRS9CLEdBQUcsRUFBRTJCLEtBQUs7SUFBSTNCLE1BQU1ELGVBQWVDO0lBQU0sSUFBSUEsT0FBTytCLEtBQUs7UUFBRWxDLE9BQU9DLGNBQWMsQ0FBQ2lDLEtBQUsvQixLQUFLO1lBQUUyQixPQUFPQTtZQUFPakMsWUFBWTtZQUFNQyxjQUFjO1lBQU1DLFVBQVU7UUFBSztJQUFJLE9BQU87UUFBRW1DLEdBQUcsQ0FBQy9CLElBQUksR0FBRzJCO0lBQU87SUFBRSxPQUFPSTtBQUFLO0FBQzNPLFNBQVNoQyxlQUFlTSxDQUFDO0lBQUksSUFBSWQsSUFBSXlDLGFBQWEzQixHQUFHO0lBQVcsT0FBTyxZQUFZMUIsUUFBUVksS0FBS0EsSUFBSUEsSUFBSTtBQUFJO0FBQzVHLFNBQVN5QyxhQUFhM0IsQ0FBQyxFQUFFNEIsQ0FBQztJQUFJLElBQUksWUFBWXRELFFBQVEwQixNQUFNLENBQUNBLEdBQUcsT0FBT0E7SUFBRyxJQUFJQyxJQUFJRCxDQUFDLENBQUN4QixPQUFPcUQsV0FBVyxDQUFDO0lBQUUsSUFBSSxLQUFLLE1BQU01QixHQUFHO1FBQUUsSUFBSWYsSUFBSWUsRUFBRVEsSUFBSSxDQUFDVCxHQUFHNEIsS0FBSztRQUFZLElBQUksWUFBWXRELFFBQVFZLElBQUksT0FBT0E7UUFBRyxNQUFNLElBQUlKLFVBQVU7SUFBaUQ7SUFBRSxPQUFPLENBQUMsYUFBYThDLElBQUlFLFNBQVNDLE1BQUssRUFBRy9CO0FBQUk7QUFDM1QsU0FBU2dDO0lBQWFBLFdBQVd4QyxPQUFPeUMsTUFBTSxHQUFHekMsT0FBT3lDLE1BQU0sQ0FBQ2pCLElBQUksS0FBSyxTQUFVaEMsTUFBTTtRQUFJLElBQUssSUFBSUUsSUFBSSxHQUFHQSxJQUFJZ0QsVUFBVS9DLE1BQU0sRUFBRUQsSUFBSztZQUFFLElBQUlpRCxTQUFTRCxTQUFTLENBQUNoRCxFQUFFO1lBQUUsSUFBSyxJQUFJUyxPQUFPd0MsT0FBUTtnQkFBRSxJQUFJM0MsT0FBT2QsU0FBUyxDQUFDMEQsY0FBYyxDQUFDM0IsSUFBSSxDQUFDMEIsUUFBUXhDLE1BQU07b0JBQUVYLE1BQU0sQ0FBQ1csSUFBSSxHQUFHd0MsTUFBTSxDQUFDeEMsSUFBSTtnQkFBRTtZQUFFO1FBQUU7UUFBRSxPQUFPWDtJQUFRO0lBQUcsT0FBT2dELFNBQVN6QixLQUFLLENBQUMsSUFBSSxFQUFFMkI7QUFBWTtBQUNsVjs7Q0FFQyxHQUM4QjtBQUNQO0FBQ3VFO0FBQy9DO0FBQ0k7QUFFcEQsMEJBQTBCLEdBRTFCLFNBQVNVLFVBQVVDLElBQUk7SUFDckIsSUFBSUMsVUFBVUQsS0FBS0MsT0FBTztJQUMxQixJQUFJQyxRQUFRUCwwRUFBYUE7SUFDekIsSUFBSVEsU0FBU1QsMkVBQWNBO0lBQzNCLElBQUlVLGNBQWNSLDRFQUFlQSxDQUFDSztJQUNsQyxJQUFJRyxlQUFlLE1BQU07UUFDdkIsT0FBTztJQUNUO0lBQ0EsT0FDRSxXQUFXLEdBQ1gsd0ZBQXdGO0lBQ3hGWixnREFBbUIsQ0FBQ0sseURBQWFBLEVBQUVWLFNBQVMsQ0FBQyxHQUFHaUIsYUFBYTtRQUMzREUsV0FBV2IsZ0RBQUlBLENBQUMsWUFBWWMsTUFBTSxDQUFDSCxZQUFZSSxRQUFRLEVBQUUsS0FBS0QsTUFBTSxDQUFDSCxZQUFZSSxRQUFRLEdBQUdKLFlBQVlFLFNBQVM7UUFDakhHLFNBQVM7WUFDUEMsR0FBRztZQUNIQyxHQUFHO1lBQ0hULE9BQU9BO1lBQ1BDLFFBQVFBO1FBQ1Y7UUFDQVMsZ0JBQWdCLFNBQVNBLGVBQWVDLElBQUk7WUFDMUMsT0FBT2YsZ0VBQWNBLENBQUNlLE1BQU07UUFDOUI7SUFDRjtBQUVKO0FBRUEsMkZBQTJGO0FBQ3BGLElBQUlDLFFBQVEsV0FBVyxHQUFFLFNBQVVDLGdCQUFnQjtJQUN4RCxTQUFTRDtRQUNQaEYsZ0JBQWdCLElBQUksRUFBRWdGO1FBQ3RCLE9BQU81RCxXQUFXLElBQUksRUFBRTRELE9BQU96QjtJQUNqQztJQUNBaEIsVUFBVXlDLE9BQU9DO0lBQ2pCLE9BQU9oRSxhQUFhK0QsT0FBTztRQUFDO1lBQzFCaEUsS0FBSztZQUNMMkIsT0FBTyxTQUFTdUM7Z0JBQ2QsT0FBTyxXQUFXLEdBQUV4QixnREFBbUIsQ0FBQ08sV0FBVyxJQUFJLENBQUMzRCxLQUFLO1lBQy9EO1FBQ0Y7S0FBRTtBQUNKLEVBQUVvRCw0Q0FBZSxFQUFFO0FBQ25CWixnQkFBZ0JrQyxPQUFPLGVBQWU7QUFDdENsQyxnQkFBZ0JrQyxPQUFPLGdCQUFnQjtJQUNyQ0ksZUFBZTtJQUNmQyxNQUFNO0lBQ05DLGFBQWE7SUFDYmxCLE9BQU87SUFDUEMsUUFBUTtJQUNSa0IsUUFBUTtJQUNScEIsU0FBUztJQUNUcUIsV0FBVztJQUNYQyxNQUFNO0lBQ05DLFNBQVM7UUFDUEMsTUFBTTtRQUNOQyxPQUFPO0lBQ1Q7SUFDQUMsbUJBQW1CO0lBQ25CQyxPQUFPO0lBQ1BDLFVBQVU7SUFDVkMseUJBQXlCO0FBQzNCIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NhcnRlc2lhbi9YQXhpcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG8pIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7IHJldHVybiB0eXBlb2YgbzsgfSA6IGZ1bmN0aW9uIChvKSB7IHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9XG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBfdG9Qcm9wZXJ0eUtleShkZXNjcmlwdG9yLmtleSksIGRlc2NyaXB0b3IpOyB9IH1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7IHdyaXRhYmxlOiBmYWxzZSB9KTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5mdW5jdGlvbiBfY2FsbFN1cGVyKHQsIG8sIGUpIHsgcmV0dXJuIG8gPSBfZ2V0UHJvdG90eXBlT2YobyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHQsIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSA/IFJlZmxlY3QuY29uc3RydWN0KG8sIGUgfHwgW10sIF9nZXRQcm90b3R5cGVPZih0KS5jb25zdHJ1Y3RvcikgOiBvLmFwcGx5KHQsIGUpKTsgfVxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSBlbHNlIGlmIChjYWxsICE9PSB2b2lkIDApIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IHRyeSB7IHZhciB0ID0gIUJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgfSBjYXRjaCAodCkge30gcmV0dXJuIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgcmV0dXJuICEhdDsgfSkoKTsgfVxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzdWJDbGFzcywgXCJwcm90b3R5cGVcIiwgeyB3cml0YWJsZTogZmFsc2UgfSk7IGlmIChzdXBlckNsYXNzKSBfc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpOyB9XG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpIDogZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBrZXkgPSBfdG9Qcm9wZXJ0eUtleShrZXkpOyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBfZXh0ZW5kcygpIHsgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduID8gT2JqZWN0LmFzc2lnbi5iaW5kKCkgOiBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cbi8qKlxuICogQGZpbGVPdmVydmlldyBYIEF4aXNcbiAqL1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyB1c2VDaGFydEhlaWdodCwgdXNlQ2hhcnRXaWR0aCwgdXNlWEF4aXNPclRocm93IH0gZnJvbSAnLi4vY29udGV4dC9jaGFydExheW91dENvbnRleHQnO1xuaW1wb3J0IHsgQ2FydGVzaWFuQXhpcyB9IGZyb20gJy4vQ2FydGVzaWFuQXhpcyc7XG5pbXBvcnQgeyBnZXRUaWNrc09mQXhpcyB9IGZyb20gJy4uL3V0aWwvQ2hhcnRVdGlscyc7XG5cbi8qKiBEZWZpbmUgb2YgWEF4aXMgcHJvcHMgKi9cblxuZnVuY3Rpb24gWEF4aXNJbXBsKF9yZWYpIHtcbiAgdmFyIHhBeGlzSWQgPSBfcmVmLnhBeGlzSWQ7XG4gIHZhciB3aWR0aCA9IHVzZUNoYXJ0V2lkdGgoKTtcbiAgdmFyIGhlaWdodCA9IHVzZUNoYXJ0SGVpZ2h0KCk7XG4gIHZhciBheGlzT3B0aW9ucyA9IHVzZVhBeGlzT3JUaHJvdyh4QXhpc0lkKTtcbiAgaWYgKGF4aXNPcHRpb25zID09IG51bGwpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gKFxuICAgIC8qI19fUFVSRV9fKi9cbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHRoZSBheGlzT3B0aW9ucyB0eXBlIGlzIG5vdCBleGFjdGx5IHdoYXQgQ2FydGVzaWFuQXhpcyBpcyBleHBlY3RpbmcuXG4gICAgUmVhY3QuY3JlYXRlRWxlbWVudChDYXJ0ZXNpYW5BeGlzLCBfZXh0ZW5kcyh7fSwgYXhpc09wdGlvbnMsIHtcbiAgICAgIGNsYXNzTmFtZTogY2xzeChcInJlY2hhcnRzLVwiLmNvbmNhdChheGlzT3B0aW9ucy5heGlzVHlwZSwgXCIgXCIpLmNvbmNhdChheGlzT3B0aW9ucy5heGlzVHlwZSksIGF4aXNPcHRpb25zLmNsYXNzTmFtZSksXG4gICAgICB2aWV3Qm94OiB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IDAsXG4gICAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICAgIH0sXG4gICAgICB0aWNrc0dlbmVyYXRvcjogZnVuY3Rpb24gdGlja3NHZW5lcmF0b3IoYXhpcykge1xuICAgICAgICByZXR1cm4gZ2V0VGlja3NPZkF4aXMoYXhpcywgdHJ1ZSk7XG4gICAgICB9XG4gICAgfSkpXG4gICk7XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC9wcmVmZXItc3RhdGVsZXNzLWZ1bmN0aW9uIC0tIHJlcXVpcmVzIHN0YXRpYyBkZWZhdWx0UHJvcHNcbmV4cG9ydCB2YXIgWEF4aXMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgZnVuY3Rpb24gWEF4aXMoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFhBeGlzKTtcbiAgICByZXR1cm4gX2NhbGxTdXBlcih0aGlzLCBYQXhpcywgYXJndW1lbnRzKTtcbiAgfVxuICBfaW5oZXJpdHMoWEF4aXMsIF9SZWFjdCRDb21wb25lbnQpO1xuICByZXR1cm4gX2NyZWF0ZUNsYXNzKFhBeGlzLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFhBeGlzSW1wbCwgdGhpcy5wcm9wcyk7XG4gICAgfVxuICB9XSk7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5fZGVmaW5lUHJvcGVydHkoWEF4aXMsIFwiZGlzcGxheU5hbWVcIiwgJ1hBeGlzJyk7XG5fZGVmaW5lUHJvcGVydHkoWEF4aXMsIFwiZGVmYXVsdFByb3BzXCIsIHtcbiAgYWxsb3dEZWNpbWFsczogdHJ1ZSxcbiAgaGlkZTogZmFsc2UsXG4gIG9yaWVudGF0aW9uOiAnYm90dG9tJyxcbiAgd2lkdGg6IDAsXG4gIGhlaWdodDogMzAsXG4gIG1pcnJvcjogZmFsc2UsXG4gIHhBeGlzSWQ6IDAsXG4gIHRpY2tDb3VudDogNSxcbiAgdHlwZTogJ2NhdGVnb3J5JyxcbiAgcGFkZGluZzoge1xuICAgIGxlZnQ6IDAsXG4gICAgcmlnaHQ6IDBcbiAgfSxcbiAgYWxsb3dEYXRhT3ZlcmZsb3c6IGZhbHNlLFxuICBzY2FsZTogJ2F1dG8nLFxuICByZXZlcnNlZDogZmFsc2UsXG4gIGFsbG93RHVwbGljYXRlZENhdGVnb3J5OiB0cnVlXG59KTsiXSwibmFtZXMiOlsiX3R5cGVvZiIsIm8iLCJTeW1ib2wiLCJpdGVyYXRvciIsInByb3RvdHlwZSIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsIl90b1Byb3BlcnR5S2V5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwiX2NhbGxTdXBlciIsInQiLCJlIiwiX2dldFByb3RvdHlwZU9mIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImFwcGx5Iiwic2VsZiIsImNhbGwiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiUmVmZXJlbmNlRXJyb3IiLCJCb29sZWFuIiwidmFsdWVPZiIsInNldFByb3RvdHlwZU9mIiwiZ2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwidmFsdWUiLCJfc2V0UHJvdG90eXBlT2YiLCJwIiwiX2RlZmluZVByb3BlcnR5Iiwib2JqIiwiX3RvUHJpbWl0aXZlIiwiciIsInRvUHJpbWl0aXZlIiwiU3RyaW5nIiwiTnVtYmVyIiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJhcmd1bWVudHMiLCJzb3VyY2UiLCJoYXNPd25Qcm9wZXJ0eSIsIlJlYWN0IiwiY2xzeCIsInVzZUNoYXJ0SGVpZ2h0IiwidXNlQ2hhcnRXaWR0aCIsInVzZVhBeGlzT3JUaHJvdyIsIkNhcnRlc2lhbkF4aXMiLCJnZXRUaWNrc09mQXhpcyIsIlhBeGlzSW1wbCIsIl9yZWYiLCJ4QXhpc0lkIiwid2lkdGgiLCJoZWlnaHQiLCJheGlzT3B0aW9ucyIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJjb25jYXQiLCJheGlzVHlwZSIsInZpZXdCb3giLCJ4IiwieSIsInRpY2tzR2VuZXJhdG9yIiwiYXhpcyIsIlhBeGlzIiwiX1JlYWN0JENvbXBvbmVudCIsInJlbmRlciIsIkNvbXBvbmVudCIsImFsbG93RGVjaW1hbHMiLCJoaWRlIiwib3JpZW50YXRpb24iLCJtaXJyb3IiLCJ0aWNrQ291bnQiLCJ0eXBlIiwicGFkZGluZyIsImxlZnQiLCJyaWdodCIsImFsbG93RGF0YU92ZXJmbG93Iiwic2NhbGUiLCJyZXZlcnNlZCIsImFsbG93RHVwbGljYXRlZENhdGVnb3J5Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/XAxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/YAxis.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/YAxis.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YAxis: () => (/* binding */ YAxis)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js\");\n/* harmony import */ var _CartesianAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CartesianAxis */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/CartesianAxis.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n/**\n * @fileOverview Y Axis\n */ \n\n\n\n\nvar YAxisImpl = function YAxisImpl(_ref) {\n    var yAxisId = _ref.yAxisId;\n    var width = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__.useChartWidth)();\n    var height = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__.useChartHeight)();\n    var axisOptions = (0,_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_2__.useYAxisOrThrow)(yAxisId);\n    if (axisOptions == null) {\n        return null;\n    }\n    return(/*#__PURE__*/ // @ts-expect-error the axisOptions type is not exactly what CartesianAxis is expecting.\n    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_CartesianAxis__WEBPACK_IMPORTED_MODULE_3__.CartesianAxis, _extends({}, axisOptions, {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"recharts-\".concat(axisOptions.axisType, \" \").concat(axisOptions.axisType), axisOptions.className),\n        viewBox: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n        },\n        ticksGenerator: function ticksGenerator(axis) {\n            return (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_4__.getTicksOfAxis)(axis, true);\n        }\n    })));\n};\n// eslint-disable-next-line react/prefer-stateless-function -- requires static defaultProps\nvar YAxis = /*#__PURE__*/ function(_React$Component) {\n    function YAxis() {\n        _classCallCheck(this, YAxis);\n        return _callSuper(this, YAxis, arguments);\n    }\n    _inherits(YAxis, _React$Component);\n    return _createClass(YAxis, [\n        {\n            key: \"render\",\n            value: function render() {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(YAxisImpl, this.props);\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n_defineProperty(YAxis, \"displayName\", 'YAxis');\n_defineProperty(YAxis, \"defaultProps\", {\n    allowDuplicatedCategory: true,\n    allowDecimals: true,\n    hide: false,\n    orientation: 'left',\n    width: 60,\n    height: 0,\n    mirror: false,\n    yAxisId: 0,\n    tickCount: 5,\n    type: 'number',\n    padding: {\n        top: 0,\n        bottom: 0\n    },\n    allowDataOverflow: false,\n    scale: 'auto',\n    reversed: false\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/YAxis.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getEquidistantTicks.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getEquidistantTicks.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEquidistantTicks: () => (/* binding */ getEquidistantTicks)\n/* harmony export */ });\n/* harmony import */ var _util_TickUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TickUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/TickUtils.js\");\n/* harmony import */ var _util_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/getEveryNthWithCondition */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getEveryNthWithCondition.js\");\n\n\nfunction getEquidistantTicks(sign, boundaries, getTickSize, ticks, minTickGap) {\n    var result = (ticks || []).slice();\n    var initialStart = boundaries.start, end = boundaries.end;\n    var index = 0;\n    // Premature optimisation idea 1: Estimate a lower bound, and start from there.\n    // For now, start from every tick\n    var stepsize = 1;\n    var start = initialStart;\n    var _loop = function _loop() {\n        // Given stepsize, evaluate whether every stepsize-th tick can be shown.\n        // If it can not, then increase the stepsize by 1, and try again.\n        var entry = ticks === null || ticks === void 0 ? void 0 : ticks[index];\n        // Break condition - If we have evaluate all the ticks, then we are done.\n        if (entry === undefined) {\n            return {\n                v: (0,_util_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_0__.getEveryNthWithCondition)(ticks, stepsize)\n            };\n        }\n        // Check if the element collides with the next element\n        var i = index;\n        var size;\n        var getSize = function getSize() {\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        var tickCoord = entry.coordinate;\n        // We will always show the first tick.\n        var isShow = index === 0 || (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.isVisible)(sign, tickCoord, getSize, start, end);\n        if (!isShow) {\n            // Start all over with a larger stepsize\n            index = 0;\n            start = initialStart;\n            stepsize += 1;\n        }\n        if (isShow) {\n            // If it can be shown, update the start\n            start = tickCoord + sign * (getSize() / 2 + minTickGap);\n            index += stepsize;\n        }\n    }, _ret;\n    while(stepsize <= result.length){\n        _ret = _loop();\n        if (_ret) return _ret.v;\n    }\n    return [];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jYXJ0ZXNpYW4vZ2V0RXF1aWRpc3RhbnRUaWNrcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOEI7QUFDckUsU0FBU0Usb0JBQW9CQyxJQUFJLEVBQUVDLFVBQVUsRUFBRUMsV0FBVyxFQUFFQyxLQUFLLEVBQUVDLFVBQVU7SUFDbEYsSUFBSUMsU0FBUyxDQUFDRixTQUFTLEVBQUUsRUFBRUcsS0FBSztJQUNoQyxJQUFJQyxlQUFlTixXQUFXTyxLQUFLLEVBQ2pDQyxNQUFNUixXQUFXUSxHQUFHO0lBQ3RCLElBQUlDLFFBQVE7SUFDWiwrRUFBK0U7SUFDL0UsaUNBQWlDO0lBQ2pDLElBQUlDLFdBQVc7SUFDZixJQUFJSCxRQUFRRDtJQUNaLElBQUlLLFFBQVEsU0FBU0E7UUFDakIsd0VBQXdFO1FBQ3hFLGlFQUFpRTtRQUVqRSxJQUFJQyxRQUFRVixVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsS0FBSyxDQUFDTyxNQUFNO1FBRXRFLHlFQUF5RTtRQUN6RSxJQUFJRyxVQUFVQyxXQUFXO1lBQ3ZCLE9BQU87Z0JBQ0xDLEdBQUdqQix3RkFBd0JBLENBQUNLLE9BQU9RO1lBQ3JDO1FBQ0Y7UUFFQSxzREFBc0Q7UUFDdEQsSUFBSUssSUFBSU47UUFDUixJQUFJTztRQUNKLElBQUlDLFVBQVUsU0FBU0E7WUFDckIsSUFBSUQsU0FBU0gsV0FBVztnQkFDdEJHLE9BQU9mLFlBQVlXLE9BQU9HO1lBQzVCO1lBQ0EsT0FBT0M7UUFDVDtRQUNBLElBQUlFLFlBQVlOLE1BQU1PLFVBQVU7UUFDaEMsc0NBQXNDO1FBQ3RDLElBQUlDLFNBQVNYLFVBQVUsS0FBS2IsMERBQVNBLENBQUNHLE1BQU1tQixXQUFXRCxTQUFTVixPQUFPQztRQUN2RSxJQUFJLENBQUNZLFFBQVE7WUFDWCx3Q0FBd0M7WUFDeENYLFFBQVE7WUFDUkYsUUFBUUQ7WUFDUkksWUFBWTtRQUNkO1FBQ0EsSUFBSVUsUUFBUTtZQUNWLHVDQUF1QztZQUN2Q2IsUUFBUVcsWUFBWW5CLE9BQVFrQixDQUFBQSxZQUFZLElBQUlkLFVBQVM7WUFDckRNLFNBQVNDO1FBQ1g7SUFDRixHQUNBVztJQUNGLE1BQU9YLFlBQVlOLE9BQU9rQixNQUFNLENBQUU7UUFDaENELE9BQU9WO1FBQ1AsSUFBSVUsTUFBTSxPQUFPQSxLQUFLUCxDQUFDO0lBQ3pCO0lBQ0EsT0FBTyxFQUFFO0FBQ1giLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2FydGVzaWFuL2dldEVxdWlkaXN0YW50VGlja3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNWaXNpYmxlIH0gZnJvbSAnLi4vdXRpbC9UaWNrVXRpbHMnO1xuaW1wb3J0IHsgZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uIH0gZnJvbSAnLi4vdXRpbC9nZXRFdmVyeU50aFdpdGhDb25kaXRpb24nO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEVxdWlkaXN0YW50VGlja3Moc2lnbiwgYm91bmRhcmllcywgZ2V0VGlja1NpemUsIHRpY2tzLCBtaW5UaWNrR2FwKSB7XG4gIHZhciByZXN1bHQgPSAodGlja3MgfHwgW10pLnNsaWNlKCk7XG4gIHZhciBpbml0aWFsU3RhcnQgPSBib3VuZGFyaWVzLnN0YXJ0LFxuICAgIGVuZCA9IGJvdW5kYXJpZXMuZW5kO1xuICB2YXIgaW5kZXggPSAwO1xuICAvLyBQcmVtYXR1cmUgb3B0aW1pc2F0aW9uIGlkZWEgMTogRXN0aW1hdGUgYSBsb3dlciBib3VuZCwgYW5kIHN0YXJ0IGZyb20gdGhlcmUuXG4gIC8vIEZvciBub3csIHN0YXJ0IGZyb20gZXZlcnkgdGlja1xuICB2YXIgc3RlcHNpemUgPSAxO1xuICB2YXIgc3RhcnQgPSBpbml0aWFsU3RhcnQ7XG4gIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKCkge1xuICAgICAgLy8gR2l2ZW4gc3RlcHNpemUsIGV2YWx1YXRlIHdoZXRoZXIgZXZlcnkgc3RlcHNpemUtdGggdGljayBjYW4gYmUgc2hvd24uXG4gICAgICAvLyBJZiBpdCBjYW4gbm90LCB0aGVuIGluY3JlYXNlIHRoZSBzdGVwc2l6ZSBieSAxLCBhbmQgdHJ5IGFnYWluLlxuXG4gICAgICB2YXIgZW50cnkgPSB0aWNrcyA9PT0gbnVsbCB8fCB0aWNrcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGlja3NbaW5kZXhdO1xuXG4gICAgICAvLyBCcmVhayBjb25kaXRpb24gLSBJZiB3ZSBoYXZlIGV2YWx1YXRlIGFsbCB0aGUgdGlja3MsIHRoZW4gd2UgYXJlIGRvbmUuXG4gICAgICBpZiAoZW50cnkgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHY6IGdldEV2ZXJ5TnRoV2l0aENvbmRpdGlvbih0aWNrcywgc3RlcHNpemUpXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIC8vIENoZWNrIGlmIHRoZSBlbGVtZW50IGNvbGxpZGVzIHdpdGggdGhlIG5leHQgZWxlbWVudFxuICAgICAgdmFyIGkgPSBpbmRleDtcbiAgICAgIHZhciBzaXplO1xuICAgICAgdmFyIGdldFNpemUgPSBmdW5jdGlvbiBnZXRTaXplKCkge1xuICAgICAgICBpZiAoc2l6ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgc2l6ZSA9IGdldFRpY2tTaXplKGVudHJ5LCBpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICAgIH07XG4gICAgICB2YXIgdGlja0Nvb3JkID0gZW50cnkuY29vcmRpbmF0ZTtcbiAgICAgIC8vIFdlIHdpbGwgYWx3YXlzIHNob3cgdGhlIGZpcnN0IHRpY2suXG4gICAgICB2YXIgaXNTaG93ID0gaW5kZXggPT09IDAgfHwgaXNWaXNpYmxlKHNpZ24sIHRpY2tDb29yZCwgZ2V0U2l6ZSwgc3RhcnQsIGVuZCk7XG4gICAgICBpZiAoIWlzU2hvdykge1xuICAgICAgICAvLyBTdGFydCBhbGwgb3ZlciB3aXRoIGEgbGFyZ2VyIHN0ZXBzaXplXG4gICAgICAgIGluZGV4ID0gMDtcbiAgICAgICAgc3RhcnQgPSBpbml0aWFsU3RhcnQ7XG4gICAgICAgIHN0ZXBzaXplICs9IDE7XG4gICAgICB9XG4gICAgICBpZiAoaXNTaG93KSB7XG4gICAgICAgIC8vIElmIGl0IGNhbiBiZSBzaG93biwgdXBkYXRlIHRoZSBzdGFydFxuICAgICAgICBzdGFydCA9IHRpY2tDb29yZCArIHNpZ24gKiAoZ2V0U2l6ZSgpIC8gMiArIG1pblRpY2tHYXApO1xuICAgICAgICBpbmRleCArPSBzdGVwc2l6ZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIF9yZXQ7XG4gIHdoaWxlIChzdGVwc2l6ZSA8PSByZXN1bHQubGVuZ3RoKSB7XG4gICAgX3JldCA9IF9sb29wKCk7XG4gICAgaWYgKF9yZXQpIHJldHVybiBfcmV0LnY7XG4gIH1cbiAgcmV0dXJuIFtdO1xufSJdLCJuYW1lcyI6WyJpc1Zpc2libGUiLCJnZXRFdmVyeU50aFdpdGhDb25kaXRpb24iLCJnZXRFcXVpZGlzdGFudFRpY2tzIiwic2lnbiIsImJvdW5kYXJpZXMiLCJnZXRUaWNrU2l6ZSIsInRpY2tzIiwibWluVGlja0dhcCIsInJlc3VsdCIsInNsaWNlIiwiaW5pdGlhbFN0YXJ0Iiwic3RhcnQiLCJlbmQiLCJpbmRleCIsInN0ZXBzaXplIiwiX2xvb3AiLCJlbnRyeSIsInVuZGVmaW5lZCIsInYiLCJpIiwic2l6ZSIsImdldFNpemUiLCJ0aWNrQ29vcmQiLCJjb29yZGluYXRlIiwiaXNTaG93IiwiX3JldCIsImxlbmd0aCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getEquidistantTicks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getTicks.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getTicks.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTicks: () => (/* binding */ getTicks)\n/* harmony export */ });\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_DOMUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/DOMUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DOMUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_TickUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TickUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/TickUtils.js\");\n/* harmony import */ var _getEquidistantTicks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getEquidistantTicks */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getEquidistantTicks.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\nfunction getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap) {\n    var result = (ticks || []).slice();\n    var len = result.length;\n    var start = boundaries.start;\n    var end = boundaries.end;\n    var _loop = function _loop(i) {\n        var entry = result[i];\n        var size;\n        var getSize = function getSize() {\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        if (i === len - 1) {\n            var gap = sign * (entry.coordinate + sign * getSize() / 2 - end);\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: gap > 0 ? entry.coordinate - gap * sign : entry.coordinate\n            });\n        } else {\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: entry.coordinate\n            });\n        }\n        var isShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.isVisible)(sign, entry.tickCoord, getSize, start, end);\n        if (isShow) {\n            end = entry.tickCoord - sign * (getSize() / 2 + minTickGap);\n            result[i] = _objectSpread(_objectSpread({}, entry), {}, {\n                isShow: true\n            });\n        }\n    };\n    for(var i = len - 1; i >= 0; i--){\n        _loop(i);\n    }\n    return result;\n}\nfunction getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, preserveEnd) {\n    var result = (ticks || []).slice();\n    var len = result.length;\n    var start = boundaries.start, end = boundaries.end;\n    if (preserveEnd) {\n        // Try to guarantee the tail to be displayed\n        var tail = ticks[len - 1];\n        var tailSize = getTickSize(tail, len - 1);\n        var tailGap = sign * (tail.coordinate + sign * tailSize / 2 - end);\n        result[len - 1] = tail = _objectSpread(_objectSpread({}, tail), {}, {\n            tickCoord: tailGap > 0 ? tail.coordinate - tailGap * sign : tail.coordinate\n        });\n        var isTailShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.isVisible)(sign, tail.tickCoord, function() {\n            return tailSize;\n        }, start, end);\n        if (isTailShow) {\n            end = tail.tickCoord - sign * (tailSize / 2 + minTickGap);\n            result[len - 1] = _objectSpread(_objectSpread({}, tail), {}, {\n                isShow: true\n            });\n        }\n    }\n    var count = preserveEnd ? len - 1 : len;\n    var _loop2 = function _loop2(i) {\n        var entry = result[i];\n        var size;\n        var getSize = function getSize() {\n            if (size === undefined) {\n                size = getTickSize(entry, i);\n            }\n            return size;\n        };\n        if (i === 0) {\n            var gap = sign * (entry.coordinate - sign * getSize() / 2 - start);\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: gap < 0 ? entry.coordinate - gap * sign : entry.coordinate\n            });\n        } else {\n            result[i] = entry = _objectSpread(_objectSpread({}, entry), {}, {\n                tickCoord: entry.coordinate\n            });\n        }\n        var isShow = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.isVisible)(sign, entry.tickCoord, getSize, start, end);\n        if (isShow) {\n            start = entry.tickCoord + sign * (getSize() / 2 + minTickGap);\n            result[i] = _objectSpread(_objectSpread({}, entry), {}, {\n                isShow: true\n            });\n        }\n    };\n    for(var i = 0; i < count; i++){\n        _loop2(i);\n    }\n    return result;\n}\nfunction getTicks(props, fontSize, letterSpacing) {\n    var tick = props.tick, ticks = props.ticks, viewBox = props.viewBox, minTickGap = props.minTickGap, orientation = props.orientation, interval = props.interval, tickFormatter = props.tickFormatter, unit = props.unit, angle = props.angle;\n    if (!ticks || !ticks.length || !tick) {\n        return [];\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(interval) || _util_Global__WEBPACK_IMPORTED_MODULE_3__.Global.isSsr) {\n        return (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.getNumberIntervalTicks)(ticks, typeof interval === 'number' && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(interval) ? interval : 0);\n    }\n    var candidates = [];\n    var sizeKey = orientation === 'top' || orientation === 'bottom' ? 'width' : 'height';\n    var unitSize = unit && sizeKey === 'width' ? (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_4__.getStringSize)(unit, {\n        fontSize: fontSize,\n        letterSpacing: letterSpacing\n    }) : {\n        width: 0,\n        height: 0\n    };\n    var getTickSize = function getTickSize(content, index) {\n        var value = lodash_isFunction__WEBPACK_IMPORTED_MODULE_0___default()(tickFormatter) ? tickFormatter(content.value, index) : content.value;\n        // Recharts only supports angles when sizeKey === 'width'\n        return sizeKey === 'width' ? (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.getAngledTickWidth)((0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_4__.getStringSize)(value, {\n            fontSize: fontSize,\n            letterSpacing: letterSpacing\n        }), unitSize, angle) : (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_4__.getStringSize)(value, {\n            fontSize: fontSize,\n            letterSpacing: letterSpacing\n        })[sizeKey];\n    };\n    var sign = ticks.length >= 2 ? (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.mathSign)(ticks[1].coordinate - ticks[0].coordinate) : 1;\n    var boundaries = (0,_util_TickUtils__WEBPACK_IMPORTED_MODULE_1__.getTickBoundaries)(viewBox, sign, sizeKey);\n    if (interval === 'equidistantPreserveStart') {\n        return (0,_getEquidistantTicks__WEBPACK_IMPORTED_MODULE_5__.getEquidistantTicks)(sign, boundaries, getTickSize, ticks, minTickGap);\n    }\n    if (interval === 'preserveStart' || interval === 'preserveStartEnd') {\n        candidates = getTicksStart(sign, boundaries, getTickSize, ticks, minTickGap, interval === 'preserveStartEnd');\n    } else {\n        candidates = getTicksEnd(sign, boundaries, getTickSize, ticks, minTickGap);\n    }\n    return candidates.filter(function(entry) {\n        return entry.isShow;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/getTicks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/AccessibilityManager.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/AccessibilityManager.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessibilityManager: () => (/* binding */ AccessibilityManager)\n/* harmony export */ });\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nvar AccessibilityManager = /*#__PURE__*/ function() {\n    function AccessibilityManager() {\n        _classCallCheck(this, AccessibilityManager);\n        _defineProperty(this, \"activeIndex\", 0);\n        _defineProperty(this, \"coordinateList\", []);\n        _defineProperty(this, \"layout\", 'horizontal');\n    }\n    return _createClass(AccessibilityManager, [\n        {\n            key: \"setDetails\",\n            value: function setDetails(_ref) {\n                var _ref2;\n                var _ref$coordinateList = _ref.coordinateList, coordinateList = _ref$coordinateList === void 0 ? null : _ref$coordinateList, _ref$container = _ref.container, container = _ref$container === void 0 ? null : _ref$container, _ref$layout = _ref.layout, layout = _ref$layout === void 0 ? null : _ref$layout, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? null : _ref$offset, _ref$mouseHandlerCall = _ref.mouseHandlerCallback, mouseHandlerCallback = _ref$mouseHandlerCall === void 0 ? null : _ref$mouseHandlerCall;\n                this.coordinateList = (_ref2 = coordinateList !== null && coordinateList !== void 0 ? coordinateList : this.coordinateList) !== null && _ref2 !== void 0 ? _ref2 : [];\n                this.container = container !== null && container !== void 0 ? container : this.container;\n                this.layout = layout !== null && layout !== void 0 ? layout : this.layout;\n                this.offset = offset !== null && offset !== void 0 ? offset : this.offset;\n                this.mouseHandlerCallback = mouseHandlerCallback !== null && mouseHandlerCallback !== void 0 ? mouseHandlerCallback : this.mouseHandlerCallback;\n                // Keep activeIndex in the bounds between 0 and the last coordinate index\n                this.activeIndex = Math.min(Math.max(this.activeIndex, 0), this.coordinateList.length - 1);\n            }\n        },\n        {\n            key: \"focus\",\n            value: function focus() {\n                this.spoofMouse();\n            }\n        },\n        {\n            key: \"keyboardEvent\",\n            value: function keyboardEvent(e) {\n                // The AccessibilityManager relies on the Tooltip component. When tooltips suddenly stop existing,\n                // it can cause errors. We use this function to check. We don't want arrow keys to be processed\n                // if there are no tooltips, since that will cause unexpected behavior of users.\n                if (this.coordinateList.length === 0) {\n                    return;\n                }\n                switch(e.key){\n                    case 'ArrowRight':\n                        {\n                            if (this.layout !== 'horizontal') {\n                                return;\n                            }\n                            this.activeIndex = Math.min(this.activeIndex + 1, this.coordinateList.length - 1);\n                            this.spoofMouse();\n                            break;\n                        }\n                    case 'ArrowLeft':\n                        {\n                            if (this.layout !== 'horizontal') {\n                                return;\n                            }\n                            this.activeIndex = Math.max(this.activeIndex - 1, 0);\n                            this.spoofMouse();\n                            break;\n                        }\n                    default:\n                        {\n                            break;\n                        }\n                }\n            }\n        },\n        {\n            key: \"setIndex\",\n            value: function setIndex(newIndex) {\n                this.activeIndex = newIndex;\n            }\n        },\n        {\n            key: \"spoofMouse\",\n            value: function spoofMouse() {\n                var _window, _window2;\n                if (this.layout !== 'horizontal') {\n                    return;\n                }\n                // This can happen when the tooltips suddenly stop existing as children of the component\n                // That update doesn't otherwise fire events, so we have to double check here.\n                if (this.coordinateList.length === 0) {\n                    return;\n                }\n                var _this$container$getBo = this.container.getBoundingClientRect(), x = _this$container$getBo.x, y = _this$container$getBo.y, height = _this$container$getBo.height;\n                var coordinate = this.coordinateList[this.activeIndex].coordinate;\n                var scrollOffsetX = ((_window = window) === null || _window === void 0 ? void 0 : _window.scrollX) || 0;\n                var scrollOffsetY = ((_window2 = window) === null || _window2 === void 0 ? void 0 : _window2.scrollY) || 0;\n                var pageX = x + coordinate + scrollOffsetX;\n                var pageY = y + this.offset.top + height / 2 + scrollOffsetY;\n                this.mouseHandlerCallback({\n                    pageX: pageX,\n                    pageY: pageY\n                });\n            }\n        }\n    ]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/AccessibilityManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/LineChart.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/LineChart.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineChart: () => (/* binding */ LineChart)\n/* harmony export */ });\n/* harmony import */ var _generateCategoricalChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generateCategoricalChart */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/generateCategoricalChart.js\");\n/* harmony import */ var _cartesian_Line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cartesian/Line */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Line.js\");\n/* harmony import */ var _cartesian_XAxis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cartesian/XAxis */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/XAxis.js\");\n/* harmony import */ var _cartesian_YAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cartesian/YAxis */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/YAxis.js\");\n/* harmony import */ var _util_CartesianUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/CartesianUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js\");\n/**\n * @fileOverview Line Chart\n */ \n\n\n\n\nvar LineChart = (0,_generateCategoricalChart__WEBPACK_IMPORTED_MODULE_0__.generateCategoricalChart)({\n    chartName: 'LineChart',\n    GraphicalChild: _cartesian_Line__WEBPACK_IMPORTED_MODULE_1__.Line,\n    axisComponents: [\n        {\n            axisType: 'xAxis',\n            AxisComp: _cartesian_XAxis__WEBPACK_IMPORTED_MODULE_2__.XAxis\n        },\n        {\n            axisType: 'yAxis',\n            AxisComp: _cartesian_YAxis__WEBPACK_IMPORTED_MODULE_3__.YAxis\n        }\n    ],\n    formatAxisMap: _util_CartesianUtils__WEBPACK_IMPORTED_MODULE_4__.formatAxisMap\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jaGFydC9MaW5lQ2hhcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDcUU7QUFDN0I7QUFDRTtBQUNBO0FBQ1k7QUFDaEQsSUFBSUssWUFBWUwsbUZBQXdCQSxDQUFDO0lBQzlDTSxXQUFXO0lBQ1hDLGdCQUFnQk4saURBQUlBO0lBQ3BCTyxnQkFBZ0I7UUFBQztZQUNmQyxVQUFVO1lBQ1ZDLFVBQVVSLG1EQUFLQTtRQUNqQjtRQUFHO1lBQ0RPLFVBQVU7WUFDVkMsVUFBVVAsbURBQUtBO1FBQ2pCO0tBQUU7SUFDRkMsZUFBZUEsK0RBQWFBO0FBQzlCLEdBQUciLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvY2hhcnQvTGluZUNoYXJ0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVPdmVydmlldyBMaW5lIENoYXJ0XG4gKi9cbmltcG9ydCB7IGdlbmVyYXRlQ2F0ZWdvcmljYWxDaGFydCB9IGZyb20gJy4vZ2VuZXJhdGVDYXRlZ29yaWNhbENoYXJ0JztcbmltcG9ydCB7IExpbmUgfSBmcm9tICcuLi9jYXJ0ZXNpYW4vTGluZSc7XG5pbXBvcnQgeyBYQXhpcyB9IGZyb20gJy4uL2NhcnRlc2lhbi9YQXhpcyc7XG5pbXBvcnQgeyBZQXhpcyB9IGZyb20gJy4uL2NhcnRlc2lhbi9ZQXhpcyc7XG5pbXBvcnQgeyBmb3JtYXRBeGlzTWFwIH0gZnJvbSAnLi4vdXRpbC9DYXJ0ZXNpYW5VdGlscyc7XG5leHBvcnQgdmFyIExpbmVDaGFydCA9IGdlbmVyYXRlQ2F0ZWdvcmljYWxDaGFydCh7XG4gIGNoYXJ0TmFtZTogJ0xpbmVDaGFydCcsXG4gIEdyYXBoaWNhbENoaWxkOiBMaW5lLFxuICBheGlzQ29tcG9uZW50czogW3tcbiAgICBheGlzVHlwZTogJ3hBeGlzJyxcbiAgICBBeGlzQ29tcDogWEF4aXNcbiAgfSwge1xuICAgIGF4aXNUeXBlOiAneUF4aXMnLFxuICAgIEF4aXNDb21wOiBZQXhpc1xuICB9XSxcbiAgZm9ybWF0QXhpc01hcDogZm9ybWF0QXhpc01hcFxufSk7Il0sIm5hbWVzIjpbImdlbmVyYXRlQ2F0ZWdvcmljYWxDaGFydCIsIkxpbmUiLCJYQXhpcyIsIllBeGlzIiwiZm9ybWF0QXhpc01hcCIsIkxpbmVDaGFydCIsImNoYXJ0TmFtZSIsIkdyYXBoaWNhbENoaWxkIiwiYXhpc0NvbXBvbmVudHMiLCJheGlzVHlwZSIsIkF4aXNDb21wIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/LineChart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/generateCategoricalChart.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/generateCategoricalChart.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultState: () => (/* binding */ createDefaultState),\n/* harmony export */   generateCategoricalChart: () => (/* binding */ generateCategoricalChart),\n/* harmony export */   getAxisMapByAxes: () => (/* binding */ getAxisMapByAxes)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/range */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/range.js\");\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_range__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/get */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/sortBy */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/sortBy.js\");\n/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/throttle */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/throttle.js\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _container_Surface__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../container/Surface */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Surface.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../component/Tooltip */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Tooltip.js\");\n/* harmony import */ var _component_Legend__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../component/Legend */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Legend.js\");\n/* harmony import */ var _shape_Dot__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../shape/Dot */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Dot.js\");\n/* harmony import */ var _shape_Rectangle__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../shape/Rectangle */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _cartesian_Brush__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../cartesian/Brush */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Brush.js\");\n/* harmony import */ var _util_DOMUtils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../util/DOMUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DOMUtils.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getLegendProps.js\");\n/* harmony import */ var _util_DetectReferenceElementsDomain__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/DetectReferenceElementsDomain */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DetectReferenceElementsDomain.js\");\n/* harmony import */ var _util_PolarUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/PolarUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js\");\n/* harmony import */ var _util_ShallowEqual__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../util/ShallowEqual */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ShallowEqual.js\");\n/* harmony import */ var _util_Events__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../util/Events */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Events.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _AccessibilityManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./AccessibilityManager */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/AccessibilityManager.js\");\n/* harmony import */ var _util_isDomainSpecifiedByUser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util/isDomainSpecifiedByUser */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/isDomainSpecifiedByUser.js\");\n/* harmony import */ var _util_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../util/ActiveShapeUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ActiveShapeUtils.js\");\n/* harmony import */ var _component_Cursor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../component/Cursor */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cursor.js\");\n/* harmony import */ var _context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../context/chartLayoutContext */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js\");\nvar _excluded = [\n    \"item\"\n], _excluded2 = [\n    \"children\",\n    \"className\",\n    \"width\",\n    \"height\",\n    \"style\",\n    \"compact\",\n    \"title\",\n    \"desc\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n\n\n// eslint-disable-next-line no-restricted-imports\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ORIENT_MAP = {\n    xAxis: [\n        'bottom',\n        'top'\n    ],\n    yAxis: [\n        'left',\n        'right'\n    ]\n};\nvar FULL_WIDTH_AND_HEIGHT = {\n    width: '100%',\n    height: '100%'\n};\nvar originCoordinate = {\n    x: 0,\n    y: 0\n};\n/**\n * This function exists as a temporary workaround.\n *\n * Why? generateCategoricalChart does not render `{children}` directly;\n * instead it passes them through `renderByOrder` function which reads their handlers.\n *\n * So, this is a handler that does nothing.\n * Once we get rid of `renderByOrder` and switch to JSX only, we can get rid of this handler too.\n *\n * @param {JSX} element as is in JSX\n * @returns {JSX} the same element\n */ function renderAsIs(element) {\n    return element;\n}\nvar calculateTooltipPos = function calculateTooltipPos(rangeObj, layout) {\n    if (layout === 'horizontal') {\n        return rangeObj.x;\n    }\n    if (layout === 'vertical') {\n        return rangeObj.y;\n    }\n    if (layout === 'centric') {\n        return rangeObj.angle;\n    }\n    return rangeObj.radius;\n};\nvar getActiveCoordinate = function getActiveCoordinate(layout, tooltipTicks, activeIndex, rangeObj) {\n    var entry = tooltipTicks.find(function(tick) {\n        return tick && tick.index === activeIndex;\n    });\n    if (entry) {\n        if (layout === 'horizontal') {\n            return {\n                x: entry.coordinate,\n                y: rangeObj.y\n            };\n        }\n        if (layout === 'vertical') {\n            return {\n                x: rangeObj.x,\n                y: entry.coordinate\n            };\n        }\n        if (layout === 'centric') {\n            var _angle = entry.coordinate;\n            var _radius = rangeObj.radius;\n            return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_9__.polarToCartesian)(rangeObj.cx, rangeObj.cy, _radius, _angle)), {}, {\n                angle: _angle,\n                radius: _radius\n            });\n        }\n        var radius = entry.coordinate;\n        var angle = rangeObj.angle;\n        return _objectSpread(_objectSpread(_objectSpread({}, rangeObj), (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_9__.polarToCartesian)(rangeObj.cx, rangeObj.cy, radius, angle)), {}, {\n            angle: angle,\n            radius: radius\n        });\n    }\n    return originCoordinate;\n};\nvar getDisplayedData = function getDisplayedData(data, _ref) {\n    var graphicalItems = _ref.graphicalItems, dataStartIndex = _ref.dataStartIndex, dataEndIndex = _ref.dataEndIndex;\n    var itemsData = (graphicalItems !== null && graphicalItems !== void 0 ? graphicalItems : []).reduce(function(result, child) {\n        var itemData = child.props.data;\n        if (itemData && itemData.length) {\n            return [].concat(_toConsumableArray(result), _toConsumableArray(itemData));\n        }\n        return result;\n    }, []);\n    if (itemsData.length > 0) {\n        return itemsData;\n    }\n    if (data && data.length && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNumber)(dataStartIndex) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNumber)(dataEndIndex)) {\n        return data.slice(dataStartIndex, dataEndIndex + 1);\n    }\n    return [];\n};\nfunction getDefaultDomainByAxisType(axisType) {\n    return axisType === 'number' ? [\n        0,\n        'auto'\n    ] : undefined;\n}\n/**\n * Get the content to be displayed in the tooltip\n * @param  {Object} state          Current state\n * @param  {Array}  chartData      The data defined in chart\n * @param  {Number} activeIndex    Active index of data\n * @param  {String} activeLabel    Active label of data\n * @return {Array}                 The content of tooltip\n */ var getTooltipContent = function getTooltipContent(state, chartData, activeIndex, activeLabel) {\n    var graphicalItems = state.graphicalItems, tooltipAxis = state.tooltipAxis;\n    var displayedData = getDisplayedData(chartData, state);\n    if (activeIndex < 0 || !graphicalItems || !graphicalItems.length || activeIndex >= displayedData.length) {\n        return null;\n    }\n    // get data by activeIndex when the axis don't allow duplicated category\n    return graphicalItems.reduce(function(result, child) {\n        var _child$props$data;\n        /**\n     * Fixes: https://github.com/recharts/recharts/issues/3669\n     * Defaulting to chartData below to fix an edge case where the tooltip does not include data from all charts\n     * when a separate dataset is passed to chart prop data and specified on Line/Area/etc prop data\n     */ var data = (_child$props$data = child.props.data) !== null && _child$props$data !== void 0 ? _child$props$data : chartData;\n        if (data && state.dataStartIndex + state.dataEndIndex !== 0 && // https://github.com/recharts/recharts/issues/4717\n        // The data is sliced only when the active index is within the start/end index range.\n        state.dataEndIndex - state.dataStartIndex >= activeIndex) {\n            data = data.slice(state.dataStartIndex, state.dataEndIndex + 1);\n        }\n        var payload;\n        if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {\n            // graphic child has data props\n            var entries = data === undefined ? displayedData : data;\n            payload = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.findEntryInArray)(entries, tooltipAxis.dataKey, activeLabel);\n        } else {\n            payload = data && data[activeIndex] || displayedData[activeIndex];\n        }\n        if (!payload) {\n            return result;\n        }\n        return [].concat(_toConsumableArray(result), [\n            (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTooltipItem)(child, payload)\n        ]);\n    }, []);\n};\n/**\n * Returns tooltip data based on a mouse position (as a parameter or in state)\n * @param  {Object} state     current state\n * @param  {Array}  chartData the data defined in chart\n * @param  {String} layout     The layout type of chart\n * @param  {Object} rangeObj  { x, y } coordinates\n * @return {Object}           Tooltip data data\n */ var getTooltipData = function getTooltipData(state, chartData, layout, rangeObj) {\n    var rangeData = rangeObj || {\n        x: state.chartX,\n        y: state.chartY\n    };\n    var pos = calculateTooltipPos(rangeData, layout);\n    var ticks = state.orderedTooltipTicks, axis = state.tooltipAxis, tooltipTicks = state.tooltipTicks;\n    var activeIndex = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.calculateActiveTickIndex)(pos, ticks, tooltipTicks, axis);\n    if (activeIndex >= 0 && tooltipTicks) {\n        var activeLabel = tooltipTicks[activeIndex] && tooltipTicks[activeIndex].value;\n        var activePayload = getTooltipContent(state, chartData, activeIndex, activeLabel);\n        var activeCoordinate = getActiveCoordinate(layout, ticks, activeIndex, rangeData);\n        return {\n            activeTooltipIndex: activeIndex,\n            activeLabel: activeLabel,\n            activePayload: activePayload,\n            activeCoordinate: activeCoordinate\n        };\n    }\n    return null;\n};\n/**\n * Get the configuration of axis by the options of axis instance\n * @param  {Object} props         Latest props\n * @param {Array}  axes           The instance of axes\n * @param  {Array} graphicalItems The instances of item\n * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n * @param  {String} axisIdKey     The unique id of an axis\n * @param  {Object} stackGroups   The items grouped by axisId and stackId\n * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n * @return {Object}      Configuration\n */ var getAxisMapByAxes = function getAxisMapByAxes(props, _ref2) {\n    var axes = _ref2.axes, graphicalItems = _ref2.graphicalItems, axisType = _ref2.axisType, axisIdKey = _ref2.axisIdKey, stackGroups = _ref2.stackGroups, dataStartIndex = _ref2.dataStartIndex, dataEndIndex = _ref2.dataEndIndex;\n    var layout = props.layout, children = props.children, stackOffset = props.stackOffset;\n    var isCategorical = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.isCategoricalAxis)(layout, axisType);\n    // Eliminate duplicated axes\n    return axes.reduce(function(result, child) {\n        var _childProps$domain2;\n        var childProps = child.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, child.type.defaultProps), child.props) : child.props;\n        var type = childProps.type, dataKey = childProps.dataKey, allowDataOverflow = childProps.allowDataOverflow, allowDuplicatedCategory = childProps.allowDuplicatedCategory, scale = childProps.scale, ticks = childProps.ticks, includeHidden = childProps.includeHidden;\n        var axisId = childProps[axisIdKey];\n        if (result[axisId]) {\n            return result;\n        }\n        var displayedData = getDisplayedData(props.data, {\n            graphicalItems: graphicalItems.filter(function(item) {\n                var _defaultProps;\n                var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps = item.type.defaultProps) === null || _defaultProps === void 0 ? void 0 : _defaultProps[axisIdKey];\n                return itemAxisId === axisId;\n            }),\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n        });\n        var len = displayedData.length;\n        var domain, duplicateDomain, categoricalDomain;\n        /*\n     * This is a hack to short-circuit the domain creation here to enhance performance.\n     * Usually, the data is used to determine the domain, but when the user specifies\n     * a domain upfront (via props), there is no need to calculate the domain start and end,\n     * which is very expensive for a larger amount of data.\n     * The only thing that would prohibit short-circuiting is when the user doesn't allow data overflow,\n     * because the axis is supposed to ignore the specified domain that way.\n     */ if ((0,_util_isDomainSpecifiedByUser__WEBPACK_IMPORTED_MODULE_12__.isDomainSpecifiedByUser)(childProps.domain, allowDataOverflow, type)) {\n            domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.parseSpecifiedDomain)(childProps.domain, null, allowDataOverflow);\n            /* The chart can be categorical and have the domain specified in numbers\n       * we still need to calculate the categorical domain\n       * TODO: refactor this more\n       */ if (isCategorical && (type === 'number' || scale !== 'auto')) {\n                categoricalDomain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfDataByKey)(displayedData, dataKey, 'category');\n            }\n        }\n        // if the domain is defaulted we need this for `originalDomain` as well\n        var defaultDomain = getDefaultDomainByAxisType(type);\n        // we didn't create the domain from user's props above, so we need to calculate it\n        if (!domain || domain.length === 0) {\n            var _childProps$domain;\n            var childDomain = (_childProps$domain = childProps.domain) !== null && _childProps$domain !== void 0 ? _childProps$domain : defaultDomain;\n            if (dataKey) {\n                // has dataKey in <Axis />\n                domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfDataByKey)(displayedData, dataKey, type);\n                if (type === 'category' && isCategorical) {\n                    // the field type is category data and this axis is categorical axis\n                    var duplicate = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.hasDuplicate)(domain);\n                    if (allowDuplicatedCategory && duplicate) {\n                        duplicateDomain = domain;\n                        // When category axis has duplicated text, serial numbers are used to generate scale\n                        domain = lodash_range__WEBPACK_IMPORTED_MODULE_3___default()(0, len);\n                    } else if (!allowDuplicatedCategory) {\n                        // remove duplicated category\n                        domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.parseDomainOfCategoryAxis)(childDomain, domain, child).reduce(function(finalDomain, entry) {\n                            return finalDomain.indexOf(entry) >= 0 ? finalDomain : [].concat(_toConsumableArray(finalDomain), [\n                                entry\n                            ]);\n                        }, []);\n                    }\n                } else if (type === 'category') {\n                    // the field type is category data and this axis is numerical axis\n                    if (!allowDuplicatedCategory) {\n                        domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.parseDomainOfCategoryAxis)(childDomain, domain, child).reduce(function(finalDomain, entry) {\n                            return finalDomain.indexOf(entry) >= 0 || entry === '' || lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(entry) ? finalDomain : [].concat(_toConsumableArray(finalDomain), [\n                                entry\n                            ]);\n                        }, []);\n                    } else {\n                        // eliminate undefined or null or empty string\n                        domain = domain.filter(function(entry) {\n                            return entry !== '' && !lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(entry);\n                        });\n                    }\n                } else if (type === 'number') {\n                    // the field type is numerical\n                    var errorBarsDomain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.parseErrorBarsOfAxis)(displayedData, graphicalItems.filter(function(item) {\n                        var _defaultProps2, _defaultProps3;\n                        var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps2 = item.type.defaultProps) === null || _defaultProps2 === void 0 ? void 0 : _defaultProps2[axisIdKey];\n                        var itemHide = 'hide' in item.props ? item.props.hide : (_defaultProps3 = item.type.defaultProps) === null || _defaultProps3 === void 0 ? void 0 : _defaultProps3.hide;\n                        return itemAxisId === axisId && (includeHidden || !itemHide);\n                    }), dataKey, axisType, layout);\n                    if (errorBarsDomain) {\n                        domain = errorBarsDomain;\n                    }\n                }\n                if (isCategorical && (type === 'number' || scale !== 'auto')) {\n                    categoricalDomain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfDataByKey)(displayedData, dataKey, 'category');\n                }\n            } else if (isCategorical) {\n                // the axis is a categorical axis\n                domain = lodash_range__WEBPACK_IMPORTED_MODULE_3___default()(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack && type === 'number') {\n                // when stackOffset is 'expand', the domain may be calculated as [0, 1.000000000002]\n                domain = stackOffset === 'expand' ? [\n                    0,\n                    1\n                ] : (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n            } else {\n                domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function(item) {\n                    var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : item.type.defaultProps[axisIdKey];\n                    var itemHide = 'hide' in item.props ? item.props.hide : item.type.defaultProps.hide;\n                    return itemAxisId === axisId && (includeHidden || !itemHide);\n                }), type, layout, true);\n            }\n            if (type === 'number') {\n                // To detect wether there is any reference lines whose props alwaysShow is true\n                domain = (0,_util_DetectReferenceElementsDomain__WEBPACK_IMPORTED_MODULE_13__.detectReferenceElementsDomain)(children, domain, axisId, axisType, ticks);\n                if (childDomain) {\n                    domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.parseSpecifiedDomain)(childDomain, domain, allowDataOverflow);\n                }\n            } else if (type === 'category' && childDomain) {\n                var axisDomain = childDomain;\n                var isDomainValid = domain.every(function(entry) {\n                    return axisDomain.indexOf(entry) >= 0;\n                });\n                if (isDomainValid) {\n                    domain = axisDomain;\n                }\n            }\n        }\n        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, _objectSpread(_objectSpread({}, childProps), {}, {\n            axisType: axisType,\n            domain: domain,\n            categoricalDomain: categoricalDomain,\n            duplicateDomain: duplicateDomain,\n            originalDomain: (_childProps$domain2 = childProps.domain) !== null && _childProps$domain2 !== void 0 ? _childProps$domain2 : defaultDomain,\n            isCategorical: isCategorical,\n            layout: layout\n        })));\n    }, {});\n};\n/**\n * Get the configuration of axis by the options of item,\n * this kind of axis does not display in chart\n * @param  {Object} props         Latest props\n * @param  {Array} graphicalItems The instances of item\n * @param  {ReactElement} Axis    Axis Component\n * @param  {String} axisType      The type of axis, xAxis - x-axis, yAxis - y-axis\n * @param  {String} axisIdKey     The unique id of an axis\n * @param  {Object} stackGroups   The items grouped by axisId and stackId\n * @param {Number} dataStartIndex The start index of the data series when a brush is applied\n * @param {Number} dataEndIndex   The end index of the data series when a brush is applied\n * @return {Object}               Configuration\n */ var getAxisMapByItems = function getAxisMapByItems(props, _ref3) {\n    var graphicalItems = _ref3.graphicalItems, Axis = _ref3.Axis, axisType = _ref3.axisType, axisIdKey = _ref3.axisIdKey, stackGroups = _ref3.stackGroups, dataStartIndex = _ref3.dataStartIndex, dataEndIndex = _ref3.dataEndIndex;\n    var layout = props.layout, children = props.children;\n    var displayedData = getDisplayedData(props.data, {\n        graphicalItems: graphicalItems,\n        dataStartIndex: dataStartIndex,\n        dataEndIndex: dataEndIndex\n    });\n    var len = displayedData.length;\n    var isCategorical = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.isCategoricalAxis)(layout, axisType);\n    var index = -1;\n    // The default type of x-axis is category axis,\n    // The default contents of x-axis is the serial numbers of data\n    // The default type of y-axis is number axis\n    // The default contents of y-axis is the domain of data\n    return graphicalItems.reduce(function(result, child) {\n        var childProps = child.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, child.type.defaultProps), child.props) : child.props;\n        var axisId = childProps[axisIdKey];\n        var originalDomain = getDefaultDomainByAxisType('number');\n        if (!result[axisId]) {\n            index++;\n            var domain;\n            if (isCategorical) {\n                domain = lodash_range__WEBPACK_IMPORTED_MODULE_3___default()(0, len);\n            } else if (stackGroups && stackGroups[axisId] && stackGroups[axisId].hasStack) {\n                domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfStackGroups)(stackGroups[axisId].stackGroups, dataStartIndex, dataEndIndex);\n                domain = (0,_util_DetectReferenceElementsDomain__WEBPACK_IMPORTED_MODULE_13__.detectReferenceElementsDomain)(children, domain, axisId, axisType);\n            } else {\n                domain = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.parseSpecifiedDomain)(originalDomain, (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getDomainOfItemsWithSameAxis)(displayedData, graphicalItems.filter(function(item) {\n                    var _defaultProps4, _defaultProps5;\n                    var itemAxisId = axisIdKey in item.props ? item.props[axisIdKey] : (_defaultProps4 = item.type.defaultProps) === null || _defaultProps4 === void 0 ? void 0 : _defaultProps4[axisIdKey];\n                    var itemHide = 'hide' in item.props ? item.props.hide : (_defaultProps5 = item.type.defaultProps) === null || _defaultProps5 === void 0 ? void 0 : _defaultProps5.hide;\n                    return itemAxisId === axisId && !itemHide;\n                }), 'number', layout), Axis.defaultProps.allowDataOverflow);\n                domain = (0,_util_DetectReferenceElementsDomain__WEBPACK_IMPORTED_MODULE_13__.detectReferenceElementsDomain)(children, domain, axisId, axisType);\n            }\n            return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, _objectSpread(_objectSpread({\n                axisType: axisType\n            }, Axis.defaultProps), {}, {\n                hide: true,\n                orientation: lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(ORIENT_MAP, \"\".concat(axisType, \".\").concat(index % 2), null),\n                domain: domain,\n                originalDomain: originalDomain,\n                isCategorical: isCategorical,\n                layout: layout\n            })));\n        }\n        return result;\n    }, {});\n};\n/**\n * Get the configuration of all x-axis or y-axis\n * @param  {Object} props          Latest props\n * @param  {String} axisType       The type of axis\n * @param  {React.ComponentType}  [AxisComp]      Axis Component\n * @param  {Array}  graphicalItems The instances of item\n * @param  {Object} stackGroups    The items grouped by axisId and stackId\n * @param {Number} dataStartIndex  The start index of the data series when a brush is applied\n * @param {Number} dataEndIndex    The end index of the data series when a brush is applied\n * @return {Object}          Configuration\n */ var getAxisMap = function getAxisMap(props, _ref4) {\n    var _ref4$axisType = _ref4.axisType, axisType = _ref4$axisType === void 0 ? 'xAxis' : _ref4$axisType, AxisComp = _ref4.AxisComp, graphicalItems = _ref4.graphicalItems, stackGroups = _ref4.stackGroups, dataStartIndex = _ref4.dataStartIndex, dataEndIndex = _ref4.dataEndIndex;\n    var children = props.children;\n    var axisIdKey = \"\".concat(axisType, \"Id\");\n    // Get all the instance of Axis\n    var axes = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findAllByType)(children, AxisComp);\n    var axisMap = {};\n    if (axes && axes.length) {\n        axisMap = getAxisMapByAxes(props, {\n            axes: axes,\n            graphicalItems: graphicalItems,\n            axisType: axisType,\n            axisIdKey: axisIdKey,\n            stackGroups: stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n        });\n    } else if (graphicalItems && graphicalItems.length) {\n        axisMap = getAxisMapByItems(props, {\n            Axis: AxisComp,\n            graphicalItems: graphicalItems,\n            axisType: axisType,\n            axisIdKey: axisIdKey,\n            stackGroups: stackGroups,\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex\n        });\n    }\n    return axisMap;\n};\nvar tooltipTicksGenerator = function tooltipTicksGenerator(axisMap) {\n    var axis = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.getAnyElementOfObject)(axisMap);\n    var tooltipTicks = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTicksOfAxis)(axis, false, true);\n    return {\n        tooltipTicks: tooltipTicks,\n        orderedTooltipTicks: lodash_sortBy__WEBPACK_IMPORTED_MODULE_5___default()(tooltipTicks, function(o) {\n            return o.coordinate;\n        }),\n        tooltipAxis: axis,\n        tooltipAxisBandSize: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getBandSizeOfAxis)(axis, tooltipTicks)\n    };\n};\n/**\n * Returns default, reset state for the categorical chart.\n * @param {Object} props Props object to use when creating the default state\n * @return {Object} Whole new state\n */ var createDefaultState = function createDefaultState(props) {\n    var children = props.children, defaultShowTooltip = props.defaultShowTooltip;\n    var brushItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _cartesian_Brush__WEBPACK_IMPORTED_MODULE_15__.Brush);\n    var startIndex = 0;\n    var endIndex = 0;\n    if (props.data && props.data.length !== 0) {\n        endIndex = props.data.length - 1;\n    }\n    if (brushItem && brushItem.props) {\n        if (brushItem.props.startIndex >= 0) {\n            startIndex = brushItem.props.startIndex;\n        }\n        if (brushItem.props.endIndex >= 0) {\n            endIndex = brushItem.props.endIndex;\n        }\n    }\n    return {\n        chartX: 0,\n        chartY: 0,\n        dataStartIndex: startIndex,\n        dataEndIndex: endIndex,\n        activeTooltipIndex: -1,\n        isTooltipActive: Boolean(defaultShowTooltip)\n    };\n};\nvar hasGraphicalBarItem = function hasGraphicalBarItem(graphicalItems) {\n    if (!graphicalItems || !graphicalItems.length) {\n        return false;\n    }\n    return graphicalItems.some(function(item) {\n        var name = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.getDisplayName)(item && item.type);\n        return name && name.indexOf('Bar') >= 0;\n    });\n};\nvar getAxisNameByLayout = function getAxisNameByLayout(layout) {\n    if (layout === 'horizontal') {\n        return {\n            numericAxisName: 'yAxis',\n            cateAxisName: 'xAxis'\n        };\n    }\n    if (layout === 'vertical') {\n        return {\n            numericAxisName: 'xAxis',\n            cateAxisName: 'yAxis'\n        };\n    }\n    if (layout === 'centric') {\n        return {\n            numericAxisName: 'radiusAxis',\n            cateAxisName: 'angleAxis'\n        };\n    }\n    return {\n        numericAxisName: 'angleAxis',\n        cateAxisName: 'radiusAxis'\n    };\n};\n/**\n * Calculate the offset of main part in the svg element\n * @param  {Object} params.props          Latest props\n * @param  {Array}  params.graphicalItems The instances of item\n * @param  {Object} params.xAxisMap       The configuration of x-axis\n * @param  {Object} params.yAxisMap       The configuration of y-axis\n * @param  {Object} prevLegendBBox        The boundary box of legend\n * @return {Object} The offset of main part in the svg element\n */ var calculateOffset = function calculateOffset(_ref5, prevLegendBBox) {\n    var props = _ref5.props, graphicalItems = _ref5.graphicalItems, _ref5$xAxisMap = _ref5.xAxisMap, xAxisMap = _ref5$xAxisMap === void 0 ? {} : _ref5$xAxisMap, _ref5$yAxisMap = _ref5.yAxisMap, yAxisMap = _ref5$yAxisMap === void 0 ? {} : _ref5$yAxisMap;\n    var width = props.width, height = props.height, children = props.children;\n    var margin = props.margin || {};\n    var brushItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _cartesian_Brush__WEBPACK_IMPORTED_MODULE_15__.Brush);\n    var legendItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _component_Legend__WEBPACK_IMPORTED_MODULE_16__.Legend);\n    var offsetH = Object.keys(yAxisMap).reduce(function(result, id) {\n        var entry = yAxisMap[id];\n        var orientation = entry.orientation;\n        if (!entry.mirror && !entry.hide) {\n            return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, orientation, result[orientation] + entry.width));\n        }\n        return result;\n    }, {\n        left: margin.left || 0,\n        right: margin.right || 0\n    });\n    var offsetV = Object.keys(xAxisMap).reduce(function(result, id) {\n        var entry = xAxisMap[id];\n        var orientation = entry.orientation;\n        if (!entry.mirror && !entry.hide) {\n            return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, orientation, lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(result, \"\".concat(orientation)) + entry.height));\n        }\n        return result;\n    }, {\n        top: margin.top || 0,\n        bottom: margin.bottom || 0\n    });\n    var offset = _objectSpread(_objectSpread({}, offsetV), offsetH);\n    var brushBottom = offset.bottom;\n    if (brushItem) {\n        offset.bottom += brushItem.props.height || _cartesian_Brush__WEBPACK_IMPORTED_MODULE_15__.Brush.defaultProps.height;\n    }\n    if (legendItem && prevLegendBBox) {\n        // @ts-expect-error margin is optional in props but required in appendOffsetOfLegend\n        offset = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.appendOffsetOfLegend)(offset, graphicalItems, props, prevLegendBBox);\n    }\n    var offsetWidth = width - offset.left - offset.right;\n    var offsetHeight = height - offset.top - offset.bottom;\n    return _objectSpread(_objectSpread({\n        brushBottom: brushBottom\n    }, offset), {}, {\n        // never return negative values for height and width\n        width: Math.max(offsetWidth, 0),\n        height: Math.max(offsetHeight, 0)\n    });\n};\n// Determine the size of the axis, used for calculation of relative bar sizes\nvar getCartesianAxisSize = function getCartesianAxisSize(axisObj, axisName) {\n    if (axisName === 'xAxis') {\n        return axisObj[axisName].width;\n    }\n    if (axisName === 'yAxis') {\n        return axisObj[axisName].height;\n    }\n    // This is only supported for Bar charts (i.e. charts with cartesian axes), so we should never get here\n    return undefined;\n};\nvar generateCategoricalChart = function generateCategoricalChart(_ref6) {\n    var chartName = _ref6.chartName, GraphicalChild = _ref6.GraphicalChild, _ref6$defaultTooltipE = _ref6.defaultTooltipEventType, defaultTooltipEventType = _ref6$defaultTooltipE === void 0 ? 'axis' : _ref6$defaultTooltipE, _ref6$validateTooltip = _ref6.validateTooltipEventTypes, validateTooltipEventTypes = _ref6$validateTooltip === void 0 ? [\n        'axis'\n    ] : _ref6$validateTooltip, axisComponents = _ref6.axisComponents, legendContent = _ref6.legendContent, formatAxisMap = _ref6.formatAxisMap, defaultProps = _ref6.defaultProps;\n    var getFormatItems = function getFormatItems(props, currentState) {\n        var graphicalItems = currentState.graphicalItems, stackGroups = currentState.stackGroups, offset = currentState.offset, updateId = currentState.updateId, dataStartIndex = currentState.dataStartIndex, dataEndIndex = currentState.dataEndIndex;\n        var barSize = props.barSize, layout = props.layout, barGap = props.barGap, barCategoryGap = props.barCategoryGap, globalMaxBarSize = props.maxBarSize;\n        var _getAxisNameByLayout = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout.numericAxisName, cateAxisName = _getAxisNameByLayout.cateAxisName;\n        var hasBar = hasGraphicalBarItem(graphicalItems);\n        var formattedItems = [];\n        graphicalItems.forEach(function(item, index) {\n            var displayedData = getDisplayedData(props.data, {\n                graphicalItems: [\n                    item\n                ],\n                dataStartIndex: dataStartIndex,\n                dataEndIndex: dataEndIndex\n            });\n            var itemProps = item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;\n            var dataKey = itemProps.dataKey, childMaxBarSize = itemProps.maxBarSize;\n            // axisId of the numerical axis\n            var numericAxisId = itemProps[\"\".concat(numericAxisName, \"Id\")];\n            // axisId of the categorical axis\n            var cateAxisId = itemProps[\"\".concat(cateAxisName, \"Id\")];\n            var axisObjInitialValue = {};\n            var axisObj = axisComponents.reduce(function(result, entry) {\n                var _item$type$displayNam, _item$type;\n                // map of axisId to axis for a specific axis type\n                var axisMap = currentState[\"\".concat(entry.axisType, \"Map\")];\n                // axisId of axis we are currently computing\n                var id = itemProps[\"\".concat(entry.axisType, \"Id\")];\n                /**\n         * tell the user in dev mode that their configuration is incorrect if we cannot find a match between\n         * axisId on the chart and axisId on the axis. zAxis does not get passed in the map for ComposedChart,\n         * leave it out of the check for now.\n         */ !(axisMap && axisMap[id] || entry.axisType === 'zAxis') ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(false, \"Specifying a(n) \".concat(entry.axisType, \"Id requires a corresponding \").concat(entry.axisType, \"Id on the targeted graphical component \").concat((_item$type$displayNam = item === null || item === void 0 || (_item$type = item.type) === null || _item$type === void 0 ? void 0 : _item$type.displayName) !== null && _item$type$displayNam !== void 0 ? _item$type$displayNam : '')) : 0 : void 0;\n                // the axis we are currently formatting\n                var axis = axisMap[id];\n                return _objectSpread(_objectSpread({}, result), {}, _defineProperty(_defineProperty({}, entry.axisType, axis), \"\".concat(entry.axisType, \"Ticks\"), (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTicksOfAxis)(axis)));\n            }, axisObjInitialValue);\n            var cateAxis = axisObj[cateAxisName];\n            var cateTicks = axisObj[\"\".concat(cateAxisName, \"Ticks\")];\n            var stackedData = stackGroups && stackGroups[numericAxisId] && stackGroups[numericAxisId].hasStack && (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getStackedDataOfItem)(item, stackGroups[numericAxisId].stackGroups);\n            var itemIsBar = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.getDisplayName)(item.type).indexOf('Bar') >= 0;\n            var bandSize = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getBandSizeOfAxis)(cateAxis, cateTicks);\n            var barPosition = [];\n            var sizeList = hasBar && (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getBarSizeList)({\n                barSize: barSize,\n                stackGroups: stackGroups,\n                totalSize: getCartesianAxisSize(axisObj, cateAxisName)\n            });\n            if (itemIsBar) {\n                var _ref7, _getBandSizeOfAxis;\n                // If it is bar, calculate the position of bar\n                var maxBarSize = lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(childMaxBarSize) ? globalMaxBarSize : childMaxBarSize;\n                var barBandSize = (_ref7 = (_getBandSizeOfAxis = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getBandSizeOfAxis)(cateAxis, cateTicks, true)) !== null && _getBandSizeOfAxis !== void 0 ? _getBandSizeOfAxis : maxBarSize) !== null && _ref7 !== void 0 ? _ref7 : 0;\n                barPosition = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getBarPosition)({\n                    barGap: barGap,\n                    barCategoryGap: barCategoryGap,\n                    bandSize: barBandSize !== bandSize ? barBandSize : bandSize,\n                    sizeList: sizeList[cateAxisId],\n                    maxBarSize: maxBarSize\n                });\n                if (barBandSize !== bandSize) {\n                    barPosition = barPosition.map(function(pos) {\n                        return _objectSpread(_objectSpread({}, pos), {}, {\n                            position: _objectSpread(_objectSpread({}, pos.position), {}, {\n                                offset: pos.position.offset - barBandSize / 2\n                            })\n                        });\n                    });\n                }\n            }\n            // @ts-expect-error we should stop reading data from ReactElements\n            var composedFn = item && item.type && item.type.getComposedData;\n            if (composedFn) {\n                formattedItems.push({\n                    props: _objectSpread(_objectSpread({}, composedFn(_objectSpread(_objectSpread({}, axisObj), {}, {\n                        displayedData: displayedData,\n                        props: props,\n                        dataKey: dataKey,\n                        item: item,\n                        bandSize: bandSize,\n                        barPosition: barPosition,\n                        offset: offset,\n                        stackedData: stackedData,\n                        layout: layout,\n                        dataStartIndex: dataStartIndex,\n                        dataEndIndex: dataEndIndex\n                    }))), {}, _defineProperty(_defineProperty(_defineProperty({\n                        key: item.key || \"item-\".concat(index)\n                    }, numericAxisName, axisObj[numericAxisName]), cateAxisName, axisObj[cateAxisName]), \"animationId\", updateId)),\n                    childIndex: (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.parseChildIndex)(item, props.children),\n                    item: item\n                });\n            }\n        });\n        return formattedItems;\n    };\n    /**\n   * The AxisMaps are expensive to render on large data sets\n   * so provide the ability to store them in state and only update them when necessary\n   * they are dependent upon the start and end index of\n   * the brush so it's important that this method is called _after_\n   * the state is updated with any new start/end indices\n   *\n   * @param {Object} props          The props object to be used for updating the axismaps\n   * dataStartIndex: The start index of the data series when a brush is applied\n   * dataEndIndex: The end index of the data series when a brush is applied\n   * updateId: The update id\n   * @param {Object} prevState      Prev state\n   * @return {Object} state New state to set\n   */ var updateStateOfAxisMapsOffsetAndStackGroups = function updateStateOfAxisMapsOffsetAndStackGroups(_ref8, prevState) {\n        var props = _ref8.props, dataStartIndex = _ref8.dataStartIndex, dataEndIndex = _ref8.dataEndIndex, updateId = _ref8.updateId;\n        if (!(0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.validateWidthHeight)({\n            props: props\n        })) {\n            return null;\n        }\n        var children = props.children, layout = props.layout, stackOffset = props.stackOffset, data = props.data, reverseStackOrder = props.reverseStackOrder;\n        var _getAxisNameByLayout2 = getAxisNameByLayout(layout), numericAxisName = _getAxisNameByLayout2.numericAxisName, cateAxisName = _getAxisNameByLayout2.cateAxisName;\n        var graphicalItems = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findAllByType)(children, GraphicalChild);\n        var stackGroups = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getStackGroupsByAxisId)(data, graphicalItems, \"\".concat(numericAxisName, \"Id\"), \"\".concat(cateAxisName, \"Id\"), stackOffset, reverseStackOrder);\n        var axisObj = axisComponents.reduce(function(result, entry) {\n            var name = \"\".concat(entry.axisType, \"Map\");\n            return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, name, getAxisMap(props, _objectSpread(_objectSpread({}, entry), {}, {\n                graphicalItems: graphicalItems,\n                stackGroups: entry.axisType === numericAxisName && stackGroups,\n                dataStartIndex: dataStartIndex,\n                dataEndIndex: dataEndIndex\n            }))));\n        }, {});\n        var offset = calculateOffset(_objectSpread(_objectSpread({}, axisObj), {}, {\n            props: props,\n            graphicalItems: graphicalItems\n        }), prevState === null || prevState === void 0 ? void 0 : prevState.legendBBox);\n        Object.keys(axisObj).forEach(function(key) {\n            axisObj[key] = formatAxisMap(props, axisObj[key], offset, key.replace('Map', ''), chartName);\n        });\n        var cateAxisMap = axisObj[\"\".concat(cateAxisName, \"Map\")];\n        var ticksObj = tooltipTicksGenerator(cateAxisMap);\n        var formattedGraphicalItems = getFormatItems(props, _objectSpread(_objectSpread({}, axisObj), {}, {\n            dataStartIndex: dataStartIndex,\n            dataEndIndex: dataEndIndex,\n            updateId: updateId,\n            graphicalItems: graphicalItems,\n            stackGroups: stackGroups,\n            offset: offset\n        }));\n        return _objectSpread(_objectSpread({\n            formattedGraphicalItems: formattedGraphicalItems,\n            graphicalItems: graphicalItems,\n            offset: offset,\n            stackGroups: stackGroups\n        }, ticksObj), axisObj);\n    };\n    var CategoricalChartWrapper = /*#__PURE__*/ function(_Component) {\n        function CategoricalChartWrapper(_props) {\n            var _props$id, _props$throttleDelay;\n            var _this;\n            _classCallCheck(this, CategoricalChartWrapper);\n            _this = _callSuper(this, CategoricalChartWrapper, [\n                _props\n            ]);\n            _defineProperty(_this, \"eventEmitterSymbol\", Symbol('rechartsEventEmitter'));\n            _defineProperty(_this, \"accessibilityManager\", new _AccessibilityManager__WEBPACK_IMPORTED_MODULE_17__.AccessibilityManager());\n            _defineProperty(_this, \"handleLegendBBoxUpdate\", function(box) {\n                if (box) {\n                    var _this$state = _this.state, dataStartIndex = _this$state.dataStartIndex, dataEndIndex = _this$state.dataEndIndex, updateId = _this$state.updateId;\n                    _this.setState(_objectSpread({\n                        legendBBox: box\n                    }, updateStateOfAxisMapsOffsetAndStackGroups({\n                        props: _this.props,\n                        dataStartIndex: dataStartIndex,\n                        dataEndIndex: dataEndIndex,\n                        updateId: updateId\n                    }, _objectSpread(_objectSpread({}, _this.state), {}, {\n                        legendBBox: box\n                    }))));\n                }\n            });\n            _defineProperty(_this, \"handleReceiveSyncEvent\", function(cId, data, emitter) {\n                if (_this.props.syncId === cId) {\n                    if (emitter === _this.eventEmitterSymbol && typeof _this.props.syncMethod !== 'function') {\n                        return;\n                    }\n                    _this.applySyncEvent(data);\n                }\n            });\n            _defineProperty(_this, \"handleBrushChange\", function(_ref9) {\n                var startIndex = _ref9.startIndex, endIndex = _ref9.endIndex;\n                // Only trigger changes if the extents of the brush have actually changed\n                if (startIndex !== _this.state.dataStartIndex || endIndex !== _this.state.dataEndIndex) {\n                    var updateId = _this.state.updateId;\n                    _this.setState(function() {\n                        return _objectSpread({\n                            dataStartIndex: startIndex,\n                            dataEndIndex: endIndex\n                        }, updateStateOfAxisMapsOffsetAndStackGroups({\n                            props: _this.props,\n                            dataStartIndex: startIndex,\n                            dataEndIndex: endIndex,\n                            updateId: updateId\n                        }, _this.state));\n                    });\n                    _this.triggerSyncEvent({\n                        dataStartIndex: startIndex,\n                        dataEndIndex: endIndex\n                    });\n                }\n            });\n            /**\n       * The handler of mouse entering chart\n       * @param  {Object} e              Event object\n       * @return {Null}                  null\n       */ _defineProperty(_this, \"handleMouseEnter\", function(e) {\n                var mouse = _this.getMouseInfo(e);\n                if (mouse) {\n                    var _nextState = _objectSpread(_objectSpread({}, mouse), {}, {\n                        isTooltipActive: true\n                    });\n                    _this.setState(_nextState);\n                    _this.triggerSyncEvent(_nextState);\n                    var onMouseEnter = _this.props.onMouseEnter;\n                    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onMouseEnter)) {\n                        onMouseEnter(_nextState, e);\n                    }\n                }\n            });\n            _defineProperty(_this, \"triggeredAfterMouseMove\", function(e) {\n                var mouse = _this.getMouseInfo(e);\n                var nextState = mouse ? _objectSpread(_objectSpread({}, mouse), {}, {\n                    isTooltipActive: true\n                }) : {\n                    isTooltipActive: false\n                };\n                _this.setState(nextState);\n                _this.triggerSyncEvent(nextState);\n                var onMouseMove = _this.props.onMouseMove;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onMouseMove)) {\n                    onMouseMove(nextState, e);\n                }\n            });\n            /**\n       * The handler of mouse entering a scatter\n       * @param {Object} el The active scatter\n       * @return {Object} no return\n       */ _defineProperty(_this, \"handleItemMouseEnter\", function(el) {\n                _this.setState(function() {\n                    return {\n                        isTooltipActive: true,\n                        activeItem: el,\n                        activePayload: el.tooltipPayload,\n                        activeCoordinate: el.tooltipPosition || {\n                            x: el.cx,\n                            y: el.cy\n                        }\n                    };\n                });\n            });\n            /**\n       * The handler of mouse leaving a scatter\n       * @return {Object} no return\n       */ _defineProperty(_this, \"handleItemMouseLeave\", function() {\n                _this.setState(function() {\n                    return {\n                        isTooltipActive: false\n                    };\n                });\n            });\n            /**\n       * The handler of mouse moving in chart\n       * @param  {React.MouseEvent} e        Event object\n       * @return {void} no return\n       */ _defineProperty(_this, \"handleMouseMove\", function(e) {\n                e.persist();\n                _this.throttleTriggeredAfterMouseMove(e);\n            });\n            /**\n       * The handler if mouse leaving chart\n       * @param {Object} e Event object\n       * @return {Null} no return\n       */ _defineProperty(_this, \"handleMouseLeave\", function(e) {\n                _this.throttleTriggeredAfterMouseMove.cancel();\n                var nextState = {\n                    isTooltipActive: false\n                };\n                _this.setState(nextState);\n                _this.triggerSyncEvent(nextState);\n                var onMouseLeave = _this.props.onMouseLeave;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onMouseLeave)) {\n                    onMouseLeave(nextState, e);\n                }\n            });\n            _defineProperty(_this, \"handleOuterEvent\", function(e) {\n                var eventName = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.getReactEventByType)(e);\n                var event = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(_this.props, \"\".concat(eventName));\n                if (eventName && lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(event)) {\n                    var _mouse;\n                    var mouse;\n                    if (/.*touch.*/i.test(eventName)) {\n                        mouse = _this.getMouseInfo(e.changedTouches[0]);\n                    } else {\n                        mouse = _this.getMouseInfo(e);\n                    }\n                    event((_mouse = mouse) !== null && _mouse !== void 0 ? _mouse : {}, e);\n                }\n            });\n            _defineProperty(_this, \"handleClick\", function(e) {\n                var mouse = _this.getMouseInfo(e);\n                if (mouse) {\n                    var _nextState2 = _objectSpread(_objectSpread({}, mouse), {}, {\n                        isTooltipActive: true\n                    });\n                    _this.setState(_nextState2);\n                    _this.triggerSyncEvent(_nextState2);\n                    var onClick = _this.props.onClick;\n                    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onClick)) {\n                        onClick(_nextState2, e);\n                    }\n                }\n            });\n            _defineProperty(_this, \"handleMouseDown\", function(e) {\n                var onMouseDown = _this.props.onMouseDown;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onMouseDown)) {\n                    var _nextState3 = _this.getMouseInfo(e);\n                    onMouseDown(_nextState3, e);\n                }\n            });\n            _defineProperty(_this, \"handleMouseUp\", function(e) {\n                var onMouseUp = _this.props.onMouseUp;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onMouseUp)) {\n                    var _nextState4 = _this.getMouseInfo(e);\n                    onMouseUp(_nextState4, e);\n                }\n            });\n            _defineProperty(_this, \"handleTouchMove\", function(e) {\n                if (e.changedTouches != null && e.changedTouches.length > 0) {\n                    _this.throttleTriggeredAfterMouseMove(e.changedTouches[0]);\n                }\n            });\n            _defineProperty(_this, \"handleTouchStart\", function(e) {\n                if (e.changedTouches != null && e.changedTouches.length > 0) {\n                    _this.handleMouseDown(e.changedTouches[0]);\n                }\n            });\n            _defineProperty(_this, \"handleTouchEnd\", function(e) {\n                if (e.changedTouches != null && e.changedTouches.length > 0) {\n                    _this.handleMouseUp(e.changedTouches[0]);\n                }\n            });\n            _defineProperty(_this, \"handleDoubleClick\", function(e) {\n                var onDoubleClick = _this.props.onDoubleClick;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onDoubleClick)) {\n                    var _nextState5 = _this.getMouseInfo(e);\n                    onDoubleClick(_nextState5, e);\n                }\n            });\n            _defineProperty(_this, \"handleContextMenu\", function(e) {\n                var onContextMenu = _this.props.onContextMenu;\n                if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(onContextMenu)) {\n                    var _nextState6 = _this.getMouseInfo(e);\n                    onContextMenu(_nextState6, e);\n                }\n            });\n            _defineProperty(_this, \"triggerSyncEvent\", function(data) {\n                if (_this.props.syncId !== undefined) {\n                    _util_Events__WEBPACK_IMPORTED_MODULE_18__.eventCenter.emit(_util_Events__WEBPACK_IMPORTED_MODULE_18__.SYNC_EVENT, _this.props.syncId, data, _this.eventEmitterSymbol);\n                }\n            });\n            _defineProperty(_this, \"applySyncEvent\", function(data) {\n                var _this$props = _this.props, layout = _this$props.layout, syncMethod = _this$props.syncMethod;\n                var updateId = _this.state.updateId;\n                var dataStartIndex = data.dataStartIndex, dataEndIndex = data.dataEndIndex;\n                if (data.dataStartIndex !== undefined || data.dataEndIndex !== undefined) {\n                    _this.setState(_objectSpread({\n                        dataStartIndex: dataStartIndex,\n                        dataEndIndex: dataEndIndex\n                    }, updateStateOfAxisMapsOffsetAndStackGroups({\n                        props: _this.props,\n                        dataStartIndex: dataStartIndex,\n                        dataEndIndex: dataEndIndex,\n                        updateId: updateId\n                    }, _this.state)));\n                } else if (data.activeTooltipIndex !== undefined) {\n                    var chartX = data.chartX, chartY = data.chartY;\n                    var activeTooltipIndex = data.activeTooltipIndex;\n                    var _this$state2 = _this.state, offset = _this$state2.offset, tooltipTicks = _this$state2.tooltipTicks;\n                    if (!offset) {\n                        return;\n                    }\n                    if (typeof syncMethod === 'function') {\n                        // Call a callback function. If there is an application specific algorithm\n                        activeTooltipIndex = syncMethod(tooltipTicks, data);\n                    } else if (syncMethod === 'value') {\n                        // Set activeTooltipIndex to the index with the same value as data.activeLabel\n                        // For loop instead of findIndex because the latter is very slow in some browsers\n                        activeTooltipIndex = -1; // in case we cannot find the element\n                        for(var i = 0; i < tooltipTicks.length; i++){\n                            if (tooltipTicks[i].value === data.activeLabel) {\n                                activeTooltipIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    var viewBox = _objectSpread(_objectSpread({}, offset), {}, {\n                        x: offset.left,\n                        y: offset.top\n                    });\n                    // When a categorical chart is combined with another chart, the value of chartX\n                    // and chartY may beyond the boundaries.\n                    var validateChartX = Math.min(chartX, viewBox.x + viewBox.width);\n                    var validateChartY = Math.min(chartY, viewBox.y + viewBox.height);\n                    var activeLabel = tooltipTicks[activeTooltipIndex] && tooltipTicks[activeTooltipIndex].value;\n                    var activePayload = getTooltipContent(_this.state, _this.props.data, activeTooltipIndex);\n                    var activeCoordinate = tooltipTicks[activeTooltipIndex] ? {\n                        x: layout === 'horizontal' ? tooltipTicks[activeTooltipIndex].coordinate : validateChartX,\n                        y: layout === 'horizontal' ? validateChartY : tooltipTicks[activeTooltipIndex].coordinate\n                    } : originCoordinate;\n                    _this.setState(_objectSpread(_objectSpread({}, data), {}, {\n                        activeLabel: activeLabel,\n                        activeCoordinate: activeCoordinate,\n                        activePayload: activePayload,\n                        activeTooltipIndex: activeTooltipIndex\n                    }));\n                } else {\n                    _this.setState(data);\n                }\n            });\n            _defineProperty(_this, \"renderCursor\", function(element) {\n                var _element$props$active;\n                var _this$state3 = _this.state, isTooltipActive = _this$state3.isTooltipActive, activeCoordinate = _this$state3.activeCoordinate, activePayload = _this$state3.activePayload, offset = _this$state3.offset, activeTooltipIndex = _this$state3.activeTooltipIndex, tooltipAxisBandSize = _this$state3.tooltipAxisBandSize;\n                var tooltipEventType = _this.getTooltipEventType();\n                // The cursor is a part of the Tooltip, and it should be shown (by default) when the Tooltip is active.\n                var isActive = (_element$props$active = element.props.active) !== null && _element$props$active !== void 0 ? _element$props$active : isTooltipActive;\n                var layout = _this.props.layout;\n                var key = element.key || '_recharts-cursor';\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_component_Cursor__WEBPACK_IMPORTED_MODULE_19__.Cursor, {\n                    key: key,\n                    activeCoordinate: activeCoordinate,\n                    activePayload: activePayload,\n                    activeTooltipIndex: activeTooltipIndex,\n                    chartName: chartName,\n                    element: element,\n                    isActive: isActive,\n                    layout: layout,\n                    offset: offset,\n                    tooltipAxisBandSize: tooltipAxisBandSize,\n                    tooltipEventType: tooltipEventType\n                });\n            });\n            _defineProperty(_this, \"renderPolarAxis\", function(element, displayName, index) {\n                var axisType = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(element, 'type.axisType');\n                var axisMap = lodash_get__WEBPACK_IMPORTED_MODULE_4___default()(_this.state, \"\".concat(axisType, \"Map\"));\n                var elementDefaultProps = element.type.defaultProps;\n                var elementProps = elementDefaultProps !== undefined ? _objectSpread(_objectSpread({}, elementDefaultProps), element.props) : element.props;\n                var axisOption = axisMap && axisMap[elementProps[\"\".concat(axisType, \"Id\")]];\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, _objectSpread(_objectSpread({}, axisOption), {}, {\n                    className: (0,clsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(axisType, axisOption.className),\n                    key: element.key || \"\".concat(displayName, \"-\").concat(index),\n                    ticks: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTicksOfAxis)(axisOption, true)\n                }));\n            });\n            _defineProperty(_this, \"renderPolarGrid\", function(element) {\n                var _element$props = element.props, radialLines = _element$props.radialLines, polarAngles = _element$props.polarAngles, polarRadius = _element$props.polarRadius;\n                var _this$state4 = _this.state, radiusAxisMap = _this$state4.radiusAxisMap, angleAxisMap = _this$state4.angleAxisMap;\n                var radiusAxis = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.getAnyElementOfObject)(radiusAxisMap);\n                var angleAxis = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.getAnyElementOfObject)(angleAxisMap);\n                var cx = angleAxis.cx, cy = angleAxis.cy, innerRadius = angleAxis.innerRadius, outerRadius = angleAxis.outerRadius;\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, {\n                    polarAngles: Array.isArray(polarAngles) ? polarAngles : (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTicksOfAxis)(angleAxis, true).map(function(entry) {\n                        return entry.coordinate;\n                    }),\n                    polarRadius: Array.isArray(polarRadius) ? polarRadius : (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getTicksOfAxis)(radiusAxis, true).map(function(entry) {\n                        return entry.coordinate;\n                    }),\n                    cx: cx,\n                    cy: cy,\n                    innerRadius: innerRadius,\n                    outerRadius: outerRadius,\n                    key: element.key || 'polar-grid',\n                    radialLines: radialLines\n                });\n            });\n            /**\n       * Draw legend\n       * @return {ReactElement}            The instance of Legend\n       */ _defineProperty(_this, \"renderLegend\", function() {\n                var formattedGraphicalItems = _this.state.formattedGraphicalItems;\n                var _this$props2 = _this.props, children = _this$props2.children, width = _this$props2.width, height = _this$props2.height;\n                var margin = _this.props.margin || {};\n                var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n                var props = (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_20__.getLegendProps)({\n                    children: children,\n                    formattedGraphicalItems: formattedGraphicalItems,\n                    legendWidth: legendWidth,\n                    legendContent: legendContent\n                });\n                if (!props) {\n                    return null;\n                }\n                var item = props.item, otherProps = _objectWithoutProperties(props, _excluded);\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(item, _objectSpread(_objectSpread({}, otherProps), {}, {\n                    chartWidth: width,\n                    chartHeight: height,\n                    margin: margin,\n                    onBBoxUpdate: _this.handleLegendBBoxUpdate\n                }));\n            });\n            /**\n       * Draw Tooltip\n       * @return {ReactElement}  The instance of Tooltip\n       */ _defineProperty(_this, \"renderTooltip\", function() {\n                var _tooltipItem$props$ac;\n                var _this$props3 = _this.props, children = _this$props3.children, accessibilityLayer = _this$props3.accessibilityLayer;\n                var tooltipItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip);\n                if (!tooltipItem) {\n                    return null;\n                }\n                var _this$state5 = _this.state, isTooltipActive = _this$state5.isTooltipActive, activeCoordinate = _this$state5.activeCoordinate, activePayload = _this$state5.activePayload, activeLabel = _this$state5.activeLabel, offset = _this$state5.offset;\n                // The user can set isActive on the Tooltip,\n                // and we respect the user to enable customisation.\n                // The Tooltip is active if the user has set isActive, or if the tooltip is active due to a mouse event.\n                var isActive = (_tooltipItem$props$ac = tooltipItem.props.active) !== null && _tooltipItem$props$ac !== void 0 ? _tooltipItem$props$ac : isTooltipActive;\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(tooltipItem, {\n                    viewBox: _objectSpread(_objectSpread({}, offset), {}, {\n                        x: offset.left,\n                        y: offset.top\n                    }),\n                    active: isActive,\n                    label: activeLabel,\n                    payload: isActive ? activePayload : [],\n                    coordinate: activeCoordinate,\n                    accessibilityLayer: accessibilityLayer\n                });\n            });\n            _defineProperty(_this, \"renderBrush\", function(element) {\n                var _this$props4 = _this.props, margin = _this$props4.margin, data = _this$props4.data;\n                var _this$state6 = _this.state, offset = _this$state6.offset, dataStartIndex = _this$state6.dataStartIndex, dataEndIndex = _this$state6.dataEndIndex, updateId = _this$state6.updateId;\n                // TODO: update brush when children update\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, {\n                    key: element.key || '_recharts-brush',\n                    onChange: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.combineEventHandlers)(_this.handleBrushChange, element.props.onChange),\n                    data: data,\n                    x: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNumber)(element.props.x) ? element.props.x : offset.left,\n                    y: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNumber)(element.props.y) ? element.props.y : offset.top + offset.height + offset.brushBottom - (margin.bottom || 0),\n                    width: (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.isNumber)(element.props.width) ? element.props.width : offset.width,\n                    startIndex: dataStartIndex,\n                    endIndex: dataEndIndex,\n                    updateId: \"brush-\".concat(updateId)\n                });\n            });\n            _defineProperty(_this, \"renderReferenceElement\", function(element, displayName, index) {\n                if (!element) {\n                    return null;\n                }\n                var _this2 = _this, clipPathId = _this2.clipPathId;\n                var _this$state7 = _this.state, xAxisMap = _this$state7.xAxisMap, yAxisMap = _this$state7.yAxisMap, offset = _this$state7.offset;\n                var elementDefaultProps = element.type.defaultProps || {};\n                var _element$props2 = element.props, _element$props2$xAxis = _element$props2.xAxisId, xAxisId = _element$props2$xAxis === void 0 ? elementDefaultProps.xAxisId : _element$props2$xAxis, _element$props2$yAxis = _element$props2.yAxisId, yAxisId = _element$props2$yAxis === void 0 ? elementDefaultProps.yAxisId : _element$props2$yAxis;\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, {\n                    key: element.key || \"\".concat(displayName, \"-\").concat(index),\n                    xAxis: xAxisMap[xAxisId],\n                    yAxis: yAxisMap[yAxisId],\n                    viewBox: {\n                        x: offset.left,\n                        y: offset.top,\n                        width: offset.width,\n                        height: offset.height\n                    },\n                    clipPathId: clipPathId\n                });\n            });\n            _defineProperty(_this, \"renderActivePoints\", function(_ref10) {\n                var item = _ref10.item, activePoint = _ref10.activePoint, basePoint = _ref10.basePoint, childIndex = _ref10.childIndex, isRange = _ref10.isRange;\n                var result = [];\n                // item is not a React Element so we don't need to resolve defaultProps.\n                var key = item.props.key;\n                var itemItemProps = item.item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.item.type.defaultProps), item.item.props) : item.item.props;\n                var activeDot = itemItemProps.activeDot, dataKey = itemItemProps.dataKey;\n                var dotProps = _objectSpread(_objectSpread({\n                    index: childIndex,\n                    dataKey: dataKey,\n                    cx: activePoint.x,\n                    cy: activePoint.y,\n                    r: 4,\n                    fill: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.getMainColorOfGraphicItem)(item.item),\n                    strokeWidth: 2,\n                    stroke: '#fff',\n                    payload: activePoint.payload,\n                    value: activePoint.value\n                }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.filterProps)(activeDot, false)), (0,_util_types__WEBPACK_IMPORTED_MODULE_22__.adaptEventHandlers)(activeDot));\n                result.push(CategoricalChartWrapper.renderActiveDot(activeDot, dotProps, \"\".concat(key, \"-activePoint-\").concat(childIndex)));\n                if (basePoint) {\n                    result.push(CategoricalChartWrapper.renderActiveDot(activeDot, _objectSpread(_objectSpread({}, dotProps), {}, {\n                        cx: basePoint.x,\n                        cy: basePoint.y\n                    }), \"\".concat(key, \"-basePoint-\").concat(childIndex)));\n                } else if (isRange) {\n                    result.push(null);\n                }\n                return result;\n            });\n            _defineProperty(_this, \"renderGraphicChild\", function(element, displayName, index) {\n                var item = _this.filterFormatItem(element, displayName, index);\n                if (!item) {\n                    return null;\n                }\n                var tooltipEventType = _this.getTooltipEventType();\n                var _this$state8 = _this.state, isTooltipActive = _this$state8.isTooltipActive, tooltipAxis = _this$state8.tooltipAxis, activeTooltipIndex = _this$state8.activeTooltipIndex, activeLabel = _this$state8.activeLabel;\n                var children = _this.props.children;\n                var tooltipItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip);\n                // item is not a React Element so we don't need to resolve defaultProps\n                var _item$props = item.props, points = _item$props.points, isRange = _item$props.isRange, baseLine = _item$props.baseLine;\n                var itemItemProps = item.item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.item.type.defaultProps), item.item.props) : item.item.props;\n                var activeDot = itemItemProps.activeDot, hide = itemItemProps.hide, activeBar = itemItemProps.activeBar, activeShape = itemItemProps.activeShape;\n                var hasActive = Boolean(!hide && isTooltipActive && tooltipItem && (activeDot || activeBar || activeShape));\n                var itemEvents = {};\n                if (tooltipEventType !== 'axis' && tooltipItem && tooltipItem.props.trigger === 'click') {\n                    itemEvents = {\n                        onClick: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.combineEventHandlers)(_this.handleItemMouseEnter, element.props.onClick)\n                    };\n                } else if (tooltipEventType !== 'axis') {\n                    itemEvents = {\n                        onMouseLeave: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.combineEventHandlers)(_this.handleItemMouseLeave, element.props.onMouseLeave),\n                        onMouseEnter: (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_11__.combineEventHandlers)(_this.handleItemMouseEnter, element.props.onMouseEnter)\n                    };\n                }\n                var graphicalItem = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, _objectSpread(_objectSpread({}, item.props), itemEvents));\n                function findWithPayload(entry) {\n                    // TODO needs to verify dataKey is Function\n                    return typeof tooltipAxis.dataKey === 'function' ? tooltipAxis.dataKey(entry.payload) : null;\n                }\n                if (hasActive) {\n                    if (activeTooltipIndex >= 0) {\n                        var activePoint, basePoint;\n                        if (tooltipAxis.dataKey && !tooltipAxis.allowDuplicatedCategory) {\n                            // number transform to string\n                            var specifiedKey = typeof tooltipAxis.dataKey === 'function' ? findWithPayload : 'payload.'.concat(tooltipAxis.dataKey.toString());\n                            activePoint = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.findEntryInArray)(points, specifiedKey, activeLabel);\n                            basePoint = isRange && baseLine && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.findEntryInArray)(baseLine, specifiedKey, activeLabel);\n                        } else {\n                            activePoint = points === null || points === void 0 ? void 0 : points[activeTooltipIndex];\n                            basePoint = isRange && baseLine && baseLine[activeTooltipIndex];\n                        }\n                        if (activeShape || activeBar) {\n                            var activeIndex = element.props.activeIndex !== undefined ? element.props.activeIndex : activeTooltipIndex;\n                            return [\n                                /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {\n                                    activeIndex: activeIndex\n                                })),\n                                null,\n                                null\n                            ];\n                        }\n                        if (!lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(activePoint)) {\n                            return [\n                                graphicalItem\n                            ].concat(_toConsumableArray(_this.renderActivePoints({\n                                item: item,\n                                activePoint: activePoint,\n                                basePoint: basePoint,\n                                childIndex: activeTooltipIndex,\n                                isRange: isRange\n                            })));\n                        }\n                    } else {\n                        var _this$getItemByXY;\n                        /**\n             * We hit this block if consumer uses a Tooltip without XAxis and/or YAxis.\n             * In which case, this.state.activeTooltipIndex never gets set\n             * because the mouse events that trigger that value getting set never get trigged without the axis components.\n             *\n             * An example usage case is a FunnelChart\n             */ var _ref11 = (_this$getItemByXY = _this.getItemByXY(_this.state.activeCoordinate)) !== null && _this$getItemByXY !== void 0 ? _this$getItemByXY : {\n                            graphicalItem: graphicalItem\n                        }, _ref11$graphicalItem = _ref11.graphicalItem, _ref11$graphicalItem$ = _ref11$graphicalItem.item, xyItem = _ref11$graphicalItem$ === void 0 ? element : _ref11$graphicalItem$, childIndex = _ref11$graphicalItem.childIndex;\n                        var elementProps = _objectSpread(_objectSpread(_objectSpread({}, item.props), itemEvents), {}, {\n                            activeIndex: childIndex\n                        });\n                        return [\n                            /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(xyItem, elementProps),\n                            null,\n                            null\n                        ];\n                    }\n                }\n                if (isRange) {\n                    return [\n                        graphicalItem,\n                        null,\n                        null\n                    ];\n                }\n                return [\n                    graphicalItem,\n                    null\n                ];\n            });\n            _defineProperty(_this, \"renderCustomized\", function(element, displayName, index) {\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(element, _objectSpread(_objectSpread({\n                    key: \"recharts-customized-\".concat(index)\n                }, _this.props), _this.state));\n            });\n            _defineProperty(_this, \"renderMap\", {\n                CartesianGrid: {\n                    handler: renderAsIs,\n                    once: true\n                },\n                ReferenceArea: {\n                    handler: _this.renderReferenceElement\n                },\n                ReferenceLine: {\n                    handler: renderAsIs\n                },\n                ReferenceDot: {\n                    handler: _this.renderReferenceElement\n                },\n                XAxis: {\n                    handler: renderAsIs\n                },\n                YAxis: {\n                    handler: renderAsIs\n                },\n                Brush: {\n                    handler: _this.renderBrush,\n                    once: true\n                },\n                Bar: {\n                    handler: _this.renderGraphicChild\n                },\n                Line: {\n                    handler: _this.renderGraphicChild\n                },\n                Area: {\n                    handler: _this.renderGraphicChild\n                },\n                Radar: {\n                    handler: _this.renderGraphicChild\n                },\n                RadialBar: {\n                    handler: _this.renderGraphicChild\n                },\n                Scatter: {\n                    handler: _this.renderGraphicChild\n                },\n                Pie: {\n                    handler: _this.renderGraphicChild\n                },\n                Funnel: {\n                    handler: _this.renderGraphicChild\n                },\n                Tooltip: {\n                    handler: _this.renderCursor,\n                    once: true\n                },\n                PolarGrid: {\n                    handler: _this.renderPolarGrid,\n                    once: true\n                },\n                PolarAngleAxis: {\n                    handler: _this.renderPolarAxis\n                },\n                PolarRadiusAxis: {\n                    handler: _this.renderPolarAxis\n                },\n                Customized: {\n                    handler: _this.renderCustomized\n                }\n            });\n            _this.clipPathId = \"\".concat((_props$id = _props.id) !== null && _props$id !== void 0 ? _props$id : (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.uniqueId)('recharts'), \"-clip\");\n            // trigger 60fps\n            _this.throttleTriggeredAfterMouseMove = lodash_throttle__WEBPACK_IMPORTED_MODULE_6___default()(_this.triggeredAfterMouseMove, (_props$throttleDelay = _props.throttleDelay) !== null && _props$throttleDelay !== void 0 ? _props$throttleDelay : 1000 / 60);\n            _this.state = {};\n            return _this;\n        }\n        _inherits(CategoricalChartWrapper, _Component);\n        return _createClass(CategoricalChartWrapper, [\n            {\n                key: \"componentDidMount\",\n                value: function componentDidMount() {\n                    var _this$props$margin$le, _this$props$margin$to;\n                    this.addListener();\n                    this.accessibilityManager.setDetails({\n                        container: this.container,\n                        offset: {\n                            left: (_this$props$margin$le = this.props.margin.left) !== null && _this$props$margin$le !== void 0 ? _this$props$margin$le : 0,\n                            top: (_this$props$margin$to = this.props.margin.top) !== null && _this$props$margin$to !== void 0 ? _this$props$margin$to : 0\n                        },\n                        coordinateList: this.state.tooltipTicks,\n                        mouseHandlerCallback: this.triggeredAfterMouseMove,\n                        layout: this.props.layout\n                    });\n                    this.displayDefaultTooltip();\n                }\n            },\n            {\n                key: \"displayDefaultTooltip\",\n                value: function displayDefaultTooltip() {\n                    var _this$props5 = this.props, children = _this$props5.children, data = _this$props5.data, height = _this$props5.height, layout = _this$props5.layout;\n                    var tooltipElem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip);\n                    // If the chart doesn't include a <Tooltip /> element, there's no tooltip to display\n                    if (!tooltipElem) {\n                        return;\n                    }\n                    var defaultIndex = tooltipElem.props.defaultIndex;\n                    // Protect against runtime errors\n                    if (typeof defaultIndex !== 'number' || defaultIndex < 0 || defaultIndex > this.state.tooltipTicks.length - 1) {\n                        return;\n                    }\n                    var activeLabel = this.state.tooltipTicks[defaultIndex] && this.state.tooltipTicks[defaultIndex].value;\n                    var activePayload = getTooltipContent(this.state, data, defaultIndex, activeLabel);\n                    var independentAxisCoord = this.state.tooltipTicks[defaultIndex].coordinate;\n                    var dependentAxisCoord = (this.state.offset.top + height) / 2;\n                    var isHorizontal = layout === 'horizontal';\n                    var activeCoordinate = isHorizontal ? {\n                        x: independentAxisCoord,\n                        y: dependentAxisCoord\n                    } : {\n                        y: independentAxisCoord,\n                        x: dependentAxisCoord\n                    };\n                    // Unlike other chart types, scatter plot's tooltip positions rely on both X and Y coordinates. Only the scatter plot\n                    // element knows its own Y coordinates.\n                    // If there's a scatter plot, we'll want to grab that element for an interrogation.\n                    var scatterPlotElement = this.state.formattedGraphicalItems.find(function(_ref12) {\n                        var item = _ref12.item;\n                        return item.type.name === 'Scatter';\n                    });\n                    if (scatterPlotElement) {\n                        activeCoordinate = _objectSpread(_objectSpread({}, activeCoordinate), scatterPlotElement.props.points[defaultIndex].tooltipPosition);\n                        activePayload = scatterPlotElement.props.points[defaultIndex].tooltipPayload;\n                    }\n                    var nextState = {\n                        activeTooltipIndex: defaultIndex,\n                        isTooltipActive: true,\n                        activeLabel: activeLabel,\n                        activePayload: activePayload,\n                        activeCoordinate: activeCoordinate\n                    };\n                    this.setState(nextState);\n                    this.renderCursor(tooltipElem);\n                    // Make sure that anyone who keyboard-only users who tab to the chart will start their\n                    // cursors at defaultIndex\n                    this.accessibilityManager.setIndex(defaultIndex);\n                }\n            },\n            {\n                key: \"getSnapshotBeforeUpdate\",\n                value: function getSnapshotBeforeUpdate(prevProps, prevState) {\n                    if (!this.props.accessibilityLayer) {\n                        return null;\n                    }\n                    if (this.state.tooltipTicks !== prevState.tooltipTicks) {\n                        this.accessibilityManager.setDetails({\n                            coordinateList: this.state.tooltipTicks\n                        });\n                    }\n                    if (this.props.layout !== prevProps.layout) {\n                        this.accessibilityManager.setDetails({\n                            layout: this.props.layout\n                        });\n                    }\n                    if (this.props.margin !== prevProps.margin) {\n                        var _this$props$margin$le2, _this$props$margin$to2;\n                        this.accessibilityManager.setDetails({\n                            offset: {\n                                left: (_this$props$margin$le2 = this.props.margin.left) !== null && _this$props$margin$le2 !== void 0 ? _this$props$margin$le2 : 0,\n                                top: (_this$props$margin$to2 = this.props.margin.top) !== null && _this$props$margin$to2 !== void 0 ? _this$props$margin$to2 : 0\n                            }\n                        });\n                    }\n                    // Something has to be returned for getSnapshotBeforeUpdate\n                    return null;\n                }\n            },\n            {\n                key: \"componentDidUpdate\",\n                value: function componentDidUpdate(prevProps) {\n                    // Check to see if the Tooltip updated. If so, re-check default tooltip position\n                    if (!(0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.isChildrenEqual)([\n                        (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(prevProps.children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip)\n                    ], [\n                        (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(this.props.children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip)\n                    ])) {\n                        this.displayDefaultTooltip();\n                    }\n                }\n            },\n            {\n                key: \"componentWillUnmount\",\n                value: function componentWillUnmount() {\n                    this.removeListener();\n                    this.throttleTriggeredAfterMouseMove.cancel();\n                }\n            },\n            {\n                key: \"getTooltipEventType\",\n                value: function getTooltipEventType() {\n                    var tooltipItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(this.props.children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip);\n                    if (tooltipItem && typeof tooltipItem.props.shared === 'boolean') {\n                        var eventType = tooltipItem.props.shared ? 'axis' : 'item';\n                        return validateTooltipEventTypes.indexOf(eventType) >= 0 ? eventType : defaultTooltipEventType;\n                    }\n                    return defaultTooltipEventType;\n                }\n            },\n            {\n                key: \"getMouseInfo\",\n                value: function getMouseInfo(event) {\n                    if (!this.container) {\n                        return null;\n                    }\n                    var element = this.container;\n                    var boundingRect = element.getBoundingClientRect();\n                    var containerOffset = (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_23__.getOffset)(boundingRect);\n                    var e = {\n                        chartX: Math.round(event.pageX - containerOffset.left),\n                        chartY: Math.round(event.pageY - containerOffset.top)\n                    };\n                    var scale = boundingRect.width / element.offsetWidth || 1;\n                    var rangeObj = this.inRange(e.chartX, e.chartY, scale);\n                    if (!rangeObj) {\n                        return null;\n                    }\n                    var _this$state9 = this.state, xAxisMap = _this$state9.xAxisMap, yAxisMap = _this$state9.yAxisMap;\n                    var tooltipEventType = this.getTooltipEventType();\n                    var toolTipData = getTooltipData(this.state, this.props.data, this.props.layout, rangeObj);\n                    if (tooltipEventType !== 'axis' && xAxisMap && yAxisMap) {\n                        var xScale = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.getAnyElementOfObject)(xAxisMap).scale;\n                        var yScale = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.getAnyElementOfObject)(yAxisMap).scale;\n                        var xValue = xScale && xScale.invert ? xScale.invert(e.chartX) : null;\n                        var yValue = yScale && yScale.invert ? yScale.invert(e.chartY) : null;\n                        return _objectSpread(_objectSpread({}, e), {}, {\n                            xValue: xValue,\n                            yValue: yValue\n                        }, toolTipData);\n                    }\n                    if (toolTipData) {\n                        return _objectSpread(_objectSpread({}, e), toolTipData);\n                    }\n                    return null;\n                }\n            },\n            {\n                key: \"inRange\",\n                value: function inRange(x, y) {\n                    var scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n                    var layout = this.props.layout;\n                    var scaledX = x / scale, scaledY = y / scale;\n                    if (layout === 'horizontal' || layout === 'vertical') {\n                        var offset = this.state.offset;\n                        var isInRange = scaledX >= offset.left && scaledX <= offset.left + offset.width && scaledY >= offset.top && scaledY <= offset.top + offset.height;\n                        return isInRange ? {\n                            x: scaledX,\n                            y: scaledY\n                        } : null;\n                    }\n                    var _this$state10 = this.state, angleAxisMap = _this$state10.angleAxisMap, radiusAxisMap = _this$state10.radiusAxisMap;\n                    if (angleAxisMap && radiusAxisMap) {\n                        var angleAxis = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_10__.getAnyElementOfObject)(angleAxisMap);\n                        return (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_9__.inRangeOfSector)({\n                            x: scaledX,\n                            y: scaledY\n                        }, angleAxis);\n                    }\n                    return null;\n                }\n            },\n            {\n                key: \"parseEventsOfWrapper\",\n                value: function parseEventsOfWrapper() {\n                    var children = this.props.children;\n                    var tooltipEventType = this.getTooltipEventType();\n                    var tooltipItem = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _component_Tooltip__WEBPACK_IMPORTED_MODULE_21__.Tooltip);\n                    var tooltipEvents = {};\n                    if (tooltipItem && tooltipEventType === 'axis') {\n                        if (tooltipItem.props.trigger === 'click') {\n                            tooltipEvents = {\n                                onClick: this.handleClick\n                            };\n                        } else {\n                            tooltipEvents = {\n                                onMouseEnter: this.handleMouseEnter,\n                                onDoubleClick: this.handleDoubleClick,\n                                onMouseMove: this.handleMouseMove,\n                                onMouseLeave: this.handleMouseLeave,\n                                onTouchMove: this.handleTouchMove,\n                                onTouchStart: this.handleTouchStart,\n                                onTouchEnd: this.handleTouchEnd,\n                                onContextMenu: this.handleContextMenu\n                            };\n                        }\n                    }\n                    // @ts-expect-error adaptEventHandlers expects DOM Event but generateCategoricalChart works with React UIEvents\n                    var outerEvents = (0,_util_types__WEBPACK_IMPORTED_MODULE_22__.adaptEventHandlers)(this.props, this.handleOuterEvent);\n                    return _objectSpread(_objectSpread({}, outerEvents), tooltipEvents);\n                }\n            },\n            {\n                key: \"addListener\",\n                value: function addListener() {\n                    _util_Events__WEBPACK_IMPORTED_MODULE_18__.eventCenter.on(_util_Events__WEBPACK_IMPORTED_MODULE_18__.SYNC_EVENT, this.handleReceiveSyncEvent);\n                }\n            },\n            {\n                key: \"removeListener\",\n                value: function removeListener() {\n                    _util_Events__WEBPACK_IMPORTED_MODULE_18__.eventCenter.removeListener(_util_Events__WEBPACK_IMPORTED_MODULE_18__.SYNC_EVENT, this.handleReceiveSyncEvent);\n                }\n            },\n            {\n                key: \"filterFormatItem\",\n                value: function filterFormatItem(item, displayName, childIndex) {\n                    var formattedGraphicalItems = this.state.formattedGraphicalItems;\n                    for(var i = 0, len = formattedGraphicalItems.length; i < len; i++){\n                        var entry = formattedGraphicalItems[i];\n                        if (entry.item === item || entry.props.key === item.key || displayName === (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.getDisplayName)(entry.item.type) && childIndex === entry.childIndex) {\n                            return entry;\n                        }\n                    }\n                    return null;\n                }\n            },\n            {\n                key: \"renderClipPath\",\n                value: function renderClipPath() {\n                    var clipPathId = this.clipPathId;\n                    var _this$state$offset = this.state.offset, left = _this$state$offset.left, top = _this$state$offset.top, height = _this$state$offset.height, width = _this$state$offset.width;\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"clipPath\", {\n                        id: clipPathId\n                    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"rect\", {\n                        x: left,\n                        y: top,\n                        height: height,\n                        width: width\n                    })));\n                }\n            },\n            {\n                key: \"getXScales\",\n                value: function getXScales() {\n                    var xAxisMap = this.state.xAxisMap;\n                    return xAxisMap ? Object.entries(xAxisMap).reduce(function(res, _ref13) {\n                        var _ref14 = _slicedToArray(_ref13, 2), axisId = _ref14[0], axisProps = _ref14[1];\n                        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, axisId, axisProps.scale));\n                    }, {}) : null;\n                }\n            },\n            {\n                key: \"getYScales\",\n                value: function getYScales() {\n                    var yAxisMap = this.state.yAxisMap;\n                    return yAxisMap ? Object.entries(yAxisMap).reduce(function(res, _ref15) {\n                        var _ref16 = _slicedToArray(_ref15, 2), axisId = _ref16[0], axisProps = _ref16[1];\n                        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, axisId, axisProps.scale));\n                    }, {}) : null;\n                }\n            },\n            {\n                key: \"getXScaleByAxisId\",\n                value: function getXScaleByAxisId(axisId) {\n                    var _this$state$xAxisMap;\n                    return (_this$state$xAxisMap = this.state.xAxisMap) === null || _this$state$xAxisMap === void 0 || (_this$state$xAxisMap = _this$state$xAxisMap[axisId]) === null || _this$state$xAxisMap === void 0 ? void 0 : _this$state$xAxisMap.scale;\n                }\n            },\n            {\n                key: \"getYScaleByAxisId\",\n                value: function getYScaleByAxisId(axisId) {\n                    var _this$state$yAxisMap;\n                    return (_this$state$yAxisMap = this.state.yAxisMap) === null || _this$state$yAxisMap === void 0 || (_this$state$yAxisMap = _this$state$yAxisMap[axisId]) === null || _this$state$yAxisMap === void 0 ? void 0 : _this$state$yAxisMap.scale;\n                }\n            },\n            {\n                key: \"getItemByXY\",\n                value: function getItemByXY(chartXY) {\n                    var _this$state11 = this.state, formattedGraphicalItems = _this$state11.formattedGraphicalItems, activeItem = _this$state11.activeItem;\n                    if (formattedGraphicalItems && formattedGraphicalItems.length) {\n                        for(var i = 0, len = formattedGraphicalItems.length; i < len; i++){\n                            var graphicalItem = formattedGraphicalItems[i];\n                            // graphicalItem is not a React Element so we don't need to resolve defaultProps\n                            var props = graphicalItem.props, item = graphicalItem.item;\n                            var itemProps = item.type.defaultProps !== undefined ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;\n                            var itemDisplayName = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.getDisplayName)(item.type);\n                            if (itemDisplayName === 'Bar') {\n                                var activeBarItem = (props.data || []).find(function(entry) {\n                                    return (0,_shape_Rectangle__WEBPACK_IMPORTED_MODULE_24__.isInRectangle)(chartXY, entry);\n                                });\n                                if (activeBarItem) {\n                                    return {\n                                        graphicalItem: graphicalItem,\n                                        payload: activeBarItem\n                                    };\n                                }\n                            } else if (itemDisplayName === 'RadialBar') {\n                                var _activeBarItem = (props.data || []).find(function(entry) {\n                                    return (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_9__.inRangeOfSector)(chartXY, entry);\n                                });\n                                if (_activeBarItem) {\n                                    return {\n                                        graphicalItem: graphicalItem,\n                                        payload: _activeBarItem\n                                    };\n                                }\n                            } else if ((0,_util_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_25__.isFunnel)(graphicalItem, activeItem) || (0,_util_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_25__.isPie)(graphicalItem, activeItem) || (0,_util_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_25__.isScatter)(graphicalItem, activeItem)) {\n                                var activeIndex = (0,_util_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_25__.getActiveShapeIndexForTooltip)({\n                                    graphicalItem: graphicalItem,\n                                    activeTooltipItem: activeItem,\n                                    itemData: itemProps.data\n                                });\n                                var childIndex = itemProps.activeIndex === undefined ? activeIndex : itemProps.activeIndex;\n                                return {\n                                    graphicalItem: _objectSpread(_objectSpread({}, graphicalItem), {}, {\n                                        childIndex: childIndex\n                                    }),\n                                    payload: (0,_util_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_25__.isScatter)(graphicalItem, activeItem) ? itemProps.data[activeIndex] : graphicalItem.props.data[activeIndex]\n                                };\n                            }\n                        }\n                    }\n                    return null;\n                }\n            },\n            {\n                key: \"render\",\n                value: function render() {\n                    var _this3 = this;\n                    if (!(0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.validateWidthHeight)(this)) {\n                        return null;\n                    }\n                    var _this$props6 = this.props, children = _this$props6.children, className = _this$props6.className, width = _this$props6.width, height = _this$props6.height, style = _this$props6.style, compact = _this$props6.compact, title = _this$props6.title, desc = _this$props6.desc, others = _objectWithoutProperties(_this$props6, _excluded2);\n                    var attrs = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.filterProps)(others, false);\n                    // The \"compact\" mode is mainly used as the panorama within Brush\n                    if (compact) {\n                        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_26__.ChartLayoutContextProvider, {\n                            state: this.state,\n                            width: this.props.width,\n                            height: this.props.height,\n                            clipPathId: this.clipPathId\n                        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Surface__WEBPACK_IMPORTED_MODULE_27__.Surface, _extends({}, attrs, {\n                            width: width,\n                            height: height,\n                            title: title,\n                            desc: desc\n                        }), this.renderClipPath(), (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.renderByOrder)(children, this.renderMap)));\n                    }\n                    if (this.props.accessibilityLayer) {\n                        var _this$props$tabIndex, _this$props$role;\n                        // Set tabIndex to 0 by default (can be overwritten)\n                        attrs.tabIndex = (_this$props$tabIndex = this.props.tabIndex) !== null && _this$props$tabIndex !== void 0 ? _this$props$tabIndex : 0;\n                        // Set role to img by default (can be overwritten)\n                        attrs.role = (_this$props$role = this.props.role) !== null && _this$props$role !== void 0 ? _this$props$role : 'application';\n                        attrs.onKeyDown = function(e) {\n                            _this3.accessibilityManager.keyboardEvent(e);\n                        // 'onKeyDown' is not currently a supported prop that can be passed through\n                        // if it's added, this should be added: this.props.onKeyDown(e);\n                        };\n                        attrs.onFocus = function() {\n                            _this3.accessibilityManager.focus();\n                        // 'onFocus' is not currently a supported prop that can be passed through\n                        // if it's added, the focus event should be forwarded to the prop\n                        };\n                    }\n                    var events = this.parseEventsOfWrapper();\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_context_chartLayoutContext__WEBPACK_IMPORTED_MODULE_26__.ChartLayoutContextProvider, {\n                        state: this.state,\n                        width: this.props.width,\n                        height: this.props.height,\n                        clipPathId: this.clipPathId\n                    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({\n                        className: (0,clsx__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('recharts-wrapper', className),\n                        style: _objectSpread({\n                            position: 'relative',\n                            cursor: 'default',\n                            width: width,\n                            height: height\n                        }, style)\n                    }, events, {\n                        ref: function ref(node) {\n                            _this3.container = node;\n                        }\n                    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Surface__WEBPACK_IMPORTED_MODULE_27__.Surface, _extends({}, attrs, {\n                        width: width,\n                        height: height,\n                        title: title,\n                        desc: desc,\n                        style: FULL_WIDTH_AND_HEIGHT\n                    }), this.renderClipPath(), (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.renderByOrder)(children, this.renderMap)), this.renderLegend(), this.renderTooltip()));\n                }\n            }\n        ]);\n    }(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n    _defineProperty(CategoricalChartWrapper, \"displayName\", chartName);\n    // todo join specific chart propTypes\n    _defineProperty(CategoricalChartWrapper, \"defaultProps\", _objectSpread({\n        layout: 'horizontal',\n        stackOffset: 'none',\n        barCategoryGap: '10%',\n        barGap: 4,\n        margin: {\n            top: 5,\n            right: 5,\n            bottom: 5,\n            left: 5\n        },\n        reverseStackOrder: false,\n        syncMethod: 'index'\n    }, defaultProps));\n    _defineProperty(CategoricalChartWrapper, \"getDerivedStateFromProps\", function(nextProps, prevState) {\n        var dataKey = nextProps.dataKey, data = nextProps.data, children = nextProps.children, width = nextProps.width, height = nextProps.height, layout = nextProps.layout, stackOffset = nextProps.stackOffset, margin = nextProps.margin;\n        var dataStartIndex = prevState.dataStartIndex, dataEndIndex = prevState.dataEndIndex;\n        if (prevState.updateId === undefined) {\n            var defaultState = createDefaultState(nextProps);\n            return _objectSpread(_objectSpread(_objectSpread({}, defaultState), {}, {\n                updateId: 0\n            }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({\n                props: nextProps\n            }, defaultState), {}, {\n                updateId: 0\n            }), prevState)), {}, {\n                prevDataKey: dataKey,\n                prevData: data,\n                prevWidth: width,\n                prevHeight: height,\n                prevLayout: layout,\n                prevStackOffset: stackOffset,\n                prevMargin: margin,\n                prevChildren: children\n            });\n        }\n        if (dataKey !== prevState.prevDataKey || data !== prevState.prevData || width !== prevState.prevWidth || height !== prevState.prevHeight || layout !== prevState.prevLayout || stackOffset !== prevState.prevStackOffset || !(0,_util_ShallowEqual__WEBPACK_IMPORTED_MODULE_28__.shallowEqual)(margin, prevState.prevMargin)) {\n            var _defaultState = createDefaultState(nextProps);\n            // Fixes https://github.com/recharts/recharts/issues/2143\n            var keepFromPrevState = {\n                // (chartX, chartY) are (0,0) in default state, but we want to keep the last mouse position to avoid\n                // any flickering\n                chartX: prevState.chartX,\n                chartY: prevState.chartY,\n                // The tooltip should stay active when it was active in the previous render. If this is not\n                // the case, the tooltip disappears and immediately re-appears, causing a flickering effect\n                isTooltipActive: prevState.isTooltipActive\n            };\n            var updatesToState = _objectSpread(_objectSpread({}, getTooltipData(prevState, data, layout)), {}, {\n                updateId: prevState.updateId + 1\n            });\n            var newState = _objectSpread(_objectSpread(_objectSpread({}, _defaultState), keepFromPrevState), updatesToState);\n            return _objectSpread(_objectSpread(_objectSpread({}, newState), updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread({\n                props: nextProps\n            }, newState), prevState)), {}, {\n                prevDataKey: dataKey,\n                prevData: data,\n                prevWidth: width,\n                prevHeight: height,\n                prevLayout: layout,\n                prevStackOffset: stackOffset,\n                prevMargin: margin,\n                prevChildren: children\n            });\n        }\n        if (!(0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.isChildrenEqual)(children, prevState.prevChildren)) {\n            var _brush$props$startInd, _brush$props, _brush$props$endIndex, _brush$props2;\n            // specifically check for Brush - if it exists and the start and end indexes are different, re-render with the new ones\n            var brush = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_14__.findChildByType)(children, _cartesian_Brush__WEBPACK_IMPORTED_MODULE_15__.Brush);\n            var startIndex = brush ? (_brush$props$startInd = (_brush$props = brush.props) === null || _brush$props === void 0 ? void 0 : _brush$props.startIndex) !== null && _brush$props$startInd !== void 0 ? _brush$props$startInd : dataStartIndex : dataStartIndex;\n            var endIndex = brush ? (_brush$props$endIndex = (_brush$props2 = brush.props) === null || _brush$props2 === void 0 ? void 0 : _brush$props2.endIndex) !== null && _brush$props$endIndex !== void 0 ? _brush$props$endIndex : dataEndIndex : dataEndIndex;\n            var hasDifferentStartOrEndIndex = startIndex !== dataStartIndex || endIndex !== dataEndIndex;\n            // update configuration in children\n            var hasGlobalData = !lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(data);\n            var newUpdateId = hasGlobalData && !hasDifferentStartOrEndIndex ? prevState.updateId : prevState.updateId + 1;\n            return _objectSpread(_objectSpread({\n                updateId: newUpdateId\n            }, updateStateOfAxisMapsOffsetAndStackGroups(_objectSpread(_objectSpread({\n                props: nextProps\n            }, prevState), {}, {\n                updateId: newUpdateId,\n                dataStartIndex: startIndex,\n                dataEndIndex: endIndex\n            }), prevState)), {}, {\n                prevChildren: children,\n                dataStartIndex: startIndex,\n                dataEndIndex: endIndex\n            });\n        }\n        return null;\n    });\n    _defineProperty(CategoricalChartWrapper, \"renderActiveDot\", function(option, props, key) {\n        var dot;\n        if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(option)) {\n            dot = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(option, props);\n        } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(option)) {\n            dot = option(props);\n        } else {\n            dot = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Dot__WEBPACK_IMPORTED_MODULE_29__.Dot, props);\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_30__.Layer, {\n            className: \"recharts-active-dot\",\n            key: key\n        }, dot);\n    });\n    var CategoricalChart = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function CategoricalChart(props, ref) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CategoricalChartWrapper, _extends({}, props, {\n            ref: ref\n        }));\n    });\n    CategoricalChart.displayName = CategoricalChartWrapper.displayName;\n    return CategoricalChart;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/chart/generateCategoricalChart.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cell.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cell.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cell: () => (/* binding */ Cell)\n/* harmony export */ });\n/**\n * @fileOverview Cross\n */ var Cell = function Cell(_props) {\n    return null;\n};\nCell.displayName = 'Cell';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jb21wb25lbnQvQ2VsbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FFTSxJQUFJQSxPQUFPLFNBQVNBLEtBQUtDLE1BQU07SUFDcEMsT0FBTztBQUNULEVBQUU7QUFDRkQsS0FBS0UsV0FBVyxHQUFHIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NvbXBvbmVudC9DZWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVPdmVydmlldyBDcm9zc1xuICovXG5cbmV4cG9ydCB2YXIgQ2VsbCA9IGZ1bmN0aW9uIENlbGwoX3Byb3BzKSB7XG4gIHJldHVybiBudWxsO1xufTtcbkNlbGwuZGlzcGxheU5hbWUgPSAnQ2VsbCc7Il0sIm5hbWVzIjpbIkNlbGwiLCJfcHJvcHMiLCJkaXNwbGF5TmFtZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cursor.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cursor.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cursor: () => (/* binding */ Cursor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _shape_Curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shape/Curve */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Curve.js\");\n/* harmony import */ var _shape_Cross__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shape/Cross */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Cross.js\");\n/* harmony import */ var _util_cursor_getCursorRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/cursor/getCursorRectangle */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorRectangle.js\");\n/* harmony import */ var _shape_Rectangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../shape/Rectangle */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js\");\n/* harmony import */ var _util_cursor_getRadialCursorPoints__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/cursor/getRadialCursorPoints */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getRadialCursorPoints.js\");\n/* harmony import */ var _shape_Sector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shape/Sector */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Sector.js\");\n/* harmony import */ var _util_cursor_getCursorPoints__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/cursor/getCursorPoints */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorPoints.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n\n\n\n\n/*\n * Cursor is the background, or a highlight,\n * that shows when user mouses over or activates\n * an area.\n *\n * It usually shows together with a tooltip\n * to emphasise which part of the chart does the tooltip refer to.\n */ function Cursor(props) {\n    var _element$props$cursor, _defaultProps;\n    var element = props.element, tooltipEventType = props.tooltipEventType, isActive = props.isActive, activeCoordinate = props.activeCoordinate, activePayload = props.activePayload, offset = props.offset, activeTooltipIndex = props.activeTooltipIndex, tooltipAxisBandSize = props.tooltipAxisBandSize, layout = props.layout, chartName = props.chartName;\n    var elementPropsCursor = (_element$props$cursor = element.props.cursor) !== null && _element$props$cursor !== void 0 ? _element$props$cursor : (_defaultProps = element.type.defaultProps) === null || _defaultProps === void 0 ? void 0 : _defaultProps.cursor;\n    if (!element || !elementPropsCursor || !isActive || !activeCoordinate || chartName !== 'ScatterChart' && tooltipEventType !== 'axis') {\n        return null;\n    }\n    var restProps;\n    var cursorComp = _shape_Curve__WEBPACK_IMPORTED_MODULE_2__.Curve;\n    if (chartName === 'ScatterChart') {\n        restProps = activeCoordinate;\n        cursorComp = _shape_Cross__WEBPACK_IMPORTED_MODULE_3__.Cross;\n    } else if (chartName === 'BarChart') {\n        restProps = (0,_util_cursor_getCursorRectangle__WEBPACK_IMPORTED_MODULE_4__.getCursorRectangle)(layout, activeCoordinate, offset, tooltipAxisBandSize);\n        cursorComp = _shape_Rectangle__WEBPACK_IMPORTED_MODULE_5__.Rectangle;\n    } else if (layout === 'radial') {\n        var _getRadialCursorPoint = (0,_util_cursor_getRadialCursorPoints__WEBPACK_IMPORTED_MODULE_6__.getRadialCursorPoints)(activeCoordinate), cx = _getRadialCursorPoint.cx, cy = _getRadialCursorPoint.cy, radius = _getRadialCursorPoint.radius, startAngle = _getRadialCursorPoint.startAngle, endAngle = _getRadialCursorPoint.endAngle;\n        restProps = {\n            cx: cx,\n            cy: cy,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            innerRadius: radius,\n            outerRadius: radius\n        };\n        cursorComp = _shape_Sector__WEBPACK_IMPORTED_MODULE_7__.Sector;\n    } else {\n        restProps = {\n            points: (0,_util_cursor_getCursorPoints__WEBPACK_IMPORTED_MODULE_8__.getCursorPoints)(layout, activeCoordinate, offset)\n        };\n        cursorComp = _shape_Curve__WEBPACK_IMPORTED_MODULE_2__.Curve;\n    }\n    var cursorProps = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n        stroke: '#ccc',\n        pointerEvents: 'none'\n    }, offset), restProps), (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_9__.filterProps)(elementPropsCursor, false)), {}, {\n        payload: activePayload,\n        payloadIndex: activeTooltipIndex,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-tooltip-cursor', elementPropsCursor.className)\n    });\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(elementPropsCursor) ? /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(elementPropsCursor, cursorProps) : /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(cursorComp, cursorProps);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Cursor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultLegendContent.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultLegendContent.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultLegendContent: () => (/* binding */ DefaultLegendContent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_LogUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/LogUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\");\n/* harmony import */ var _container_Surface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../container/Surface */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Surface.js\");\n/* harmony import */ var _shape_Symbols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shape/Symbols */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Symbols.js\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Default Legend Content\n */ \n\n\n\n\n\n\nvar SIZE = 32;\nvar DefaultLegendContent = /*#__PURE__*/ function(_PureComponent) {\n    function DefaultLegendContent() {\n        _classCallCheck(this, DefaultLegendContent);\n        return _callSuper(this, DefaultLegendContent, arguments);\n    }\n    _inherits(DefaultLegendContent, _PureComponent);\n    return _createClass(DefaultLegendContent, [\n        {\n            key: \"renderIcon\",\n            value: /**\n     * Render the path of icon\n     * @param {Object} data Data of each legend item\n     * @return {String} Path element\n     */ function renderIcon(data) {\n                var inactiveColor = this.props.inactiveColor;\n                var halfSize = SIZE / 2;\n                var sixthSize = SIZE / 6;\n                var thirdSize = SIZE / 3;\n                var color = data.inactive ? inactiveColor : data.color;\n                if (data.type === 'plainline') {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"line\", {\n                        strokeWidth: 4,\n                        fill: \"none\",\n                        stroke: color,\n                        strokeDasharray: data.payload.strokeDasharray,\n                        x1: 0,\n                        y1: halfSize,\n                        x2: SIZE,\n                        y2: halfSize,\n                        className: \"recharts-legend-icon\"\n                    });\n                }\n                if (data.type === 'line') {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n                        strokeWidth: 4,\n                        fill: \"none\",\n                        stroke: color,\n                        d: \"M0,\".concat(halfSize, \"h\").concat(thirdSize, \"\\n            A\").concat(sixthSize, \",\").concat(sixthSize, \",0,1,1,\").concat(2 * thirdSize, \",\").concat(halfSize, \"\\n            H\").concat(SIZE, \"M\").concat(2 * thirdSize, \",\").concat(halfSize, \"\\n            A\").concat(sixthSize, \",\").concat(sixthSize, \",0,1,1,\").concat(thirdSize, \",\").concat(halfSize),\n                        className: \"recharts-legend-icon\"\n                    });\n                }\n                if (data.type === 'rect') {\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n                        stroke: \"none\",\n                        fill: color,\n                        d: \"M0,\".concat(SIZE / 8, \"h\").concat(SIZE, \"v\").concat(SIZE * 3 / 4, \"h\").concat(-SIZE, \"z\"),\n                        className: \"recharts-legend-icon\"\n                    });\n                }\n                if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(data.legendIcon)) {\n                    var iconProps = _objectSpread({}, data);\n                    delete iconProps.legendIcon;\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(data.legendIcon, iconProps);\n                }\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Symbols__WEBPACK_IMPORTED_MODULE_3__.Symbols, {\n                    fill: color,\n                    cx: halfSize,\n                    cy: halfSize,\n                    size: SIZE,\n                    sizeType: \"diameter\",\n                    type: data.type\n                });\n            }\n        },\n        {\n            key: \"renderItems\",\n            value: function renderItems() {\n                var _this = this;\n                var _this$props = this.props, payload = _this$props.payload, iconSize = _this$props.iconSize, layout = _this$props.layout, formatter = _this$props.formatter, inactiveColor = _this$props.inactiveColor;\n                var viewBox = {\n                    x: 0,\n                    y: 0,\n                    width: SIZE,\n                    height: SIZE\n                };\n                var itemStyle = {\n                    display: layout === 'horizontal' ? 'inline-block' : 'block',\n                    marginRight: 10\n                };\n                var svgStyle = {\n                    display: 'inline-block',\n                    verticalAlign: 'middle',\n                    marginRight: 4\n                };\n                return payload.map(function(entry, i) {\n                    var finalFormatter = entry.formatter || formatter;\n                    var className = (0,clsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_defineProperty(_defineProperty({\n                        'recharts-legend-item': true\n                    }, \"legend-item-\".concat(i), true), \"inactive\", entry.inactive));\n                    if (entry.type === 'none') {\n                        return null;\n                    }\n                    // Do not render entry.value as functions. Always require static string properties.\n                    var entryValue = !lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(entry.value) ? entry.value : null;\n                    (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_4__.warn)(!lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(entry.value), \"The name property is also required when using a function for the dataKey of a chart's cartesian components. Ex: <Bar name=\\\"Name of my Data\\\"/>\" // eslint-disable-line max-len\n                    );\n                    var color = entry.inactive ? inactiveColor : entry.color;\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", _extends({\n                        className: className,\n                        style: itemStyle,\n                        key: \"legend-item-\".concat(i)\n                    }, (0,_util_types__WEBPACK_IMPORTED_MODULE_5__.adaptEventsOfChild)(_this.props, entry, i)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Surface__WEBPACK_IMPORTED_MODULE_6__.Surface, {\n                        width: iconSize,\n                        height: iconSize,\n                        viewBox: viewBox,\n                        style: svgStyle\n                    }, _this.renderIcon(entry)), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n                        className: \"recharts-legend-item-text\",\n                        style: {\n                            color: color\n                        }\n                    }, finalFormatter ? finalFormatter(entryValue, entry, i) : entryValue));\n                });\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this$props2 = this.props, payload = _this$props2.payload, layout = _this$props2.layout, align = _this$props2.align;\n                if (!payload || !payload.length) {\n                    return null;\n                }\n                var finalStyle = {\n                    padding: 0,\n                    margin: 0,\n                    textAlign: layout === 'horizontal' ? align : 'left'\n                };\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n                    className: \"recharts-default-legend\",\n                    style: finalStyle\n                }, this.renderItems());\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n_defineProperty(DefaultLegendContent, \"displayName\", 'Legend');\n_defineProperty(DefaultLegendContent, \"defaultProps\", {\n    iconSize: 14,\n    layout: 'horizontal',\n    align: 'center',\n    verticalAlign: 'middle',\n    inactiveColor: '#ccc'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultLegendContent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultTooltipContent.js":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultTooltipContent.js ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultTooltipContent: () => (/* binding */ DefaultTooltipContent)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/sortBy */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/sortBy.js\");\n/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Default Tooltip Content\n */ \n\n\n\n\nfunction defaultFormatter(value) {\n    return Array.isArray(value) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumOrStr)(value[0]) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumOrStr)(value[1]) ? value.join(' ~ ') : value;\n}\nvar DefaultTooltipContent = function DefaultTooltipContent(props) {\n    var _props$separator = props.separator, separator = _props$separator === void 0 ? ' : ' : _props$separator, _props$contentStyle = props.contentStyle, contentStyle = _props$contentStyle === void 0 ? {} : _props$contentStyle, _props$itemStyle = props.itemStyle, itemStyle = _props$itemStyle === void 0 ? {} : _props$itemStyle, _props$labelStyle = props.labelStyle, labelStyle = _props$labelStyle === void 0 ? {} : _props$labelStyle, payload = props.payload, formatter = props.formatter, itemSorter = props.itemSorter, wrapperClassName = props.wrapperClassName, labelClassName = props.labelClassName, label = props.label, labelFormatter = props.labelFormatter, _props$accessibilityL = props.accessibilityLayer, accessibilityLayer = _props$accessibilityL === void 0 ? false : _props$accessibilityL;\n    var renderContent = function renderContent() {\n        if (payload && payload.length) {\n            var listStyle = {\n                padding: 0,\n                margin: 0\n            };\n            var items = (itemSorter ? lodash_sortBy__WEBPACK_IMPORTED_MODULE_1___default()(payload, itemSorter) : payload).map(function(entry, i) {\n                if (entry.type === 'none') {\n                    return null;\n                }\n                var finalItemStyle = _objectSpread({\n                    display: 'block',\n                    paddingTop: 4,\n                    paddingBottom: 4,\n                    color: entry.color || '#000'\n                }, itemStyle);\n                var finalFormatter = entry.formatter || formatter || defaultFormatter;\n                var value = entry.value, name = entry.name;\n                var finalValue = value;\n                var finalName = name;\n                if (finalFormatter && finalValue != null && finalName != null) {\n                    var formatted = finalFormatter(value, name, entry, i, payload);\n                    if (Array.isArray(formatted)) {\n                        var _formatted = _slicedToArray(formatted, 2);\n                        finalValue = _formatted[0];\n                        finalName = _formatted[1];\n                    } else {\n                        finalValue = formatted;\n                    }\n                }\n                return(/*#__PURE__*/ // eslint-disable-next-line react/no-array-index-key\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", {\n                    className: \"recharts-tooltip-item\",\n                    key: \"tooltip-item-\".concat(i),\n                    style: finalItemStyle\n                }, (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumOrStr)(finalName) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n                    className: \"recharts-tooltip-item-name\"\n                }, finalName) : null, (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumOrStr)(finalName) ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n                    className: \"recharts-tooltip-item-separator\"\n                }, separator) : null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n                    className: \"recharts-tooltip-item-value\"\n                }, finalValue), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n                    className: \"recharts-tooltip-item-unit\"\n                }, entry.unit || '')));\n            });\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", {\n                className: \"recharts-tooltip-item-list\",\n                style: listStyle\n            }, items);\n        }\n        return null;\n    };\n    var finalStyle = _objectSpread({\n        margin: 0,\n        padding: 10,\n        backgroundColor: '#fff',\n        border: '1px solid #ccc',\n        whiteSpace: 'nowrap'\n    }, contentStyle);\n    var finalLabelStyle = _objectSpread({\n        margin: 0\n    }, labelStyle);\n    var hasLabel = !lodash_isNil__WEBPACK_IMPORTED_MODULE_2___default()(label);\n    var finalLabel = hasLabel ? label : '';\n    var wrapperCN = (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-default-tooltip', wrapperClassName);\n    var labelCN = (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-tooltip-label', labelClassName);\n    if (hasLabel && labelFormatter && payload !== undefined && payload !== null) {\n        finalLabel = labelFormatter(label, payload);\n    }\n    var accessibilityAttributes = accessibilityLayer ? {\n        role: 'status',\n        'aria-live': 'assertive'\n    } : {};\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({\n        className: wrapperCN,\n        style: finalStyle\n    }, accessibilityAttributes), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n        className: labelCN,\n        style: finalLabelStyle\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(finalLabel) ? finalLabel : \"\".concat(finalLabel)), renderContent());\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultTooltipContent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isObject */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js\");\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _Text__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Text */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Text.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_PolarUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/PolarUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar _excluded = [\n    \"offset\"\n];\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n\n\n\n\n\n\n\n\n\nvar getLabel = function getLabel(props) {\n    var value = props.value, formatter = props.formatter;\n    var label = lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(props.children) ? value : props.children;\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(formatter)) {\n        return formatter(label);\n    }\n    return label;\n};\nvar getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {\n    var sign = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.mathSign)(endAngle - startAngle);\n    var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 360);\n    return sign * deltaAngle;\n};\nvar renderRadialLabel = function renderRadialLabel(labelProps, label, attrs) {\n    var position = labelProps.position, viewBox = labelProps.viewBox, offset = labelProps.offset, className = labelProps.className;\n    var _ref = viewBox, cx = _ref.cx, cy = _ref.cy, innerRadius = _ref.innerRadius, outerRadius = _ref.outerRadius, startAngle = _ref.startAngle, endAngle = _ref.endAngle, clockWise = _ref.clockWise;\n    var radius = (innerRadius + outerRadius) / 2;\n    var deltaAngle = getDeltaAngle(startAngle, endAngle);\n    var sign = deltaAngle >= 0 ? 1 : -1;\n    var labelAngle, direction;\n    if (position === 'insideStart') {\n        labelAngle = startAngle + sign * offset;\n        direction = clockWise;\n    } else if (position === 'insideEnd') {\n        labelAngle = endAngle - sign * offset;\n        direction = !clockWise;\n    } else if (position === 'end') {\n        labelAngle = endAngle + sign * offset;\n        direction = clockWise;\n    }\n    direction = deltaAngle <= 0 ? direction : !direction;\n    var startPoint = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_6__.polarToCartesian)(cx, cy, radius, labelAngle);\n    var endPoint = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_6__.polarToCartesian)(cx, cy, radius, labelAngle + (direction ? 1 : -1) * 359);\n    var path = \"M\".concat(startPoint.x, \",\").concat(startPoint.y, \"\\n    A\").concat(radius, \",\").concat(radius, \",0,1,\").concat(direction ? 0 : 1, \",\\n    \").concat(endPoint.x, \",\").concat(endPoint.y);\n    var id = lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(labelProps.id) ? (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.uniqueId)('recharts-radial-line-') : labelProps.id;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\", _extends({}, attrs, {\n        dominantBaseline: \"central\",\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('recharts-radial-bar-label', className)\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"defs\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", {\n        id: id,\n        d: path\n    })), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"textPath\", {\n        xlinkHref: \"#\".concat(id)\n    }, label));\n};\nvar getAttrsOfPolarLabel = function getAttrsOfPolarLabel(props) {\n    var viewBox = props.viewBox, offset = props.offset, position = props.position;\n    var _ref2 = viewBox, cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;\n    var midAngle = (startAngle + endAngle) / 2;\n    if (position === 'outside') {\n        var _polarToCartesian = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_6__.polarToCartesian)(cx, cy, outerRadius + offset, midAngle), _x = _polarToCartesian.x, _y = _polarToCartesian.y;\n        return {\n            x: _x,\n            y: _y,\n            textAnchor: _x >= cx ? 'start' : 'end',\n            verticalAnchor: 'middle'\n        };\n    }\n    if (position === 'center') {\n        return {\n            x: cx,\n            y: cy,\n            textAnchor: 'middle',\n            verticalAnchor: 'middle'\n        };\n    }\n    if (position === 'centerTop') {\n        return {\n            x: cx,\n            y: cy,\n            textAnchor: 'middle',\n            verticalAnchor: 'start'\n        };\n    }\n    if (position === 'centerBottom') {\n        return {\n            x: cx,\n            y: cy,\n            textAnchor: 'middle',\n            verticalAnchor: 'end'\n        };\n    }\n    var r = (innerRadius + outerRadius) / 2;\n    var _polarToCartesian2 = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_6__.polarToCartesian)(cx, cy, r, midAngle), x = _polarToCartesian2.x, y = _polarToCartesian2.y;\n    return {\n        x: x,\n        y: y,\n        textAnchor: 'middle',\n        verticalAnchor: 'middle'\n    };\n};\nvar getAttrsOfCartesianLabel = function getAttrsOfCartesianLabel(props) {\n    var viewBox = props.viewBox, parentViewBox = props.parentViewBox, offset = props.offset, position = props.position;\n    var _ref3 = viewBox, x = _ref3.x, y = _ref3.y, width = _ref3.width, height = _ref3.height;\n    // Define vertical offsets and position inverts based on the value being positive or negative\n    var verticalSign = height >= 0 ? 1 : -1;\n    var verticalOffset = verticalSign * offset;\n    var verticalEnd = verticalSign > 0 ? 'end' : 'start';\n    var verticalStart = verticalSign > 0 ? 'start' : 'end';\n    // Define horizontal offsets and position inverts based on the value being positive or negative\n    var horizontalSign = width >= 0 ? 1 : -1;\n    var horizontalOffset = horizontalSign * offset;\n    var horizontalEnd = horizontalSign > 0 ? 'end' : 'start';\n    var horizontalStart = horizontalSign > 0 ? 'start' : 'end';\n    if (position === 'top') {\n        var attrs = {\n            x: x + width / 2,\n            y: y - verticalSign * offset,\n            textAnchor: 'middle',\n            verticalAnchor: verticalEnd\n        };\n        return _objectSpread(_objectSpread({}, attrs), parentViewBox ? {\n            height: Math.max(y - parentViewBox.y, 0),\n            width: width\n        } : {});\n    }\n    if (position === 'bottom') {\n        var _attrs = {\n            x: x + width / 2,\n            y: y + height + verticalOffset,\n            textAnchor: 'middle',\n            verticalAnchor: verticalStart\n        };\n        return _objectSpread(_objectSpread({}, _attrs), parentViewBox ? {\n            height: Math.max(parentViewBox.y + parentViewBox.height - (y + height), 0),\n            width: width\n        } : {});\n    }\n    if (position === 'left') {\n        var _attrs2 = {\n            x: x - horizontalOffset,\n            y: y + height / 2,\n            textAnchor: horizontalEnd,\n            verticalAnchor: 'middle'\n        };\n        return _objectSpread(_objectSpread({}, _attrs2), parentViewBox ? {\n            width: Math.max(_attrs2.x - parentViewBox.x, 0),\n            height: height\n        } : {});\n    }\n    if (position === 'right') {\n        var _attrs3 = {\n            x: x + width + horizontalOffset,\n            y: y + height / 2,\n            textAnchor: horizontalStart,\n            verticalAnchor: 'middle'\n        };\n        return _objectSpread(_objectSpread({}, _attrs3), parentViewBox ? {\n            width: Math.max(parentViewBox.x + parentViewBox.width - _attrs3.x, 0),\n            height: height\n        } : {});\n    }\n    var sizeAttrs = parentViewBox ? {\n        width: width,\n        height: height\n    } : {};\n    if (position === 'insideLeft') {\n        return _objectSpread({\n            x: x + horizontalOffset,\n            y: y + height / 2,\n            textAnchor: horizontalStart,\n            verticalAnchor: 'middle'\n        }, sizeAttrs);\n    }\n    if (position === 'insideRight') {\n        return _objectSpread({\n            x: x + width - horizontalOffset,\n            y: y + height / 2,\n            textAnchor: horizontalEnd,\n            verticalAnchor: 'middle'\n        }, sizeAttrs);\n    }\n    if (position === 'insideTop') {\n        return _objectSpread({\n            x: x + width / 2,\n            y: y + verticalOffset,\n            textAnchor: 'middle',\n            verticalAnchor: verticalStart\n        }, sizeAttrs);\n    }\n    if (position === 'insideBottom') {\n        return _objectSpread({\n            x: x + width / 2,\n            y: y + height - verticalOffset,\n            textAnchor: 'middle',\n            verticalAnchor: verticalEnd\n        }, sizeAttrs);\n    }\n    if (position === 'insideTopLeft') {\n        return _objectSpread({\n            x: x + horizontalOffset,\n            y: y + verticalOffset,\n            textAnchor: horizontalStart,\n            verticalAnchor: verticalStart\n        }, sizeAttrs);\n    }\n    if (position === 'insideTopRight') {\n        return _objectSpread({\n            x: x + width - horizontalOffset,\n            y: y + verticalOffset,\n            textAnchor: horizontalEnd,\n            verticalAnchor: verticalStart\n        }, sizeAttrs);\n    }\n    if (position === 'insideBottomLeft') {\n        return _objectSpread({\n            x: x + horizontalOffset,\n            y: y + height - verticalOffset,\n            textAnchor: horizontalStart,\n            verticalAnchor: verticalEnd\n        }, sizeAttrs);\n    }\n    if (position === 'insideBottomRight') {\n        return _objectSpread({\n            x: x + width - horizontalOffset,\n            y: y + height - verticalOffset,\n            textAnchor: horizontalEnd,\n            verticalAnchor: verticalEnd\n        }, sizeAttrs);\n    }\n    if (lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default()(position) && ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(position.x) || (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isPercent)(position.x)) && ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(position.y) || (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isPercent)(position.y))) {\n        return _objectSpread({\n            x: x + (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.getPercentValue)(position.x, width),\n            y: y + (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.getPercentValue)(position.y, height),\n            textAnchor: 'end',\n            verticalAnchor: 'end'\n        }, sizeAttrs);\n    }\n    return _objectSpread({\n        x: x + width / 2,\n        y: y + height / 2,\n        textAnchor: 'middle',\n        verticalAnchor: 'middle'\n    }, sizeAttrs);\n};\nvar isPolar = function isPolar(viewBox) {\n    return 'cx' in viewBox && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(viewBox.cx);\n};\nfunction Label(_ref4) {\n    var _ref4$offset = _ref4.offset, offset = _ref4$offset === void 0 ? 5 : _ref4$offset, restProps = _objectWithoutProperties(_ref4, _excluded);\n    var props = _objectSpread({\n        offset: offset\n    }, restProps);\n    var viewBox = props.viewBox, position = props.position, value = props.value, children = props.children, content = props.content, _props$className = props.className, className = _props$className === void 0 ? '' : _props$className, textBreakAll = props.textBreakAll;\n    if (!viewBox || lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(value) && lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(children) && !/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(content) && !lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(content)) {\n        return null;\n    }\n    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(content)) {\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(content, props);\n    }\n    var label;\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(content)) {\n        label = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(content, props);\n        if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(label)) {\n            return label;\n        }\n    } else {\n        label = getLabel(props);\n    }\n    var isPolarLabel = isPolar(viewBox);\n    var attrs = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__.filterProps)(props, true);\n    if (isPolarLabel && (position === 'insideStart' || position === 'insideEnd' || position === 'end')) {\n        return renderRadialLabel(props, label, attrs);\n    }\n    var positionAttrs = isPolarLabel ? getAttrsOfPolarLabel(props) : getAttrsOfCartesianLabel(props);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text__WEBPACK_IMPORTED_MODULE_8__.Text, _extends({\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('recharts-label', className)\n    }, attrs, positionAttrs, {\n        breakAll: textBreakAll\n    }), label);\n}\nLabel.displayName = 'Label';\nvar parseViewBox = function parseViewBox(props) {\n    var cx = props.cx, cy = props.cy, angle = props.angle, startAngle = props.startAngle, endAngle = props.endAngle, r = props.r, radius = props.radius, innerRadius = props.innerRadius, outerRadius = props.outerRadius, x = props.x, y = props.y, top = props.top, left = props.left, width = props.width, height = props.height, clockWise = props.clockWise, labelViewBox = props.labelViewBox;\n    if (labelViewBox) {\n        return labelViewBox;\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(width) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(height)) {\n        if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(x) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(y)) {\n            return {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            };\n        }\n        if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(top) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(left)) {\n            return {\n                x: top,\n                y: left,\n                width: width,\n                height: height\n            };\n        }\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(x) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(y)) {\n        return {\n            x: x,\n            y: y,\n            width: 0,\n            height: 0\n        };\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(cx) && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(cy)) {\n        return {\n            cx: cx,\n            cy: cy,\n            startAngle: startAngle || angle || 0,\n            endAngle: endAngle || angle || 0,\n            innerRadius: innerRadius || 0,\n            outerRadius: outerRadius || radius || r || 0,\n            clockWise: clockWise\n        };\n    }\n    if (props.viewBox) {\n        return props.viewBox;\n    }\n    return {};\n};\nvar parseLabel = function parseLabel(label, viewBox) {\n    if (!label) {\n        return null;\n    }\n    if (label === true) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Label, {\n            key: \"label-implicit\",\n            viewBox: viewBox\n        });\n    }\n    if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumOrStr)(label)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Label, {\n            key: \"label-implicit\",\n            viewBox: viewBox,\n            value: label\n        });\n    }\n    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(label)) {\n        if (label.type === Label) {\n            return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(label, {\n                key: 'label-implicit',\n                viewBox: viewBox\n            });\n        }\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Label, {\n            key: \"label-implicit\",\n            content: label,\n            viewBox: viewBox\n        });\n    }\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(label)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Label, {\n            key: \"label-implicit\",\n            content: label,\n            viewBox: viewBox\n        });\n    }\n    if (lodash_isObject__WEBPACK_IMPORTED_MODULE_3___default()(label)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Label, _extends({\n            viewBox: viewBox\n        }, label, {\n            key: \"label-implicit\"\n        }));\n    }\n    return null;\n};\nvar renderCallByParent = function renderCallByParent(parentProps, viewBox) {\n    var checkPropsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {\n        return null;\n    }\n    var children = parentProps.children;\n    var parentViewBox = parseViewBox(parentProps);\n    var explicitChildren = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__.findAllByType)(children, Label).map(function(child, index) {\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n            viewBox: viewBox || parentViewBox,\n            // eslint-disable-next-line react/no-array-index-key\n            key: \"label-\".concat(index)\n        });\n    });\n    if (!checkPropsLabel) {\n        return explicitChildren;\n    }\n    var implicitLabel = parseLabel(parentProps.label, viewBox || parentViewBox);\n    return [\n        implicitLabel\n    ].concat(_toConsumableArray(explicitChildren));\n};\nLabel.parseViewBox = parseViewBox;\nLabel.renderCallByParent = renderCallByParent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/LabelList.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/LabelList.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LabelList: () => (/* binding */ LabelList)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isObject */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js\");\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_last__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/last */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/last.js\");\n/* harmony import */ var lodash_last__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_last__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Label */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Label.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_ChartUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar _excluded = [\n    \"valueAccessor\"\n], _excluded2 = [\n    \"data\",\n    \"dataKey\",\n    \"clockWise\",\n    \"id\",\n    \"textBreakAll\"\n];\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\n\n\n\n\n\n\n\n\nvar defaultAccessor = function defaultAccessor(entry) {\n    return Array.isArray(entry.value) ? lodash_last__WEBPACK_IMPORTED_MODULE_4___default()(entry.value) : entry.value;\n};\nfunction LabelList(_ref) {\n    var _ref$valueAccessor = _ref.valueAccessor, valueAccessor = _ref$valueAccessor === void 0 ? defaultAccessor : _ref$valueAccessor, restProps = _objectWithoutProperties(_ref, _excluded);\n    var data = restProps.data, dataKey = restProps.dataKey, clockWise = restProps.clockWise, id = restProps.id, textBreakAll = restProps.textBreakAll, others = _objectWithoutProperties(restProps, _excluded2);\n    if (!data || !data.length) {\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_5__.Layer, {\n        className: \"recharts-label-list\"\n    }, data.map(function(entry, index) {\n        var value = lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(dataKey) ? valueAccessor(entry, index) : (0,_util_ChartUtils__WEBPACK_IMPORTED_MODULE_6__.getValueByDataKey)(entry && entry.payload, dataKey);\n        var idProps = lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(id) ? {} : {\n            id: \"\".concat(id, \"-\").concat(index)\n        };\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Label__WEBPACK_IMPORTED_MODULE_7__.Label, _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_8__.filterProps)(entry, true), others, idProps, {\n            parentViewBox: entry.parentViewBox,\n            value: value,\n            textBreakAll: textBreakAll,\n            viewBox: _Label__WEBPACK_IMPORTED_MODULE_7__.Label.parseViewBox(lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(clockWise) ? entry : _objectSpread(_objectSpread({}, entry), {}, {\n                clockWise: clockWise\n            })),\n            key: \"label-\".concat(index) // eslint-disable-line react/no-array-index-key\n            ,\n            index: index\n        }));\n    }));\n}\nLabelList.displayName = 'LabelList';\nfunction parseLabelList(label, data) {\n    if (!label) {\n        return null;\n    }\n    if (label === true) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LabelList, {\n            key: \"labelList-implicit\",\n            data: data\n        });\n    }\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(label) || lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default()(label)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LabelList, {\n            key: \"labelList-implicit\",\n            data: data,\n            content: label\n        });\n    }\n    if (lodash_isObject__WEBPACK_IMPORTED_MODULE_2___default()(label)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LabelList, _extends({\n            data: data\n        }, label, {\n            key: \"labelList-implicit\"\n        }));\n    }\n    return null;\n}\nfunction renderCallByParent(parentProps, data) {\n    var checkPropsLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (!parentProps || !parentProps.children && checkPropsLabel && !parentProps.label) {\n        return null;\n    }\n    var children = parentProps.children;\n    var explicitChildren = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_8__.findAllByType)(children, LabelList).map(function(child, index) {\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n            data: data,\n            // eslint-disable-next-line react/no-array-index-key\n            key: \"labelList-\".concat(index)\n        });\n    });\n    if (!checkPropsLabel) {\n        return explicitChildren;\n    }\n    var implicitLabelList = parseLabelList(parentProps.label, data);\n    return [\n        implicitLabelList\n    ].concat(_toConsumableArray(explicitChildren));\n}\nLabelList.renderCallByParent = renderCallByParent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/LabelList.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Legend.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Legend.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Legend: () => (/* binding */ Legend)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _DefaultLegendContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DefaultLegendContent */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultLegendContent.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_payload_getUniqPayload__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/payload/getUniqPayload */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/payload/getUniqPayload.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar _excluded = [\n    \"ref\"\n];\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n/**\n * @fileOverview Legend\n */ \n\n\n\nfunction defaultUniqBy(entry) {\n    return entry.value;\n}\nfunction renderContent(content, props) {\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(content)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(content, props);\n    }\n    if (typeof content === 'function') {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(content, props);\n    }\n    var ref = props.ref, otherProps = _objectWithoutProperties(props, _excluded);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DefaultLegendContent__WEBPACK_IMPORTED_MODULE_1__.DefaultLegendContent, otherProps);\n}\nvar EPS = 1;\nvar Legend = /*#__PURE__*/ function(_PureComponent) {\n    function Legend() {\n        var _this;\n        _classCallCheck(this, Legend);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, Legend, [].concat(args));\n        _defineProperty(_this, \"lastBoundingBox\", {\n            width: -1,\n            height: -1\n        });\n        return _this;\n    }\n    _inherits(Legend, _PureComponent);\n    return _createClass(Legend, [\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                this.updateBBox();\n            }\n        },\n        {\n            key: \"componentDidUpdate\",\n            value: function componentDidUpdate() {\n                this.updateBBox();\n            }\n        },\n        {\n            key: \"getBBox\",\n            value: function getBBox() {\n                if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {\n                    var box = this.wrapperNode.getBoundingClientRect();\n                    box.height = this.wrapperNode.offsetHeight;\n                    box.width = this.wrapperNode.offsetWidth;\n                    return box;\n                }\n                return null;\n            }\n        },\n        {\n            key: \"updateBBox\",\n            value: function updateBBox() {\n                var onBBoxUpdate = this.props.onBBoxUpdate;\n                var box = this.getBBox();\n                if (box) {\n                    if (Math.abs(box.width - this.lastBoundingBox.width) > EPS || Math.abs(box.height - this.lastBoundingBox.height) > EPS) {\n                        this.lastBoundingBox.width = box.width;\n                        this.lastBoundingBox.height = box.height;\n                        if (onBBoxUpdate) {\n                            onBBoxUpdate(box);\n                        }\n                    }\n                } else if (this.lastBoundingBox.width !== -1 || this.lastBoundingBox.height !== -1) {\n                    this.lastBoundingBox.width = -1;\n                    this.lastBoundingBox.height = -1;\n                    if (onBBoxUpdate) {\n                        onBBoxUpdate(null);\n                    }\n                }\n            }\n        },\n        {\n            key: \"getBBoxSnapshot\",\n            value: function getBBoxSnapshot() {\n                if (this.lastBoundingBox.width >= 0 && this.lastBoundingBox.height >= 0) {\n                    return _objectSpread({}, this.lastBoundingBox);\n                }\n                return {\n                    width: 0,\n                    height: 0\n                };\n            }\n        },\n        {\n            key: \"getDefaultPosition\",\n            value: function getDefaultPosition(style) {\n                var _this$props = this.props, layout = _this$props.layout, align = _this$props.align, verticalAlign = _this$props.verticalAlign, margin = _this$props.margin, chartWidth = _this$props.chartWidth, chartHeight = _this$props.chartHeight;\n                var hPos, vPos;\n                if (!style || (style.left === undefined || style.left === null) && (style.right === undefined || style.right === null)) {\n                    if (align === 'center' && layout === 'vertical') {\n                        var box = this.getBBoxSnapshot();\n                        hPos = {\n                            left: ((chartWidth || 0) - box.width) / 2\n                        };\n                    } else {\n                        hPos = align === 'right' ? {\n                            right: margin && margin.right || 0\n                        } : {\n                            left: margin && margin.left || 0\n                        };\n                    }\n                }\n                if (!style || (style.top === undefined || style.top === null) && (style.bottom === undefined || style.bottom === null)) {\n                    if (verticalAlign === 'middle') {\n                        var _box = this.getBBoxSnapshot();\n                        vPos = {\n                            top: ((chartHeight || 0) - _box.height) / 2\n                        };\n                    } else {\n                        vPos = verticalAlign === 'bottom' ? {\n                            bottom: margin && margin.bottom || 0\n                        } : {\n                            top: margin && margin.top || 0\n                        };\n                    }\n                }\n                return _objectSpread(_objectSpread({}, hPos), vPos);\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this2 = this;\n                var _this$props2 = this.props, content = _this$props2.content, width = _this$props2.width, height = _this$props2.height, wrapperStyle = _this$props2.wrapperStyle, payloadUniqBy = _this$props2.payloadUniqBy, payload = _this$props2.payload;\n                var outerStyle = _objectSpread(_objectSpread({\n                    position: 'absolute',\n                    width: width || 'auto',\n                    height: height || 'auto'\n                }, this.getDefaultPosition(wrapperStyle)), wrapperStyle);\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n                    className: \"recharts-legend-wrapper\",\n                    style: outerStyle,\n                    ref: function ref(node) {\n                        _this2.wrapperNode = node;\n                    }\n                }, renderContent(content, _objectSpread(_objectSpread({}, this.props), {}, {\n                    payload: (0,_util_payload_getUniqPayload__WEBPACK_IMPORTED_MODULE_2__.getUniqPayload)(payload, payloadUniqBy, defaultUniqBy)\n                })));\n            }\n        }\n    ], [\n        {\n            key: \"getWithHeight\",\n            value: function getWithHeight(item, chartWidth) {\n                var _this$defaultProps$it = _objectSpread(_objectSpread({}, this.defaultProps), item.props), layout = _this$defaultProps$it.layout;\n                if (layout === 'vertical' && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_3__.isNumber)(item.props.height)) {\n                    return {\n                        height: item.props.height\n                    };\n                }\n                if (layout === 'horizontal') {\n                    return {\n                        width: item.props.width || chartWidth\n                    };\n                }\n                return null;\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n_defineProperty(Legend, \"displayName\", 'Legend');\n_defineProperty(Legend, \"defaultProps\", {\n    iconSize: 14,\n    layout: 'horizontal',\n    align: 'center',\n    verticalAlign: 'bottom'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Legend.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/ResponsiveContainer.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/ResponsiveContainer.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponsiveContainer: () => (/* binding */ ResponsiveContainer)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/throttle */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/throttle.js\");\n/* harmony import */ var lodash_throttle__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_throttle__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_LogUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/LogUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n/**\n * @fileOverview Wrapper component to make charts adapt to the size of parent * DOM\n */ \n\n\n\n\n\nvar ResponsiveContainer = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function(_ref, ref) {\n    var aspect = _ref.aspect, _ref$initialDimension = _ref.initialDimension, initialDimension = _ref$initialDimension === void 0 ? {\n        width: -1,\n        height: -1\n    } : _ref$initialDimension, _ref$width = _ref.width, width = _ref$width === void 0 ? '100%' : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? '100%' : _ref$height, _ref$minWidth = _ref.minWidth, minWidth = _ref$minWidth === void 0 ? 0 : _ref$minWidth, minHeight = _ref.minHeight, maxHeight = _ref.maxHeight, children = _ref.children, _ref$debounce = _ref.debounce, debounce = _ref$debounce === void 0 ? 0 : _ref$debounce, id = _ref.id, className = _ref.className, onResize = _ref.onResize, _ref$style = _ref.style, style = _ref$style === void 0 ? {} : _ref$style;\n    var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var onResizeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    onResizeRef.current = onResize;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, {\n        \"ResponsiveContainer.useImperativeHandle\": function() {\n            return Object.defineProperty(containerRef.current, 'current', {\n                get: function get() {\n                    // eslint-disable-next-line no-console\n                    console.warn('The usage of ref.current.current is deprecated and will no longer be supported.');\n                    return containerRef.current;\n                },\n                configurable: true\n            });\n        }\n    }[\"ResponsiveContainer.useImperativeHandle\"]);\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        containerWidth: initialDimension.width,\n        containerHeight: initialDimension.height\n    }), _useState2 = _slicedToArray(_useState, 2), sizes = _useState2[0], setSizes = _useState2[1];\n    var setContainerSize = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"ResponsiveContainer.useCallback[setContainerSize]\": function(newWidth, newHeight) {\n            setSizes({\n                \"ResponsiveContainer.useCallback[setContainerSize]\": function(prevState) {\n                    var roundedWidth = Math.round(newWidth);\n                    var roundedHeight = Math.round(newHeight);\n                    if (prevState.containerWidth === roundedWidth && prevState.containerHeight === roundedHeight) {\n                        return prevState;\n                    }\n                    return {\n                        containerWidth: roundedWidth,\n                        containerHeight: roundedHeight\n                    };\n                }\n            }[\"ResponsiveContainer.useCallback[setContainerSize]\"]);\n        }\n    }[\"ResponsiveContainer.useCallback[setContainerSize]\"], []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ResponsiveContainer.useEffect\": function() {\n            var callback = function callback(entries) {\n                var _onResizeRef$current;\n                var _entries$0$contentRec = entries[0].contentRect, containerWidth = _entries$0$contentRec.width, containerHeight = _entries$0$contentRec.height;\n                setContainerSize(containerWidth, containerHeight);\n                (_onResizeRef$current = onResizeRef.current) === null || _onResizeRef$current === void 0 || _onResizeRef$current.call(onResizeRef, containerWidth, containerHeight);\n            };\n            if (debounce > 0) {\n                callback = lodash_throttle__WEBPACK_IMPORTED_MODULE_2___default()(callback, debounce, {\n                    trailing: true,\n                    leading: false\n                });\n            }\n            var observer = new ResizeObserver(callback);\n            var _containerRef$current = containerRef.current.getBoundingClientRect(), containerWidth = _containerRef$current.width, containerHeight = _containerRef$current.height;\n            setContainerSize(containerWidth, containerHeight);\n            observer.observe(containerRef.current);\n            return ({\n                \"ResponsiveContainer.useEffect\": function() {\n                    observer.disconnect();\n                }\n            })[\"ResponsiveContainer.useEffect\"];\n        }\n    }[\"ResponsiveContainer.useEffect\"], [\n        setContainerSize,\n        debounce\n    ]);\n    var chartContent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ResponsiveContainer.useMemo[chartContent]\": function() {\n            var containerWidth = sizes.containerWidth, containerHeight = sizes.containerHeight;\n            if (containerWidth < 0 || containerHeight < 0) {\n                return null;\n            }\n            (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_3__.warn)((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isPercent)(width) || (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isPercent)(height), \"The width(%s) and height(%s) are both fixed numbers,\\n       maybe you don't need to use a ResponsiveContainer.\", width, height);\n            (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_3__.warn)(!aspect || aspect > 0, 'The aspect(%s) must be greater than zero.', aspect);\n            var calculatedWidth = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isPercent)(width) ? containerWidth : width;\n            var calculatedHeight = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isPercent)(height) ? containerHeight : height;\n            if (aspect && aspect > 0) {\n                // Preserve the desired aspect ratio\n                if (calculatedWidth) {\n                    // Will default to using width for aspect ratio\n                    calculatedHeight = calculatedWidth / aspect;\n                } else if (calculatedHeight) {\n                    // But we should also take height into consideration\n                    calculatedWidth = calculatedHeight * aspect;\n                }\n                // if maxHeight is set, overwrite if calculatedHeight is greater than maxHeight\n                if (maxHeight && calculatedHeight > maxHeight) {\n                    calculatedHeight = maxHeight;\n                }\n            }\n            (0,_util_LogUtils__WEBPACK_IMPORTED_MODULE_3__.warn)(calculatedWidth > 0 || calculatedHeight > 0, \"The width(%s) and height(%s) of chart should be greater than 0,\\n       please check the style of container, or the props width(%s) and height(%s),\\n       or add a minWidth(%s) or minHeight(%s) or use aspect(%s) to control the\\n       height and width.\", calculatedWidth, calculatedHeight, width, height, minWidth, minHeight, aspect);\n            var isCharts = !Array.isArray(children) && (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_5__.getDisplayName)(children.type).endsWith('Chart');\n            return react__WEBPACK_IMPORTED_MODULE_1___default().Children.map(children, {\n                \"ResponsiveContainer.useMemo[chartContent]\": function(child) {\n                    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(child)) {\n                        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(child, _objectSpread({\n                            width: calculatedWidth,\n                            height: calculatedHeight\n                        }, isCharts ? {\n                            style: _objectSpread({\n                                height: '100%',\n                                width: '100%',\n                                maxHeight: calculatedHeight,\n                                maxWidth: calculatedWidth\n                            }, child.props.style)\n                        } : {}));\n                    }\n                    return child;\n                }\n            }[\"ResponsiveContainer.useMemo[chartContent]\"]);\n        }\n    }[\"ResponsiveContainer.useMemo[chartContent]\"], [\n        aspect,\n        children,\n        height,\n        maxHeight,\n        minHeight,\n        minWidth,\n        sizes,\n        width\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n        id: id ? \"\".concat(id) : undefined,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('recharts-responsive-container', className),\n        style: _objectSpread(_objectSpread({}, style), {}, {\n            width: width,\n            height: height,\n            minWidth: minWidth,\n            minHeight: minHeight,\n            maxHeight: maxHeight\n        }),\n        ref: containerRef\n    }, chartContent);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/ResponsiveContainer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Text.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Text.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Text: () => (/* binding */ Text)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/DOMUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DOMUtils.js\");\n/* harmony import */ var _util_ReduceCSSCalc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReduceCSSCalc */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReduceCSSCalc.js\");\nvar _excluded = [\n    \"x\",\n    \"y\",\n    \"lineHeight\",\n    \"capHeight\",\n    \"scaleToFit\",\n    \"textAnchor\",\n    \"verticalAnchor\",\n    \"fill\"\n], _excluded2 = [\n    \"dx\",\n    \"dy\",\n    \"angle\",\n    \"className\",\n    \"breakAll\"\n];\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\n\n\n\n\n\n\nvar BREAKING_SPACES = /[ \\f\\n\\r\\t\\v\\u2028\\u2029]+/;\nvar calculateWordWidths = function calculateWordWidths(_ref) {\n    var children = _ref.children, breakAll = _ref.breakAll, style = _ref.style;\n    try {\n        var words = [];\n        if (!lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(children)) {\n            if (breakAll) {\n                words = children.toString().split('');\n            } else {\n                words = children.toString().split(BREAKING_SPACES);\n            }\n        }\n        var wordsWithComputedWidth = words.map(function(word) {\n            return {\n                word: word,\n                width: (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(word, style).width\n            };\n        });\n        var spaceWidth = breakAll ? 0 : (0,_util_DOMUtils__WEBPACK_IMPORTED_MODULE_3__.getStringSize)(\"\\xA0\", style).width;\n        return {\n            wordsWithComputedWidth: wordsWithComputedWidth,\n            spaceWidth: spaceWidth\n        };\n    } catch (e) {\n        return null;\n    }\n};\nvar calculateWordsByLines = function calculateWordsByLines(_ref2, initialWordsWithComputedWith, spaceWidth, lineWidth, scaleToFit) {\n    var maxLines = _ref2.maxLines, children = _ref2.children, style = _ref2.style, breakAll = _ref2.breakAll;\n    var shouldLimitLines = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumber)(maxLines);\n    var text = children;\n    var calculate = function calculate() {\n        var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        return words.reduce(function(result, _ref3) {\n            var word = _ref3.word, width = _ref3.width;\n            var currentLine = result[result.length - 1];\n            if (currentLine && (lineWidth == null || scaleToFit || currentLine.width + width + spaceWidth < Number(lineWidth))) {\n                // Word can be added to an existing line\n                currentLine.words.push(word);\n                currentLine.width += width + spaceWidth;\n            } else {\n                // Add first word to line or word is too long to scaleToFit on existing line\n                var newLine = {\n                    words: [\n                        word\n                    ],\n                    width: width\n                };\n                result.push(newLine);\n            }\n            return result;\n        }, []);\n    };\n    var originalResult = calculate(initialWordsWithComputedWith);\n    var findLongestLine = function findLongestLine(words) {\n        return words.reduce(function(a, b) {\n            return a.width > b.width ? a : b;\n        });\n    };\n    if (!shouldLimitLines) {\n        return originalResult;\n    }\n    var suffix = '…';\n    var checkOverflow = function checkOverflow(index) {\n        var tempText = text.slice(0, index);\n        var words = calculateWordWidths({\n            breakAll: breakAll,\n            style: style,\n            children: tempText + suffix\n        }).wordsWithComputedWidth;\n        var result = calculate(words);\n        var doesOverflow = result.length > maxLines || findLongestLine(result).width > Number(lineWidth);\n        return [\n            doesOverflow,\n            result\n        ];\n    };\n    var start = 0;\n    var end = text.length - 1;\n    var iterations = 0;\n    var trimmedResult;\n    while(start <= end && iterations <= text.length - 1){\n        var middle = Math.floor((start + end) / 2);\n        var prev = middle - 1;\n        var _checkOverflow = checkOverflow(prev), _checkOverflow2 = _slicedToArray(_checkOverflow, 2), doesPrevOverflow = _checkOverflow2[0], result = _checkOverflow2[1];\n        var _checkOverflow3 = checkOverflow(middle), _checkOverflow4 = _slicedToArray(_checkOverflow3, 1), doesMiddleOverflow = _checkOverflow4[0];\n        if (!doesPrevOverflow && !doesMiddleOverflow) {\n            start = middle + 1;\n        }\n        if (doesPrevOverflow && doesMiddleOverflow) {\n            end = middle - 1;\n        }\n        if (!doesPrevOverflow && doesMiddleOverflow) {\n            trimmedResult = result;\n            break;\n        }\n        iterations++;\n    }\n    // Fallback to originalResult (result without trimming) if we cannot find the\n    // where to trim.  This should not happen :tm:\n    return trimmedResult || originalResult;\n};\nvar getWordsWithoutCalculate = function getWordsWithoutCalculate(children) {\n    var words = !lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(children) ? children.toString().split(BREAKING_SPACES) : [];\n    return [\n        {\n            words: words\n        }\n    ];\n};\nvar getWordsByLines = function getWordsByLines(_ref4) {\n    var width = _ref4.width, scaleToFit = _ref4.scaleToFit, children = _ref4.children, style = _ref4.style, breakAll = _ref4.breakAll, maxLines = _ref4.maxLines;\n    // Only perform calculations if using features that require them (multiline, scaleToFit)\n    if ((width || scaleToFit) && !_util_Global__WEBPACK_IMPORTED_MODULE_5__.Global.isSsr) {\n        var wordsWithComputedWidth, spaceWidth;\n        var wordWidths = calculateWordWidths({\n            breakAll: breakAll,\n            children: children,\n            style: style\n        });\n        if (wordWidths) {\n            var wcw = wordWidths.wordsWithComputedWidth, sw = wordWidths.spaceWidth;\n            wordsWithComputedWidth = wcw;\n            spaceWidth = sw;\n        } else {\n            return getWordsWithoutCalculate(children);\n        }\n        return calculateWordsByLines({\n            breakAll: breakAll,\n            children: children,\n            maxLines: maxLines,\n            style: style\n        }, wordsWithComputedWidth, spaceWidth, width, scaleToFit);\n    }\n    return getWordsWithoutCalculate(children);\n};\nvar DEFAULT_FILL = '#808080';\nvar Text = function Text(_ref5) {\n    var _ref5$x = _ref5.x, propsX = _ref5$x === void 0 ? 0 : _ref5$x, _ref5$y = _ref5.y, propsY = _ref5$y === void 0 ? 0 : _ref5$y, _ref5$lineHeight = _ref5.lineHeight, lineHeight = _ref5$lineHeight === void 0 ? '1em' : _ref5$lineHeight, _ref5$capHeight = _ref5.capHeight, capHeight = _ref5$capHeight === void 0 ? '0.71em' : _ref5$capHeight, _ref5$scaleToFit = _ref5.scaleToFit, scaleToFit = _ref5$scaleToFit === void 0 ? false : _ref5$scaleToFit, _ref5$textAnchor = _ref5.textAnchor, textAnchor = _ref5$textAnchor === void 0 ? 'start' : _ref5$textAnchor, _ref5$verticalAnchor = _ref5.verticalAnchor, verticalAnchor = _ref5$verticalAnchor === void 0 ? 'end' : _ref5$verticalAnchor, _ref5$fill = _ref5.fill, fill = _ref5$fill === void 0 ? DEFAULT_FILL : _ref5$fill, props = _objectWithoutProperties(_ref5, _excluded);\n    var wordsByLines = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"Text.useMemo[wordsByLines]\": function() {\n            return getWordsByLines({\n                breakAll: props.breakAll,\n                children: props.children,\n                maxLines: props.maxLines,\n                scaleToFit: scaleToFit,\n                style: props.style,\n                width: props.width\n            });\n        }\n    }[\"Text.useMemo[wordsByLines]\"], [\n        props.breakAll,\n        props.children,\n        props.maxLines,\n        scaleToFit,\n        props.style,\n        props.width\n    ]);\n    var dx = props.dx, dy = props.dy, angle = props.angle, className = props.className, breakAll = props.breakAll, textProps = _objectWithoutProperties(props, _excluded2);\n    if (!(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumOrStr)(propsX) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumOrStr)(propsY)) {\n        return null;\n    }\n    var x = propsX + ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumber)(dx) ? dx : 0);\n    var y = propsY + ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumber)(dy) ? dy : 0);\n    var startDy;\n    switch(verticalAnchor){\n        case 'start':\n            startDy = (0,_util_ReduceCSSCalc__WEBPACK_IMPORTED_MODULE_6__.reduceCSSCalc)(\"calc(\".concat(capHeight, \")\"));\n            break;\n        case 'middle':\n            startDy = (0,_util_ReduceCSSCalc__WEBPACK_IMPORTED_MODULE_6__.reduceCSSCalc)(\"calc(\".concat((wordsByLines.length - 1) / 2, \" * -\").concat(lineHeight, \" + (\").concat(capHeight, \" / 2))\"));\n            break;\n        default:\n            startDy = (0,_util_ReduceCSSCalc__WEBPACK_IMPORTED_MODULE_6__.reduceCSSCalc)(\"calc(\".concat(wordsByLines.length - 1, \" * -\").concat(lineHeight, \")\"));\n            break;\n    }\n    var transforms = [];\n    if (scaleToFit) {\n        var lineWidth = wordsByLines[0].width;\n        var width = props.width;\n        transforms.push(\"scale(\".concat(((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_4__.isNumber)(width) ? width / lineWidth : 1) / lineWidth, \")\"));\n    }\n    if (angle) {\n        transforms.push(\"rotate(\".concat(angle, \", \").concat(x, \", \").concat(y, \")\"));\n    }\n    if (transforms.length) {\n        textProps.transform = transforms.join(' ');\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_7__.filterProps)(textProps, true), {\n        x: x,\n        y: y,\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('recharts-text', className),\n        textAnchor: textAnchor,\n        fill: fill.includes('url') ? DEFAULT_FILL : fill\n    }), wordsByLines.map(function(line, index) {\n        var words = line.words.join(breakAll ? '' : ' ');\n        return(/*#__PURE__*/ // duplicate words will cause duplicate keys\n        // eslint-disable-next-line react/no-array-index-key\n        react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tspan\", {\n            x: x,\n            dy: index === 0 ? startDy : lineHeight,\n            key: \"\".concat(words, \"-\").concat(index)\n        }, words));\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Text.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Tooltip.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Tooltip.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tooltip: () => (/* binding */ Tooltip)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _DefaultTooltipContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DefaultTooltipContent */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/DefaultTooltipContent.js\");\n/* harmony import */ var _TooltipBoundingBox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TooltipBoundingBox */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/TooltipBoundingBox.js\");\n/* harmony import */ var _util_Global__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Global */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\");\n/* harmony import */ var _util_payload_getUniqPayload__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/payload/getUniqPayload */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/payload/getUniqPayload.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Tooltip\n */ \n\n\n\n\nfunction defaultUniqBy(entry) {\n    return entry.dataKey;\n}\nfunction renderContent(content, props) {\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(content)) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(content, props);\n    }\n    if (typeof content === 'function') {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(content, props);\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DefaultTooltipContent__WEBPACK_IMPORTED_MODULE_1__.DefaultTooltipContent, props);\n}\nvar Tooltip = /*#__PURE__*/ function(_PureComponent) {\n    function Tooltip() {\n        _classCallCheck(this, Tooltip);\n        return _callSuper(this, Tooltip, arguments);\n    }\n    _inherits(Tooltip, _PureComponent);\n    return _createClass(Tooltip, [\n        {\n            key: \"render\",\n            value: function render() {\n                var _this = this;\n                var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, content = _this$props.content, coordinate = _this$props.coordinate, filterNull = _this$props.filterNull, isAnimationActive = _this$props.isAnimationActive, offset = _this$props.offset, payload = _this$props.payload, payloadUniqBy = _this$props.payloadUniqBy, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;\n                var finalPayload = payload !== null && payload !== void 0 ? payload : [];\n                if (filterNull && finalPayload.length) {\n                    finalPayload = (0,_util_payload_getUniqPayload__WEBPACK_IMPORTED_MODULE_2__.getUniqPayload)(payload.filter(function(entry) {\n                        return entry.value != null && (entry.hide !== true || _this.props.includeHidden);\n                    }), payloadUniqBy, defaultUniqBy);\n                }\n                var hasPayload = finalPayload.length > 0;\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TooltipBoundingBox__WEBPACK_IMPORTED_MODULE_3__.TooltipBoundingBox, {\n                    allowEscapeViewBox: allowEscapeViewBox,\n                    animationDuration: animationDuration,\n                    animationEasing: animationEasing,\n                    isAnimationActive: isAnimationActive,\n                    active: active,\n                    coordinate: coordinate,\n                    hasPayload: hasPayload,\n                    offset: offset,\n                    position: position,\n                    reverseDirection: reverseDirection,\n                    useTranslate3d: useTranslate3d,\n                    viewBox: viewBox,\n                    wrapperStyle: wrapperStyle\n                }, renderContent(content, _objectSpread(_objectSpread({}, this.props), {}, {\n                    payload: finalPayload\n                })));\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n_defineProperty(Tooltip, \"displayName\", 'Tooltip');\n_defineProperty(Tooltip, \"defaultProps\", {\n    accessibilityLayer: false,\n    allowEscapeViewBox: {\n        x: false,\n        y: false\n    },\n    animationDuration: 400,\n    animationEasing: 'ease',\n    contentStyle: {},\n    coordinate: {\n        x: 0,\n        y: 0\n    },\n    cursor: true,\n    cursorStyle: {},\n    filterNull: true,\n    isAnimationActive: !_util_Global__WEBPACK_IMPORTED_MODULE_4__.Global.isSsr,\n    itemStyle: {},\n    labelStyle: {},\n    offset: 10,\n    reverseDirection: {\n        x: false,\n        y: false\n    },\n    separator: ' : ',\n    trigger: 'hover',\n    useTranslate3d: false,\n    viewBox: {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0\n    },\n    wrapperStyle: {}\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Tooltip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/TooltipBoundingBox.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/TooltipBoundingBox.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TooltipBoundingBox: () => (/* binding */ TooltipBoundingBox)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _util_tooltip_translate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tooltip/translate */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/tooltip/translate.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nfunction _isNativeReflectConstruct() {\n    try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n        return !!t;\n    })();\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\nvar EPSILON = 1;\nvar TooltipBoundingBox = /*#__PURE__*/ function(_PureComponent) {\n    function TooltipBoundingBox() {\n        var _this;\n        _classCallCheck(this, TooltipBoundingBox);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _callSuper(this, TooltipBoundingBox, [].concat(args));\n        _defineProperty(_this, \"state\", {\n            dismissed: false,\n            dismissedAtCoordinate: {\n                x: 0,\n                y: 0\n            },\n            lastBoundingBox: {\n                width: -1,\n                height: -1\n            }\n        });\n        _defineProperty(_this, \"handleKeyDown\", function(event) {\n            if (event.key === 'Escape') {\n                var _this$props$coordinat, _this$props$coordinat2, _this$props$coordinat3, _this$props$coordinat4;\n                _this.setState({\n                    dismissed: true,\n                    dismissedAtCoordinate: {\n                        x: (_this$props$coordinat = (_this$props$coordinat2 = _this.props.coordinate) === null || _this$props$coordinat2 === void 0 ? void 0 : _this$props$coordinat2.x) !== null && _this$props$coordinat !== void 0 ? _this$props$coordinat : 0,\n                        y: (_this$props$coordinat3 = (_this$props$coordinat4 = _this.props.coordinate) === null || _this$props$coordinat4 === void 0 ? void 0 : _this$props$coordinat4.y) !== null && _this$props$coordinat3 !== void 0 ? _this$props$coordinat3 : 0\n                    }\n                });\n            }\n        });\n        return _this;\n    }\n    _inherits(TooltipBoundingBox, _PureComponent);\n    return _createClass(TooltipBoundingBox, [\n        {\n            key: \"updateBBox\",\n            value: function updateBBox() {\n                if (this.wrapperNode && this.wrapperNode.getBoundingClientRect) {\n                    var box = this.wrapperNode.getBoundingClientRect();\n                    if (Math.abs(box.width - this.state.lastBoundingBox.width) > EPSILON || Math.abs(box.height - this.state.lastBoundingBox.height) > EPSILON) {\n                        this.setState({\n                            lastBoundingBox: {\n                                width: box.width,\n                                height: box.height\n                            }\n                        });\n                    }\n                } else if (this.state.lastBoundingBox.width !== -1 || this.state.lastBoundingBox.height !== -1) {\n                    this.setState({\n                        lastBoundingBox: {\n                            width: -1,\n                            height: -1\n                        }\n                    });\n                }\n            }\n        },\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                document.addEventListener('keydown', this.handleKeyDown);\n                this.updateBBox();\n            }\n        },\n        {\n            key: \"componentWillUnmount\",\n            value: function componentWillUnmount() {\n                document.removeEventListener('keydown', this.handleKeyDown);\n            }\n        },\n        {\n            key: \"componentDidUpdate\",\n            value: function componentDidUpdate() {\n                var _this$props$coordinat5, _this$props$coordinat6;\n                if (this.props.active) {\n                    this.updateBBox();\n                }\n                if (!this.state.dismissed) {\n                    return;\n                }\n                if (((_this$props$coordinat5 = this.props.coordinate) === null || _this$props$coordinat5 === void 0 ? void 0 : _this$props$coordinat5.x) !== this.state.dismissedAtCoordinate.x || ((_this$props$coordinat6 = this.props.coordinate) === null || _this$props$coordinat6 === void 0 ? void 0 : _this$props$coordinat6.y) !== this.state.dismissedAtCoordinate.y) {\n                    this.state.dismissed = false;\n                }\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                var _this2 = this;\n                var _this$props = this.props, active = _this$props.active, allowEscapeViewBox = _this$props.allowEscapeViewBox, animationDuration = _this$props.animationDuration, animationEasing = _this$props.animationEasing, children = _this$props.children, coordinate = _this$props.coordinate, hasPayload = _this$props.hasPayload, isAnimationActive = _this$props.isAnimationActive, offset = _this$props.offset, position = _this$props.position, reverseDirection = _this$props.reverseDirection, useTranslate3d = _this$props.useTranslate3d, viewBox = _this$props.viewBox, wrapperStyle = _this$props.wrapperStyle;\n                var _getTooltipTranslate = (0,_util_tooltip_translate__WEBPACK_IMPORTED_MODULE_1__.getTooltipTranslate)({\n                    allowEscapeViewBox: allowEscapeViewBox,\n                    coordinate: coordinate,\n                    offsetTopLeft: offset,\n                    position: position,\n                    reverseDirection: reverseDirection,\n                    tooltipBox: this.state.lastBoundingBox,\n                    useTranslate3d: useTranslate3d,\n                    viewBox: viewBox\n                }), cssClasses = _getTooltipTranslate.cssClasses, cssProperties = _getTooltipTranslate.cssProperties;\n                var outerStyle = _objectSpread(_objectSpread({\n                    transition: isAnimationActive && active ? \"transform \".concat(animationDuration, \"ms \").concat(animationEasing) : undefined\n                }, cssProperties), {}, {\n                    pointerEvents: 'none',\n                    visibility: !this.state.dismissed && active && hasPayload ? 'visible' : 'hidden',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                }, wrapperStyle);\n                return(/*#__PURE__*/ // This element allow listening to the `Escape` key.\n                // See https://github.com/recharts/recharts/pull/2925\n                react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n                    tabIndex: -1,\n                    className: cssClasses,\n                    style: outerStyle,\n                    ref: function ref(node) {\n                        _this2.wrapperNode = node;\n                    }\n                }, children));\n            }\n        }\n    ]);\n}(react__WEBPACK_IMPORTED_MODULE_0__.PureComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/TooltipBoundingBox.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Layer: () => (/* binding */ Layer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nvar _excluded = [\n    \"children\",\n    \"className\"\n];\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\n\n\nvar Layer = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(function(props, ref) {\n    var children = props.children, className = props.className, others = _objectWithoutProperties(props, _excluded);\n    var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-layer', className);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", _extends({\n        className: layerClass\n    }, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(others, true), {\n        ref: ref\n    }), children);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jb250YWluZXIvTGF5ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZO0lBQUM7SUFBWTtDQUFZO0FBQ3pDLFNBQVNDO0lBQWFBLFdBQVdDLE9BQU9DLE1BQU0sR0FBR0QsT0FBT0MsTUFBTSxDQUFDQyxJQUFJLEtBQUssU0FBVUMsTUFBTTtRQUFJLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJQyxVQUFVQyxNQUFNLEVBQUVGLElBQUs7WUFBRSxJQUFJRyxTQUFTRixTQUFTLENBQUNELEVBQUU7WUFBRSxJQUFLLElBQUlJLE9BQU9ELE9BQVE7Z0JBQUUsSUFBSVAsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osUUFBUUMsTUFBTTtvQkFBRUwsTUFBTSxDQUFDSyxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtnQkFBRTtZQUFFO1FBQUU7UUFBRSxPQUFPTDtJQUFRO0lBQUcsT0FBT0osU0FBU2EsS0FBSyxDQUFDLElBQUksRUFBRVA7QUFBWTtBQUNsVixTQUFTUSx5QkFBeUJOLE1BQU0sRUFBRU8sUUFBUTtJQUFJLElBQUlQLFVBQVUsTUFBTSxPQUFPLENBQUM7SUFBRyxJQUFJSixTQUFTWSw4QkFBOEJSLFFBQVFPO0lBQVcsSUFBSU4sS0FBS0o7SUFBRyxJQUFJSixPQUFPZ0IscUJBQXFCLEVBQUU7UUFBRSxJQUFJQyxtQkFBbUJqQixPQUFPZ0IscUJBQXFCLENBQUNUO1FBQVMsSUFBS0gsSUFBSSxHQUFHQSxJQUFJYSxpQkFBaUJYLE1BQU0sRUFBRUYsSUFBSztZQUFFSSxNQUFNUyxnQkFBZ0IsQ0FBQ2IsRUFBRTtZQUFFLElBQUlVLFNBQVNJLE9BQU8sQ0FBQ1YsUUFBUSxHQUFHO1lBQVUsSUFBSSxDQUFDUixPQUFPUyxTQUFTLENBQUNVLG9CQUFvQixDQUFDUixJQUFJLENBQUNKLFFBQVFDLE1BQU07WUFBVUwsTUFBTSxDQUFDSyxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO0lBQUU7SUFBRSxPQUFPTDtBQUFRO0FBQzNlLFNBQVNZLDhCQUE4QlIsTUFBTSxFQUFFTyxRQUFRO0lBQUksSUFBSVAsVUFBVSxNQUFNLE9BQU8sQ0FBQztJQUFHLElBQUlKLFNBQVMsQ0FBQztJQUFHLElBQUssSUFBSUssT0FBT0QsT0FBUTtRQUFFLElBQUlQLE9BQU9TLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLFFBQVFDLE1BQU07WUFBRSxJQUFJTSxTQUFTSSxPQUFPLENBQUNWLFFBQVEsR0FBRztZQUFVTCxNQUFNLENBQUNLLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7SUFBRTtJQUFFLE9BQU9MO0FBQVE7QUFDNVA7QUFDRjtBQUN5QjtBQUMxQyxJQUFJb0IsUUFBUSxXQUFXLEdBQUVILHVEQUFnQixDQUFDLFNBQVVLLEtBQUssRUFBRUMsR0FBRztJQUNuRSxJQUFJQyxXQUFXRixNQUFNRSxRQUFRLEVBQzNCQyxZQUFZSCxNQUFNRyxTQUFTLEVBQzNCQyxTQUFTaEIseUJBQXlCWSxPQUFPM0I7SUFDM0MsSUFBSWdDLGFBQWFULGdEQUFJQSxDQUFDLGtCQUFrQk87SUFDeEMsT0FBTyxXQUFXLEdBQUVSLDBEQUFtQixDQUFDLEtBQUtyQixTQUFTO1FBQ3BENkIsV0FBV0U7SUFDYixHQUFHUiw2REFBV0EsQ0FBQ08sUUFBUSxPQUFPO1FBQzVCSCxLQUFLQTtJQUNQLElBQUlDO0FBQ04sR0FBRyIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jb250YWluZXIvTGF5ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9leGNsdWRlZCA9IFtcImNoaWxkcmVuXCIsIFwiY2xhc3NOYW1lXCJdO1xuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpOyB2YXIga2V5LCBpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc291cmNlU3ltYm9sS2V5cyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZVN5bWJvbEtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlU3ltYm9sS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgZmlsdGVyUHJvcHMgfSBmcm9tICcuLi91dGlsL1JlYWN0VXRpbHMnO1xuZXhwb3J0IHZhciBMYXllciA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICBvdGhlcnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMocHJvcHMsIF9leGNsdWRlZCk7XG4gIHZhciBsYXllckNsYXNzID0gY2xzeCgncmVjaGFydHMtbGF5ZXInLCBjbGFzc05hbWUpO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIF9leHRlbmRzKHtcbiAgICBjbGFzc05hbWU6IGxheWVyQ2xhc3NcbiAgfSwgZmlsdGVyUHJvcHMob3RoZXJzLCB0cnVlKSwge1xuICAgIHJlZjogcmVmXG4gIH0pLCBjaGlsZHJlbik7XG59KTsiXSwibmFtZXMiOlsiX2V4Y2x1ZGVkIiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInNvdXJjZVN5bWJvbEtleXMiLCJpbmRleE9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJSZWFjdCIsImNsc3giLCJmaWx0ZXJQcm9wcyIsIkxheWVyIiwiZm9yd2FyZFJlZiIsInByb3BzIiwicmVmIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJvdGhlcnMiLCJsYXllckNsYXNzIiwiY3JlYXRlRWxlbWVudCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Surface.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Surface.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Surface: () => (/* binding */ Surface)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nvar _excluded = [\n    \"children\",\n    \"width\",\n    \"height\",\n    \"viewBox\",\n    \"className\",\n    \"style\",\n    \"title\",\n    \"desc\"\n];\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n/**\n * @fileOverview Surface\n */ \n\n\nfunction Surface(props) {\n    var children = props.children, width = props.width, height = props.height, viewBox = props.viewBox, className = props.className, style = props.style, title = props.title, desc = props.desc, others = _objectWithoutProperties(props, _excluded);\n    var svgView = viewBox || {\n        width: width,\n        height: height,\n        x: 0,\n        y: 0\n    };\n    var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-surface', className);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(others, true, 'svg'), {\n        className: layerClass,\n        width: width,\n        height: height,\n        style: style,\n        viewBox: \"\".concat(svgView.x, \" \").concat(svgView.y, \" \").concat(svgView.width, \" \").concat(svgView.height)\n    }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"title\", null, title), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"desc\", null, desc), children);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jb250YWluZXIvU3VyZmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUlBLFlBQVk7SUFBQztJQUFZO0lBQVM7SUFBVTtJQUFXO0lBQWE7SUFBUztJQUFTO0NBQU87QUFDakcsU0FBU0M7SUFBYUEsV0FBV0MsT0FBT0MsTUFBTSxHQUFHRCxPQUFPQyxNQUFNLENBQUNDLElBQUksS0FBSyxTQUFVQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlDLFVBQVVDLE1BQU0sRUFBRUYsSUFBSztZQUFFLElBQUlHLFNBQVNGLFNBQVMsQ0FBQ0QsRUFBRTtZQUFFLElBQUssSUFBSUksT0FBT0QsT0FBUTtnQkFBRSxJQUFJUCxPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixRQUFRQyxNQUFNO29CQUFFTCxNQUFNLENBQUNLLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO2dCQUFFO1lBQUU7UUFBRTtRQUFFLE9BQU9MO0lBQVE7SUFBRyxPQUFPSixTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFUDtBQUFZO0FBQ2xWLFNBQVNRLHlCQUF5Qk4sTUFBTSxFQUFFTyxRQUFRO0lBQUksSUFBSVAsVUFBVSxNQUFNLE9BQU8sQ0FBQztJQUFHLElBQUlKLFNBQVNZLDhCQUE4QlIsUUFBUU87SUFBVyxJQUFJTixLQUFLSjtJQUFHLElBQUlKLE9BQU9nQixxQkFBcUIsRUFBRTtRQUFFLElBQUlDLG1CQUFtQmpCLE9BQU9nQixxQkFBcUIsQ0FBQ1Q7UUFBUyxJQUFLSCxJQUFJLEdBQUdBLElBQUlhLGlCQUFpQlgsTUFBTSxFQUFFRixJQUFLO1lBQUVJLE1BQU1TLGdCQUFnQixDQUFDYixFQUFFO1lBQUUsSUFBSVUsU0FBU0ksT0FBTyxDQUFDVixRQUFRLEdBQUc7WUFBVSxJQUFJLENBQUNSLE9BQU9TLFNBQVMsQ0FBQ1Usb0JBQW9CLENBQUNSLElBQUksQ0FBQ0osUUFBUUMsTUFBTTtZQUFVTCxNQUFNLENBQUNLLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO1FBQUU7SUFBRTtJQUFFLE9BQU9MO0FBQVE7QUFDM2UsU0FBU1ksOEJBQThCUixNQUFNLEVBQUVPLFFBQVE7SUFBSSxJQUFJUCxVQUFVLE1BQU0sT0FBTyxDQUFDO0lBQUcsSUFBSUosU0FBUyxDQUFDO0lBQUcsSUFBSyxJQUFJSyxPQUFPRCxPQUFRO1FBQUUsSUFBSVAsT0FBT1MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ0osUUFBUUMsTUFBTTtZQUFFLElBQUlNLFNBQVNJLE9BQU8sQ0FBQ1YsUUFBUSxHQUFHO1lBQVVMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtJQUFFO0lBQUUsT0FBT0w7QUFBUTtBQUN0Ujs7Q0FFQyxHQUN5QjtBQUNGO0FBQ3lCO0FBQzFDLFNBQVNvQixRQUFRQyxLQUFLO0lBQzNCLElBQUlDLFdBQVdELE1BQU1DLFFBQVEsRUFDM0JDLFFBQVFGLE1BQU1FLEtBQUssRUFDbkJDLFNBQVNILE1BQU1HLE1BQU0sRUFDckJDLFVBQVVKLE1BQU1JLE9BQU8sRUFDdkJDLFlBQVlMLE1BQU1LLFNBQVMsRUFDM0JDLFFBQVFOLE1BQU1NLEtBQUssRUFDbkJDLFFBQVFQLE1BQU1PLEtBQUssRUFDbkJDLE9BQU9SLE1BQU1RLElBQUksRUFDakJDLFNBQVNwQix5QkFBeUJXLE9BQU8xQjtJQUMzQyxJQUFJb0MsVUFBVU4sV0FBVztRQUN2QkYsT0FBT0E7UUFDUEMsUUFBUUE7UUFDUlEsR0FBRztRQUNIQyxHQUFHO0lBQ0w7SUFDQSxJQUFJQyxhQUFhaEIsZ0RBQUlBLENBQUMsb0JBQW9CUTtJQUMxQyxPQUFPLFdBQVcsR0FBRVQsMERBQW1CLENBQUMsT0FBT3JCLFNBQVMsQ0FBQyxHQUFHdUIsNkRBQVdBLENBQUNXLFFBQVEsTUFBTSxRQUFRO1FBQzVGSixXQUFXUTtRQUNYWCxPQUFPQTtRQUNQQyxRQUFRQTtRQUNSRyxPQUFPQTtRQUNQRixTQUFTLEdBQUdXLE1BQU0sQ0FBQ0wsUUFBUUMsQ0FBQyxFQUFFLEtBQUtJLE1BQU0sQ0FBQ0wsUUFBUUUsQ0FBQyxFQUFFLEtBQUtHLE1BQU0sQ0FBQ0wsUUFBUVIsS0FBSyxFQUFFLEtBQUthLE1BQU0sQ0FBQ0wsUUFBUVAsTUFBTTtJQUM1RyxJQUFJLFdBQVcsR0FBRVAsMERBQW1CLENBQUMsU0FBUyxNQUFNVyxRQUFRLFdBQVcsR0FBRVgsMERBQW1CLENBQUMsUUFBUSxNQUFNWSxPQUFPUDtBQUNwSCIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jb250YWluZXIvU3VyZmFjZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX2V4Y2x1ZGVkID0gW1wiY2hpbGRyZW5cIiwgXCJ3aWR0aFwiLCBcImhlaWdodFwiLCBcInZpZXdCb3hcIiwgXCJjbGFzc05hbWVcIiwgXCJzdHlsZVwiLCBcInRpdGxlXCIsIFwiZGVzY1wiXTtcbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9OyByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cbi8qKlxuICogQGZpbGVPdmVydmlldyBTdXJmYWNlXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xzeCBmcm9tICdjbHN4JztcbmltcG9ydCB7IGZpbHRlclByb3BzIH0gZnJvbSAnLi4vdXRpbC9SZWFjdFV0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBTdXJmYWNlKHByb3BzKSB7XG4gIHZhciBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgIHdpZHRoID0gcHJvcHMud2lkdGgsXG4gICAgaGVpZ2h0ID0gcHJvcHMuaGVpZ2h0LFxuICAgIHZpZXdCb3ggPSBwcm9wcy52aWV3Qm94LFxuICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSxcbiAgICBzdHlsZSA9IHByb3BzLnN0eWxlLFxuICAgIHRpdGxlID0gcHJvcHMudGl0bGUsXG4gICAgZGVzYyA9IHByb3BzLmRlc2MsXG4gICAgb3RoZXJzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBfZXhjbHVkZWQpO1xuICB2YXIgc3ZnVmlldyA9IHZpZXdCb3ggfHwge1xuICAgIHdpZHRoOiB3aWR0aCxcbiAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICB4OiAwLFxuICAgIHk6IDBcbiAgfTtcbiAgdmFyIGxheWVyQ2xhc3MgPSBjbHN4KCdyZWNoYXJ0cy1zdXJmYWNlJywgY2xhc3NOYW1lKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIF9leHRlbmRzKHt9LCBmaWx0ZXJQcm9wcyhvdGhlcnMsIHRydWUsICdzdmcnKSwge1xuICAgIGNsYXNzTmFtZTogbGF5ZXJDbGFzcyxcbiAgICB3aWR0aDogd2lkdGgsXG4gICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgc3R5bGU6IHN0eWxlLFxuICAgIHZpZXdCb3g6IFwiXCIuY29uY2F0KHN2Z1ZpZXcueCwgXCIgXCIpLmNvbmNhdChzdmdWaWV3LnksIFwiIFwiKS5jb25jYXQoc3ZnVmlldy53aWR0aCwgXCIgXCIpLmNvbmNhdChzdmdWaWV3LmhlaWdodClcbiAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIiwgbnVsbCwgdGl0bGUpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRlc2NcIiwgbnVsbCwgZGVzYyksIGNoaWxkcmVuKTtcbn0iXSwibmFtZXMiOlsiX2V4Y2x1ZGVkIiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInNvdXJjZVN5bWJvbEtleXMiLCJpbmRleE9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJSZWFjdCIsImNsc3giLCJmaWx0ZXJQcm9wcyIsIlN1cmZhY2UiLCJwcm9wcyIsImNoaWxkcmVuIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJ0aXRsZSIsImRlc2MiLCJvdGhlcnMiLCJzdmdWaWV3IiwieCIsInkiLCJsYXllckNsYXNzIiwiY3JlYXRlRWxlbWVudCIsImNvbmNhdCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Surface.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js ***!
  \************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChartHeightContext: () => (/* binding */ ChartHeightContext),\n/* harmony export */   ChartLayoutContextProvider: () => (/* binding */ ChartLayoutContextProvider),\n/* harmony export */   ChartWidthContext: () => (/* binding */ ChartWidthContext),\n/* harmony export */   ClipPathIdContext: () => (/* binding */ ClipPathIdContext),\n/* harmony export */   OffsetContext: () => (/* binding */ OffsetContext),\n/* harmony export */   ViewBoxContext: () => (/* binding */ ViewBoxContext),\n/* harmony export */   XAxisContext: () => (/* binding */ XAxisContext),\n/* harmony export */   YAxisContext: () => (/* binding */ YAxisContext),\n/* harmony export */   useArbitraryXAxis: () => (/* binding */ useArbitraryXAxis),\n/* harmony export */   useArbitraryYAxis: () => (/* binding */ useArbitraryYAxis),\n/* harmony export */   useChartHeight: () => (/* binding */ useChartHeight),\n/* harmony export */   useChartWidth: () => (/* binding */ useChartWidth),\n/* harmony export */   useClipPathId: () => (/* binding */ useClipPathId),\n/* harmony export */   useOffset: () => (/* binding */ useOffset),\n/* harmony export */   useViewBox: () => (/* binding */ useViewBox),\n/* harmony export */   useXAxisOrThrow: () => (/* binding */ useXAxisOrThrow),\n/* harmony export */   useYAxisOrThrow: () => (/* binding */ useYAxisOrThrow),\n/* harmony export */   useYAxisWithFiniteDomainOrRandom: () => (/* binding */ useYAxisWithFiniteDomainOrRandom)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/find */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/find.js\");\n/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_every__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/every */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/every.js\");\n/* harmony import */ var lodash_every__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_every__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _util_calculateViewBox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/calculateViewBox */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/calculateViewBox.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\n\n\n\n\n\n\nvar XAxisContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nvar YAxisContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nvar ViewBoxContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nvar OffsetContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nvar ClipPathIdContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nvar ChartHeightContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(0);\nvar ChartWidthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(0);\n/**\n * Will add all the properties required to render all individual Recharts components into a React Context.\n *\n * If you want to read these properties, see the collection of hooks exported from this file.\n *\n * @param {object} props CategoricalChartState, plus children\n * @returns {ReactElement} React Context Provider\n */ var ChartLayoutContextProvider = function ChartLayoutContextProvider(props) {\n    var _props$state = props.state, xAxisMap = _props$state.xAxisMap, yAxisMap = _props$state.yAxisMap, offset = _props$state.offset, clipPathId = props.clipPathId, children = props.children, width = props.width, height = props.height;\n    /**\n   * Perhaps we should compute this property when reading? Let's see what is more often used\n   */ var viewBox = (0,_util_calculateViewBox__WEBPACK_IMPORTED_MODULE_4__.calculateViewBox)(offset);\n    /*\n   * This pretends to be a single context but actually is split into multiple smaller ones.\n   * Why?\n   * Because one React Context only allows to set one value.\n   * But we need to set multiple values.\n   * If we do that with one context, then we force re-render on components that might not even be interested\n   * in the part of the state that has changed.\n   *\n   * By splitting into smaller contexts, we allow each components to be optimized and only re-render when its dependencies change.\n   *\n   * To actually achieve the optimal re-render, it is necessary to use React.memo().\n   * See the test file for details.\n   */ return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(XAxisContext.Provider, {\n        value: xAxisMap\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(YAxisContext.Provider, {\n        value: yAxisMap\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(OffsetContext.Provider, {\n        value: offset\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ViewBoxContext.Provider, {\n        value: viewBox\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ClipPathIdContext.Provider, {\n        value: clipPathId\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ChartHeightContext.Provider, {\n        value: height\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ChartWidthContext.Provider, {\n        value: width\n    }, children)))))));\n};\nvar useClipPathId = function useClipPathId() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ClipPathIdContext);\n};\nfunction getKeysForDebug(object) {\n    var keys = Object.keys(object);\n    if (keys.length === 0) {\n        return 'There are no available ids.';\n    }\n    return \"Available ids are: \".concat(keys, \".\");\n}\n/**\n * This either finds and returns Axis by the specified ID, or throws an exception if an axis with this ID does not exist.\n *\n * @param xAxisId identifier of the axis - it's either autogenerated ('0'), or passed via `id` prop as <XAxis id='foo' />\n * @returns axis configuration object\n * @throws Error if no axis with this ID exists\n */ var useXAxisOrThrow = function useXAxisOrThrow(xAxisId) {\n    var xAxisMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(XAxisContext);\n    !(xAxisMap != null) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'Could not find Recharts context; are you sure this is rendered inside a Recharts wrapper component?') : 0 : void 0;\n    var xAxis = xAxisMap[xAxisId];\n    !(xAxis != null) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, \"Could not find xAxis by id \\\"\".concat(xAxisId, \"\\\" [\").concat(_typeof(xAxisId), \"]. \").concat(getKeysForDebug(xAxisMap))) : 0 : void 0;\n    return xAxis;\n};\n/**\n * This will find an arbitrary first XAxis. If there's exactly one it always returns that one\n * - but if there are multiple then it can return any of those.\n *\n * If you want specific XAxis out of multiple then prefer using useXAxisOrThrow\n *\n * @returns X axisOptions, or undefined - if there are no X axes\n */ var useArbitraryXAxis = function useArbitraryXAxis() {\n    var xAxisMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(XAxisContext);\n    return (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.getAnyElementOfObject)(xAxisMap);\n};\n/**\n * This will find an arbitrary first YAxis. If there's exactly one it always returns that one\n * - but if there are multiple then it can return any of those.\n *\n * If you want specific YAxis out of multiple then prefer using useXAxisOrThrow\n *\n * @returns Y axisOptions, or undefined - if there are no Y axes\n */ var useArbitraryYAxis = function useArbitraryYAxis() {\n    var yAxisMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(YAxisContext);\n    return (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.getAnyElementOfObject)(yAxisMap);\n};\n/**\n * This hooks will:\n * 1st attempt to find an YAxis that has all elements in its domain finite\n * If no such axis exists, it will return an arbitrary YAxis\n * if there are no Y axes then it returns undefined\n *\n * @returns Either Y axisOptions, or undefined if there are no Y axes\n */ var useYAxisWithFiniteDomainOrRandom = function useYAxisWithFiniteDomainOrRandom() {\n    var yAxisMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(YAxisContext);\n    var yAxisWithFiniteDomain = lodash_find__WEBPACK_IMPORTED_MODULE_2___default()(yAxisMap, function(axis) {\n        return lodash_every__WEBPACK_IMPORTED_MODULE_3___default()(axis.domain, Number.isFinite);\n    });\n    return yAxisWithFiniteDomain || (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.getAnyElementOfObject)(yAxisMap);\n};\n/**\n * This either finds and returns Axis by the specified ID, or throws an exception if an axis with this ID does not exist.\n *\n * @param yAxisId identifier of the axis - it's either autogenerated ('0'), or passed via `id` prop as <YAxis id='foo' />\n * @returns axis configuration object\n * @throws Error if no axis with this ID exists\n */ var useYAxisOrThrow = function useYAxisOrThrow(yAxisId) {\n    var yAxisMap = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(YAxisContext);\n    !(yAxisMap != null) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, 'Could not find Recharts context; are you sure this is rendered inside a Recharts wrapper component?') : 0 : void 0;\n    var yAxis = yAxisMap[yAxisId];\n    !(yAxis != null) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, \"Could not find yAxis by id \\\"\".concat(yAxisId, \"\\\" [\").concat(_typeof(yAxisId), \"]. \").concat(getKeysForDebug(yAxisMap))) : 0 : void 0;\n    return yAxis;\n};\nvar useViewBox = function useViewBox() {\n    var viewBox = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ViewBoxContext);\n    return viewBox;\n};\nvar useOffset = function useOffset() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(OffsetContext);\n};\nvar useChartWidth = function useChartWidth() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ChartWidthContext);\n};\nvar useChartHeight = function useChartHeight() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ChartHeightContext);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9jb250ZXh0L2NoYXJ0TGF5b3V0Q29udGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxTQUFTQSxRQUFRQyxDQUFDO0lBQUk7SUFBMkIsT0FBT0QsVUFBVSxjQUFjLE9BQU9FLFVBQVUsWUFBWSxPQUFPQSxPQUFPQyxRQUFRLEdBQUcsU0FBVUYsQ0FBQztRQUFJLE9BQU8sT0FBT0E7SUFBRyxJQUFJLFNBQVVBLENBQUM7UUFBSSxPQUFPQSxLQUFLLGNBQWMsT0FBT0MsVUFBVUQsRUFBRSxXQUFXLEtBQUtDLFVBQVVELE1BQU1DLE9BQU9FLFNBQVMsR0FBRyxXQUFXLE9BQU9IO0lBQUcsR0FBR0QsUUFBUUM7QUFBSTtBQUNwUTtBQUNsQjtBQUNSO0FBQ0U7QUFDMkI7QUFDRjtBQUNuRCxJQUFJWSxlQUFlLFdBQVcsR0FBRVAsb0RBQWFBLENBQUNRLFdBQVc7QUFDekQsSUFBSUMsZUFBZSxXQUFXLEdBQUVULG9EQUFhQSxDQUFDUSxXQUFXO0FBQ3pELElBQUlFLGlCQUFpQixXQUFXLEdBQUVWLG9EQUFhQSxDQUFDUSxXQUFXO0FBQzNELElBQUlHLGdCQUFnQixXQUFXLEdBQUVYLG9EQUFhQSxDQUFDLENBQUMsR0FBRztBQUNuRCxJQUFJWSxvQkFBb0IsV0FBVyxHQUFFWixvREFBYUEsQ0FBQ1EsV0FBVztBQUM5RCxJQUFJSyxxQkFBcUIsV0FBVyxHQUFFYixvREFBYUEsQ0FBQyxHQUFHO0FBQ3ZELElBQUljLG9CQUFvQixXQUFXLEdBQUVkLG9EQUFhQSxDQUFDLEdBQUc7QUFFN0Q7Ozs7Ozs7Q0FPQyxHQUNNLElBQUllLDZCQUE2QixTQUFTQSwyQkFBMkJDLEtBQUs7SUFDL0UsSUFBSUMsZUFBZUQsTUFBTUUsS0FBSyxFQUM1QkMsV0FBV0YsYUFBYUUsUUFBUSxFQUNoQ0MsV0FBV0gsYUFBYUcsUUFBUSxFQUNoQ0MsU0FBU0osYUFBYUksTUFBTSxFQUM1QkMsYUFBYU4sTUFBTU0sVUFBVSxFQUM3QkMsV0FBV1AsTUFBTU8sUUFBUSxFQUN6QkMsUUFBUVIsTUFBTVEsS0FBSyxFQUNuQkMsU0FBU1QsTUFBTVMsTUFBTTtJQUV2Qjs7R0FFQyxHQUNELElBQUlDLFVBQVVyQix3RUFBZ0JBLENBQUNnQjtJQUUvQjs7Ozs7Ozs7Ozs7O0dBWUMsR0FDRCxPQUFPLFdBQVcsR0FBRXRCLDBEQUFtQixDQUFDUSxhQUFhcUIsUUFBUSxFQUFFO1FBQzdEQyxPQUFPVjtJQUNULEdBQUcsV0FBVyxHQUFFcEIsMERBQW1CLENBQUNVLGFBQWFtQixRQUFRLEVBQUU7UUFDekRDLE9BQU9UO0lBQ1QsR0FBRyxXQUFXLEdBQUVyQiwwREFBbUIsQ0FBQ1ksY0FBY2lCLFFBQVEsRUFBRTtRQUMxREMsT0FBT1I7SUFDVCxHQUFHLFdBQVcsR0FBRXRCLDBEQUFtQixDQUFDVyxlQUFla0IsUUFBUSxFQUFFO1FBQzNEQyxPQUFPSDtJQUNULEdBQUcsV0FBVyxHQUFFM0IsMERBQW1CLENBQUNhLGtCQUFrQmdCLFFBQVEsRUFBRTtRQUM5REMsT0FBT1A7SUFDVCxHQUFHLFdBQVcsR0FBRXZCLDBEQUFtQixDQUFDYyxtQkFBbUJlLFFBQVEsRUFBRTtRQUMvREMsT0FBT0o7SUFDVCxHQUFHLFdBQVcsR0FBRTFCLDBEQUFtQixDQUFDZSxrQkFBa0JjLFFBQVEsRUFBRTtRQUM5REMsT0FBT0w7SUFDVCxHQUFHRDtBQUNMLEVBQUU7QUFDSyxJQUFJTyxnQkFBZ0IsU0FBU0E7SUFDbEMsT0FBTzdCLGlEQUFVQSxDQUFDVztBQUNwQixFQUFFO0FBQ0YsU0FBU21CLGdCQUFnQkMsTUFBTTtJQUM3QixJQUFJQyxPQUFPQyxPQUFPRCxJQUFJLENBQUNEO0lBQ3ZCLElBQUlDLEtBQUtFLE1BQU0sS0FBSyxHQUFHO1FBQ3JCLE9BQU87SUFDVDtJQUNBLE9BQU8sc0JBQXNCQyxNQUFNLENBQUNILE1BQU07QUFDNUM7QUFFQTs7Ozs7O0NBTUMsR0FDTSxJQUFJSSxrQkFBa0IsU0FBU0EsZ0JBQWdCQyxPQUFPO0lBQzNELElBQUluQixXQUFXbEIsaURBQVVBLENBQUNNO0lBQzFCLENBQUVZLENBQUFBLFlBQVksSUFBRyxJQUFLb0IsS0FBcUMsR0FBR3JDLDBEQUFTQSxDQUFDLE9BQU8seUdBQXlHQSxDQUFnQixHQUFHLEtBQUs7SUFDaE4sSUFBSXNDLFFBQVFyQixRQUFRLENBQUNtQixRQUFRO0lBQzdCLENBQUVFLENBQUFBLFNBQVMsSUFBRyxJQUFLRCxLQUFxQyxHQUFHckMsMERBQVNBLENBQUMsT0FBTyxnQ0FBZ0NrQyxNQUFNLENBQUNFLFNBQVMsUUFBUUYsTUFBTSxDQUFDMUMsUUFBUTRDLFVBQVUsT0FBT0YsTUFBTSxDQUFDTCxnQkFBZ0JaLGNBQWNqQixDQUFnQixHQUFHLEtBQUs7SUFDak8sT0FBT3NDO0FBQ1QsRUFBRTtBQUVGOzs7Ozs7O0NBT0MsR0FDTSxJQUFJQyxvQkFBb0IsU0FBU0E7SUFDdEMsSUFBSXRCLFdBQVdsQixpREFBVUEsQ0FBQ007SUFDMUIsT0FBT0Qsc0VBQXFCQSxDQUFDYTtBQUMvQixFQUFFO0FBRUY7Ozs7Ozs7Q0FPQyxHQUNNLElBQUl1QixvQkFBb0IsU0FBU0E7SUFDdEMsSUFBSXRCLFdBQVduQixpREFBVUEsQ0FBQ1E7SUFDMUIsT0FBT0gsc0VBQXFCQSxDQUFDYztBQUMvQixFQUFFO0FBRUY7Ozs7Ozs7Q0FPQyxHQUNNLElBQUl1QixtQ0FBbUMsU0FBU0E7SUFDckQsSUFBSXZCLFdBQVduQixpREFBVUEsQ0FBQ1E7SUFDMUIsSUFBSW1DLHdCQUF3QnpDLGtEQUFJQSxDQUFDaUIsVUFBVSxTQUFVeUIsSUFBSTtRQUN2RCxPQUFPekMsbURBQUtBLENBQUN5QyxLQUFLQyxNQUFNLEVBQUVDLE9BQU9DLFFBQVE7SUFDM0M7SUFDQSxPQUFPSix5QkFBeUJ0QyxzRUFBcUJBLENBQUNjO0FBQ3hELEVBQUU7QUFFRjs7Ozs7O0NBTUMsR0FDTSxJQUFJNkIsa0JBQWtCLFNBQVNBLGdCQUFnQkMsT0FBTztJQUMzRCxJQUFJOUIsV0FBV25CLGlEQUFVQSxDQUFDUTtJQUMxQixDQUFFVyxDQUFBQSxZQUFZLElBQUcsSUFBS21CLEtBQXFDLEdBQUdyQywwREFBU0EsQ0FBQyxPQUFPLHlHQUF5R0EsQ0FBZ0IsR0FBRyxLQUFLO0lBQ2hOLElBQUlpRCxRQUFRL0IsUUFBUSxDQUFDOEIsUUFBUTtJQUM3QixDQUFFQyxDQUFBQSxTQUFTLElBQUcsSUFBS1osS0FBcUMsR0FBR3JDLDBEQUFTQSxDQUFDLE9BQU8sZ0NBQWdDa0MsTUFBTSxDQUFDYyxTQUFTLFFBQVFkLE1BQU0sQ0FBQzFDLFFBQVF3RCxVQUFVLE9BQU9kLE1BQU0sQ0FBQ0wsZ0JBQWdCWCxjQUFjbEIsQ0FBZ0IsR0FBRyxLQUFLO0lBQ2pPLE9BQU9pRDtBQUNULEVBQUU7QUFDSyxJQUFJQyxhQUFhLFNBQVNBO0lBQy9CLElBQUkxQixVQUFVekIsaURBQVVBLENBQUNTO0lBQ3pCLE9BQU9nQjtBQUNULEVBQUU7QUFDSyxJQUFJMkIsWUFBWSxTQUFTQTtJQUM5QixPQUFPcEQsaURBQVVBLENBQUNVO0FBQ3BCLEVBQUU7QUFDSyxJQUFJMkMsZ0JBQWdCLFNBQVNBO0lBQ2xDLE9BQU9yRCxpREFBVUEsQ0FBQ2E7QUFDcEIsRUFBRTtBQUNLLElBQUl5QyxpQkFBaUIsU0FBU0E7SUFDbkMsT0FBT3RELGlEQUFVQSxDQUFDWTtBQUNwQixFQUFFIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L2NvbnRleHQvY2hhcnRMYXlvdXRDb250ZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgZmluZCBmcm9tICdsb2Rhc2gvZmluZCc7XG5pbXBvcnQgZXZlcnkgZnJvbSAnbG9kYXNoL2V2ZXJ5JztcbmltcG9ydCB7IGNhbGN1bGF0ZVZpZXdCb3ggfSBmcm9tICcuLi91dGlsL2NhbGN1bGF0ZVZpZXdCb3gnO1xuaW1wb3J0IHsgZ2V0QW55RWxlbWVudE9mT2JqZWN0IH0gZnJvbSAnLi4vdXRpbC9EYXRhVXRpbHMnO1xuZXhwb3J0IHZhciBYQXhpc0NvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dCh1bmRlZmluZWQpO1xuZXhwb3J0IHZhciBZQXhpc0NvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dCh1bmRlZmluZWQpO1xuZXhwb3J0IHZhciBWaWV3Qm94Q29udGV4dCA9IC8qI19fUFVSRV9fKi9jcmVhdGVDb250ZXh0KHVuZGVmaW5lZCk7XG5leHBvcnQgdmFyIE9mZnNldENvbnRleHQgPSAvKiNfX1BVUkVfXyovY3JlYXRlQ29udGV4dCh7fSk7XG5leHBvcnQgdmFyIENsaXBQYXRoSWRDb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbmV4cG9ydCB2YXIgQ2hhcnRIZWlnaHRDb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQoMCk7XG5leHBvcnQgdmFyIENoYXJ0V2lkdGhDb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQoMCk7XG5cbi8qKlxuICogV2lsbCBhZGQgYWxsIHRoZSBwcm9wZXJ0aWVzIHJlcXVpcmVkIHRvIHJlbmRlciBhbGwgaW5kaXZpZHVhbCBSZWNoYXJ0cyBjb21wb25lbnRzIGludG8gYSBSZWFjdCBDb250ZXh0LlxuICpcbiAqIElmIHlvdSB3YW50IHRvIHJlYWQgdGhlc2UgcHJvcGVydGllcywgc2VlIHRoZSBjb2xsZWN0aW9uIG9mIGhvb2tzIGV4cG9ydGVkIGZyb20gdGhpcyBmaWxlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wcyBDYXRlZ29yaWNhbENoYXJ0U3RhdGUsIHBsdXMgY2hpbGRyZW5cbiAqIEByZXR1cm5zIHtSZWFjdEVsZW1lbnR9IFJlYWN0IENvbnRleHQgUHJvdmlkZXJcbiAqL1xuZXhwb3J0IHZhciBDaGFydExheW91dENvbnRleHRQcm92aWRlciA9IGZ1bmN0aW9uIENoYXJ0TGF5b3V0Q29udGV4dFByb3ZpZGVyKHByb3BzKSB7XG4gIHZhciBfcHJvcHMkc3RhdGUgPSBwcm9wcy5zdGF0ZSxcbiAgICB4QXhpc01hcCA9IF9wcm9wcyRzdGF0ZS54QXhpc01hcCxcbiAgICB5QXhpc01hcCA9IF9wcm9wcyRzdGF0ZS55QXhpc01hcCxcbiAgICBvZmZzZXQgPSBfcHJvcHMkc3RhdGUub2Zmc2V0LFxuICAgIGNsaXBQYXRoSWQgPSBwcm9wcy5jbGlwUGF0aElkLFxuICAgIGNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW4sXG4gICAgd2lkdGggPSBwcm9wcy53aWR0aCxcbiAgICBoZWlnaHQgPSBwcm9wcy5oZWlnaHQ7XG5cbiAgLyoqXG4gICAqIFBlcmhhcHMgd2Ugc2hvdWxkIGNvbXB1dGUgdGhpcyBwcm9wZXJ0eSB3aGVuIHJlYWRpbmc/IExldCdzIHNlZSB3aGF0IGlzIG1vcmUgb2Z0ZW4gdXNlZFxuICAgKi9cbiAgdmFyIHZpZXdCb3ggPSBjYWxjdWxhdGVWaWV3Qm94KG9mZnNldCk7XG5cbiAgLypcbiAgICogVGhpcyBwcmV0ZW5kcyB0byBiZSBhIHNpbmdsZSBjb250ZXh0IGJ1dCBhY3R1YWxseSBpcyBzcGxpdCBpbnRvIG11bHRpcGxlIHNtYWxsZXIgb25lcy5cbiAgICogV2h5P1xuICAgKiBCZWNhdXNlIG9uZSBSZWFjdCBDb250ZXh0IG9ubHkgYWxsb3dzIHRvIHNldCBvbmUgdmFsdWUuXG4gICAqIEJ1dCB3ZSBuZWVkIHRvIHNldCBtdWx0aXBsZSB2YWx1ZXMuXG4gICAqIElmIHdlIGRvIHRoYXQgd2l0aCBvbmUgY29udGV4dCwgdGhlbiB3ZSBmb3JjZSByZS1yZW5kZXIgb24gY29tcG9uZW50cyB0aGF0IG1pZ2h0IG5vdCBldmVuIGJlIGludGVyZXN0ZWRcbiAgICogaW4gdGhlIHBhcnQgb2YgdGhlIHN0YXRlIHRoYXQgaGFzIGNoYW5nZWQuXG4gICAqXG4gICAqIEJ5IHNwbGl0dGluZyBpbnRvIHNtYWxsZXIgY29udGV4dHMsIHdlIGFsbG93IGVhY2ggY29tcG9uZW50cyB0byBiZSBvcHRpbWl6ZWQgYW5kIG9ubHkgcmUtcmVuZGVyIHdoZW4gaXRzIGRlcGVuZGVuY2llcyBjaGFuZ2UuXG4gICAqXG4gICAqIFRvIGFjdHVhbGx5IGFjaGlldmUgdGhlIG9wdGltYWwgcmUtcmVuZGVyLCBpdCBpcyBuZWNlc3NhcnkgdG8gdXNlIFJlYWN0Lm1lbW8oKS5cbiAgICogU2VlIHRoZSB0ZXN0IGZpbGUgZm9yIGRldGFpbHMuXG4gICAqL1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoWEF4aXNDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHhBeGlzTWFwXG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFlBeGlzQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB5QXhpc01hcFxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChPZmZzZXRDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IG9mZnNldFxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChWaWV3Qm94Q29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB2aWV3Qm94XG4gIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENsaXBQYXRoSWRDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNsaXBQYXRoSWRcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hhcnRIZWlnaHRDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGhlaWdodFxuICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDaGFydFdpZHRoQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiB3aWR0aFxuICB9LCBjaGlsZHJlbikpKSkpKSk7XG59O1xuZXhwb3J0IHZhciB1c2VDbGlwUGF0aElkID0gZnVuY3Rpb24gdXNlQ2xpcFBhdGhJZCgpIHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoQ2xpcFBhdGhJZENvbnRleHQpO1xufTtcbmZ1bmN0aW9uIGdldEtleXNGb3JEZWJ1ZyhvYmplY3QpIHtcbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpO1xuICBpZiAoa2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJ1RoZXJlIGFyZSBubyBhdmFpbGFibGUgaWRzLic7XG4gIH1cbiAgcmV0dXJuIFwiQXZhaWxhYmxlIGlkcyBhcmU6IFwiLmNvbmNhdChrZXlzLCBcIi5cIik7XG59XG5cbi8qKlxuICogVGhpcyBlaXRoZXIgZmluZHMgYW5kIHJldHVybnMgQXhpcyBieSB0aGUgc3BlY2lmaWVkIElELCBvciB0aHJvd3MgYW4gZXhjZXB0aW9uIGlmIGFuIGF4aXMgd2l0aCB0aGlzIElEIGRvZXMgbm90IGV4aXN0LlxuICpcbiAqIEBwYXJhbSB4QXhpc0lkIGlkZW50aWZpZXIgb2YgdGhlIGF4aXMgLSBpdCdzIGVpdGhlciBhdXRvZ2VuZXJhdGVkICgnMCcpLCBvciBwYXNzZWQgdmlhIGBpZGAgcHJvcCBhcyA8WEF4aXMgaWQ9J2ZvbycgLz5cbiAqIEByZXR1cm5zIGF4aXMgY29uZmlndXJhdGlvbiBvYmplY3RcbiAqIEB0aHJvd3MgRXJyb3IgaWYgbm8gYXhpcyB3aXRoIHRoaXMgSUQgZXhpc3RzXG4gKi9cbmV4cG9ydCB2YXIgdXNlWEF4aXNPclRocm93ID0gZnVuY3Rpb24gdXNlWEF4aXNPclRocm93KHhBeGlzSWQpIHtcbiAgdmFyIHhBeGlzTWFwID0gdXNlQ29udGV4dChYQXhpc0NvbnRleHQpO1xuICAhKHhBeGlzTWFwICE9IG51bGwpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnQ291bGQgbm90IGZpbmQgUmVjaGFydHMgY29udGV4dDsgYXJlIHlvdSBzdXJlIHRoaXMgaXMgcmVuZGVyZWQgaW5zaWRlIGEgUmVjaGFydHMgd3JhcHBlciBjb21wb25lbnQ/JykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgeEF4aXMgPSB4QXhpc01hcFt4QXhpc0lkXTtcbiAgISh4QXhpcyAhPSBudWxsKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJDb3VsZCBub3QgZmluZCB4QXhpcyBieSBpZCBcXFwiXCIuY29uY2F0KHhBeGlzSWQsIFwiXFxcIiBbXCIpLmNvbmNhdChfdHlwZW9mKHhBeGlzSWQpLCBcIl0uIFwiKS5jb25jYXQoZ2V0S2V5c0ZvckRlYnVnKHhBeGlzTWFwKSkpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgcmV0dXJuIHhBeGlzO1xufTtcblxuLyoqXG4gKiBUaGlzIHdpbGwgZmluZCBhbiBhcmJpdHJhcnkgZmlyc3QgWEF4aXMuIElmIHRoZXJlJ3MgZXhhY3RseSBvbmUgaXQgYWx3YXlzIHJldHVybnMgdGhhdCBvbmVcbiAqIC0gYnV0IGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB0aGVuIGl0IGNhbiByZXR1cm4gYW55IG9mIHRob3NlLlxuICpcbiAqIElmIHlvdSB3YW50IHNwZWNpZmljIFhBeGlzIG91dCBvZiBtdWx0aXBsZSB0aGVuIHByZWZlciB1c2luZyB1c2VYQXhpc09yVGhyb3dcbiAqXG4gKiBAcmV0dXJucyBYIGF4aXNPcHRpb25zLCBvciB1bmRlZmluZWQgLSBpZiB0aGVyZSBhcmUgbm8gWCBheGVzXG4gKi9cbmV4cG9ydCB2YXIgdXNlQXJiaXRyYXJ5WEF4aXMgPSBmdW5jdGlvbiB1c2VBcmJpdHJhcnlYQXhpcygpIHtcbiAgdmFyIHhBeGlzTWFwID0gdXNlQ29udGV4dChYQXhpc0NvbnRleHQpO1xuICByZXR1cm4gZ2V0QW55RWxlbWVudE9mT2JqZWN0KHhBeGlzTWFwKTtcbn07XG5cbi8qKlxuICogVGhpcyB3aWxsIGZpbmQgYW4gYXJiaXRyYXJ5IGZpcnN0IFlBeGlzLiBJZiB0aGVyZSdzIGV4YWN0bHkgb25lIGl0IGFsd2F5cyByZXR1cm5zIHRoYXQgb25lXG4gKiAtIGJ1dCBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgdGhlbiBpdCBjYW4gcmV0dXJuIGFueSBvZiB0aG9zZS5cbiAqXG4gKiBJZiB5b3Ugd2FudCBzcGVjaWZpYyBZQXhpcyBvdXQgb2YgbXVsdGlwbGUgdGhlbiBwcmVmZXIgdXNpbmcgdXNlWEF4aXNPclRocm93XG4gKlxuICogQHJldHVybnMgWSBheGlzT3B0aW9ucywgb3IgdW5kZWZpbmVkIC0gaWYgdGhlcmUgYXJlIG5vIFkgYXhlc1xuICovXG5leHBvcnQgdmFyIHVzZUFyYml0cmFyeVlBeGlzID0gZnVuY3Rpb24gdXNlQXJiaXRyYXJ5WUF4aXMoKSB7XG4gIHZhciB5QXhpc01hcCA9IHVzZUNvbnRleHQoWUF4aXNDb250ZXh0KTtcbiAgcmV0dXJuIGdldEFueUVsZW1lbnRPZk9iamVjdCh5QXhpc01hcCk7XG59O1xuXG4vKipcbiAqIFRoaXMgaG9va3Mgd2lsbDpcbiAqIDFzdCBhdHRlbXB0IHRvIGZpbmQgYW4gWUF4aXMgdGhhdCBoYXMgYWxsIGVsZW1lbnRzIGluIGl0cyBkb21haW4gZmluaXRlXG4gKiBJZiBubyBzdWNoIGF4aXMgZXhpc3RzLCBpdCB3aWxsIHJldHVybiBhbiBhcmJpdHJhcnkgWUF4aXNcbiAqIGlmIHRoZXJlIGFyZSBubyBZIGF4ZXMgdGhlbiBpdCByZXR1cm5zIHVuZGVmaW5lZFxuICpcbiAqIEByZXR1cm5zIEVpdGhlciBZIGF4aXNPcHRpb25zLCBvciB1bmRlZmluZWQgaWYgdGhlcmUgYXJlIG5vIFkgYXhlc1xuICovXG5leHBvcnQgdmFyIHVzZVlBeGlzV2l0aEZpbml0ZURvbWFpbk9yUmFuZG9tID0gZnVuY3Rpb24gdXNlWUF4aXNXaXRoRmluaXRlRG9tYWluT3JSYW5kb20oKSB7XG4gIHZhciB5QXhpc01hcCA9IHVzZUNvbnRleHQoWUF4aXNDb250ZXh0KTtcbiAgdmFyIHlBeGlzV2l0aEZpbml0ZURvbWFpbiA9IGZpbmQoeUF4aXNNYXAsIGZ1bmN0aW9uIChheGlzKSB7XG4gICAgcmV0dXJuIGV2ZXJ5KGF4aXMuZG9tYWluLCBOdW1iZXIuaXNGaW5pdGUpO1xuICB9KTtcbiAgcmV0dXJuIHlBeGlzV2l0aEZpbml0ZURvbWFpbiB8fCBnZXRBbnlFbGVtZW50T2ZPYmplY3QoeUF4aXNNYXApO1xufTtcblxuLyoqXG4gKiBUaGlzIGVpdGhlciBmaW5kcyBhbmQgcmV0dXJucyBBeGlzIGJ5IHRoZSBzcGVjaWZpZWQgSUQsIG9yIHRocm93cyBhbiBleGNlcHRpb24gaWYgYW4gYXhpcyB3aXRoIHRoaXMgSUQgZG9lcyBub3QgZXhpc3QuXG4gKlxuICogQHBhcmFtIHlBeGlzSWQgaWRlbnRpZmllciBvZiB0aGUgYXhpcyAtIGl0J3MgZWl0aGVyIGF1dG9nZW5lcmF0ZWQgKCcwJyksIG9yIHBhc3NlZCB2aWEgYGlkYCBwcm9wIGFzIDxZQXhpcyBpZD0nZm9vJyAvPlxuICogQHJldHVybnMgYXhpcyBjb25maWd1cmF0aW9uIG9iamVjdFxuICogQHRocm93cyBFcnJvciBpZiBubyBheGlzIHdpdGggdGhpcyBJRCBleGlzdHNcbiAqL1xuZXhwb3J0IHZhciB1c2VZQXhpc09yVGhyb3cgPSBmdW5jdGlvbiB1c2VZQXhpc09yVGhyb3coeUF4aXNJZCkge1xuICB2YXIgeUF4aXNNYXAgPSB1c2VDb250ZXh0KFlBeGlzQ29udGV4dCk7XG4gICEoeUF4aXNNYXAgIT0gbnVsbCkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdDb3VsZCBub3QgZmluZCBSZWNoYXJ0cyBjb250ZXh0OyBhcmUgeW91IHN1cmUgdGhpcyBpcyByZW5kZXJlZCBpbnNpZGUgYSBSZWNoYXJ0cyB3cmFwcGVyIGNvbXBvbmVudD8nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciB5QXhpcyA9IHlBeGlzTWFwW3lBeGlzSWRdO1xuICAhKHlBeGlzICE9IG51bGwpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkNvdWxkIG5vdCBmaW5kIHlBeGlzIGJ5IGlkIFxcXCJcIi5jb25jYXQoeUF4aXNJZCwgXCJcXFwiIFtcIikuY29uY2F0KF90eXBlb2YoeUF4aXNJZCksIFwiXS4gXCIpLmNvbmNhdChnZXRLZXlzRm9yRGVidWcoeUF4aXNNYXApKSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICByZXR1cm4geUF4aXM7XG59O1xuZXhwb3J0IHZhciB1c2VWaWV3Qm94ID0gZnVuY3Rpb24gdXNlVmlld0JveCgpIHtcbiAgdmFyIHZpZXdCb3ggPSB1c2VDb250ZXh0KFZpZXdCb3hDb250ZXh0KTtcbiAgcmV0dXJuIHZpZXdCb3g7XG59O1xuZXhwb3J0IHZhciB1c2VPZmZzZXQgPSBmdW5jdGlvbiB1c2VPZmZzZXQoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KE9mZnNldENvbnRleHQpO1xufTtcbmV4cG9ydCB2YXIgdXNlQ2hhcnRXaWR0aCA9IGZ1bmN0aW9uIHVzZUNoYXJ0V2lkdGgoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KENoYXJ0V2lkdGhDb250ZXh0KTtcbn07XG5leHBvcnQgdmFyIHVzZUNoYXJ0SGVpZ2h0ID0gZnVuY3Rpb24gdXNlQ2hhcnRIZWlnaHQoKSB7XG4gIHJldHVybiB1c2VDb250ZXh0KENoYXJ0SGVpZ2h0Q29udGV4dCk7XG59OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwicHJvdG90eXBlIiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsImludmFyaWFudCIsImZpbmQiLCJldmVyeSIsImNhbGN1bGF0ZVZpZXdCb3giLCJnZXRBbnlFbGVtZW50T2ZPYmplY3QiLCJYQXhpc0NvbnRleHQiLCJ1bmRlZmluZWQiLCJZQXhpc0NvbnRleHQiLCJWaWV3Qm94Q29udGV4dCIsIk9mZnNldENvbnRleHQiLCJDbGlwUGF0aElkQ29udGV4dCIsIkNoYXJ0SGVpZ2h0Q29udGV4dCIsIkNoYXJ0V2lkdGhDb250ZXh0IiwiQ2hhcnRMYXlvdXRDb250ZXh0UHJvdmlkZXIiLCJwcm9wcyIsIl9wcm9wcyRzdGF0ZSIsInN0YXRlIiwieEF4aXNNYXAiLCJ5QXhpc01hcCIsIm9mZnNldCIsImNsaXBQYXRoSWQiLCJjaGlsZHJlbiIsIndpZHRoIiwiaGVpZ2h0Iiwidmlld0JveCIsImNyZWF0ZUVsZW1lbnQiLCJQcm92aWRlciIsInZhbHVlIiwidXNlQ2xpcFBhdGhJZCIsImdldEtleXNGb3JEZWJ1ZyIsIm9iamVjdCIsImtleXMiLCJPYmplY3QiLCJsZW5ndGgiLCJjb25jYXQiLCJ1c2VYQXhpc09yVGhyb3ciLCJ4QXhpc0lkIiwicHJvY2VzcyIsInhBeGlzIiwidXNlQXJiaXRyYXJ5WEF4aXMiLCJ1c2VBcmJpdHJhcnlZQXhpcyIsInVzZVlBeGlzV2l0aEZpbml0ZURvbWFpbk9yUmFuZG9tIiwieUF4aXNXaXRoRmluaXRlRG9tYWluIiwiYXhpcyIsImRvbWFpbiIsIk51bWJlciIsImlzRmluaXRlIiwidXNlWUF4aXNPclRocm93IiwieUF4aXNJZCIsInlBeGlzIiwidXNlVmlld0JveCIsInVzZU9mZnNldCIsInVzZUNoYXJ0V2lkdGgiLCJ1c2VDaGFydEhlaWdodCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/context/chartLayoutContext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Cross.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Cross.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cross: () => (/* binding */ Cross)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar _excluded = [\n    \"x\",\n    \"y\",\n    \"top\",\n    \"left\",\n    \"width\",\n    \"height\",\n    \"className\"\n];\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n/**\n * @fileOverview Cross\n */ \n\n\n\nvar getPath = function getPath(x, y, width, height, top, left) {\n    return \"M\".concat(x, \",\").concat(top, \"v\").concat(height, \"M\").concat(left, \",\").concat(y, \"h\").concat(width);\n};\nvar Cross = function Cross(_ref) {\n    var _ref$x = _ref.x, x = _ref$x === void 0 ? 0 : _ref$x, _ref$y = _ref.y, y = _ref$y === void 0 ? 0 : _ref$y, _ref$top = _ref.top, top = _ref$top === void 0 ? 0 : _ref$top, _ref$left = _ref.left, left = _ref$left === void 0 ? 0 : _ref$left, _ref$width = _ref.width, width = _ref$width === void 0 ? 0 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 0 : _ref$height, className = _ref.className, rest = _objectWithoutProperties(_ref, _excluded);\n    var props = _objectSpread({\n        x: x,\n        y: y,\n        top: top,\n        left: left,\n        width: width,\n        height: height\n    }, rest);\n    if (!(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(x) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(y) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(width) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(height) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(top) || !(0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.isNumber)(left)) {\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_3__.filterProps)(props, true), {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-cross', className),\n        d: getPath(x, y, width, height, top, left)\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9zaGFwZS9Dcm9zcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxTQUFTQSxRQUFRQyxDQUFDO0lBQUk7SUFBMkIsT0FBT0QsVUFBVSxjQUFjLE9BQU9FLFVBQVUsWUFBWSxPQUFPQSxPQUFPQyxRQUFRLEdBQUcsU0FBVUYsQ0FBQztRQUFJLE9BQU8sT0FBT0E7SUFBRyxJQUFJLFNBQVVBLENBQUM7UUFBSSxPQUFPQSxLQUFLLGNBQWMsT0FBT0MsVUFBVUQsRUFBRSxXQUFXLEtBQUtDLFVBQVVELE1BQU1DLE9BQU9FLFNBQVMsR0FBRyxXQUFXLE9BQU9IO0lBQUcsR0FBR0QsUUFBUUM7QUFBSTtBQUM3VCxJQUFJSSxZQUFZO0lBQUM7SUFBSztJQUFLO0lBQU87SUFBUTtJQUFTO0lBQVU7Q0FBWTtBQUN6RSxTQUFTQztJQUFhQSxXQUFXQyxPQUFPQyxNQUFNLEdBQUdELE9BQU9DLE1BQU0sQ0FBQ0MsSUFBSSxLQUFLLFNBQVVDLE1BQU07UUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1lBQUUsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFO1lBQUUsSUFBSyxJQUFJSSxPQUFPRCxPQUFRO2dCQUFFLElBQUlQLE9BQU9ILFNBQVMsQ0FBQ1ksY0FBYyxDQUFDQyxJQUFJLENBQUNILFFBQVFDLE1BQU07b0JBQUVMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7Z0JBQUU7WUFBRTtRQUFFO1FBQUUsT0FBT0w7SUFBUTtJQUFHLE9BQU9KLFNBQVNZLEtBQUssQ0FBQyxJQUFJLEVBQUVOO0FBQVk7QUFDbFYsU0FBU08sUUFBUUMsQ0FBQyxFQUFFQyxDQUFDO0lBQUksSUFBSUMsSUFBSWYsT0FBT2dCLElBQUksQ0FBQ0g7SUFBSSxJQUFJYixPQUFPaUIscUJBQXFCLEVBQUU7UUFBRSxJQUFJdkIsSUFBSU0sT0FBT2lCLHFCQUFxQixDQUFDSjtRQUFJQyxLQUFNcEIsQ0FBQUEsSUFBSUEsRUFBRXdCLE1BQU0sQ0FBQyxTQUFVSixDQUFDO1lBQUksT0FBT2QsT0FBT21CLHdCQUF3QixDQUFDTixHQUFHQyxHQUFHTSxVQUFVO1FBQUUsRUFBQyxHQUFJTCxFQUFFTSxJQUFJLENBQUNWLEtBQUssQ0FBQ0ksR0FBR3JCO0lBQUk7SUFBRSxPQUFPcUI7QUFBRztBQUM5UCxTQUFTTyxjQUFjVCxDQUFDO0lBQUksSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlULFVBQVVDLE1BQU0sRUFBRVEsSUFBSztRQUFFLElBQUlDLElBQUksUUFBUVYsU0FBUyxDQUFDUyxFQUFFLEdBQUdULFNBQVMsQ0FBQ1MsRUFBRSxHQUFHLENBQUM7UUFBR0EsSUFBSSxJQUFJRixRQUFRWixPQUFPZSxJQUFJLENBQUMsR0FBR1EsT0FBTyxDQUFDLFNBQVVULENBQUM7WUFBSVUsZ0JBQWdCWCxHQUFHQyxHQUFHQyxDQUFDLENBQUNELEVBQUU7UUFBRyxLQUFLZCxPQUFPeUIseUJBQXlCLEdBQUd6QixPQUFPMEIsZ0JBQWdCLENBQUNiLEdBQUdiLE9BQU95Qix5QkFBeUIsQ0FBQ1YsTUFBTUgsUUFBUVosT0FBT2UsSUFBSVEsT0FBTyxDQUFDLFNBQVVULENBQUM7WUFBSWQsT0FBTzJCLGNBQWMsQ0FBQ2QsR0FBR0MsR0FBR2QsT0FBT21CLHdCQUF3QixDQUFDSixHQUFHRDtRQUFLO0lBQUk7SUFBRSxPQUFPRDtBQUFHO0FBQ3RiLFNBQVNXLGdCQUFnQkksR0FBRyxFQUFFcEIsR0FBRyxFQUFFcUIsS0FBSztJQUFJckIsTUFBTXNCLGVBQWV0QjtJQUFNLElBQUlBLE9BQU9vQixLQUFLO1FBQUU1QixPQUFPMkIsY0FBYyxDQUFDQyxLQUFLcEIsS0FBSztZQUFFcUIsT0FBT0E7WUFBT1QsWUFBWTtZQUFNVyxjQUFjO1lBQU1DLFVBQVU7UUFBSztJQUFJLE9BQU87UUFBRUosR0FBRyxDQUFDcEIsSUFBSSxHQUFHcUI7SUFBTztJQUFFLE9BQU9EO0FBQUs7QUFDM08sU0FBU0UsZUFBZWYsQ0FBQztJQUFJLElBQUlYLElBQUk2QixhQUFhbEIsR0FBRztJQUFXLE9BQU8sWUFBWXRCLFFBQVFXLEtBQUtBLElBQUlBLElBQUk7QUFBSTtBQUM1RyxTQUFTNkIsYUFBYWxCLENBQUMsRUFBRUQsQ0FBQztJQUFJLElBQUksWUFBWXJCLFFBQVFzQixNQUFNLENBQUNBLEdBQUcsT0FBT0E7SUFBRyxJQUFJRixJQUFJRSxDQUFDLENBQUNwQixPQUFPdUMsV0FBVyxDQUFDO0lBQUUsSUFBSSxLQUFLLE1BQU1yQixHQUFHO1FBQUUsSUFBSVQsSUFBSVMsRUFBRUgsSUFBSSxDQUFDSyxHQUFHRCxLQUFLO1FBQVksSUFBSSxZQUFZckIsUUFBUVcsSUFBSSxPQUFPQTtRQUFHLE1BQU0sSUFBSStCLFVBQVU7SUFBaUQ7SUFBRSxPQUFPLENBQUMsYUFBYXJCLElBQUlzQixTQUFTQyxNQUFLLEVBQUd0QjtBQUFJO0FBQzNULFNBQVN1Qix5QkFBeUIvQixNQUFNLEVBQUVnQyxRQUFRO0lBQUksSUFBSWhDLFVBQVUsTUFBTSxPQUFPLENBQUM7SUFBRyxJQUFJSixTQUFTcUMsOEJBQThCakMsUUFBUWdDO0lBQVcsSUFBSS9CLEtBQUtKO0lBQUcsSUFBSUosT0FBT2lCLHFCQUFxQixFQUFFO1FBQUUsSUFBSXdCLG1CQUFtQnpDLE9BQU9pQixxQkFBcUIsQ0FBQ1Y7UUFBUyxJQUFLSCxJQUFJLEdBQUdBLElBQUlxQyxpQkFBaUJuQyxNQUFNLEVBQUVGLElBQUs7WUFBRUksTUFBTWlDLGdCQUFnQixDQUFDckMsRUFBRTtZQUFFLElBQUltQyxTQUFTRyxPQUFPLENBQUNsQyxRQUFRLEdBQUc7WUFBVSxJQUFJLENBQUNSLE9BQU9ILFNBQVMsQ0FBQzhDLG9CQUFvQixDQUFDakMsSUFBSSxDQUFDSCxRQUFRQyxNQUFNO1lBQVVMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7UUFBRTtJQUFFO0lBQUUsT0FBT0w7QUFBUTtBQUMzZSxTQUFTcUMsOEJBQThCakMsTUFBTSxFQUFFZ0MsUUFBUTtJQUFJLElBQUloQyxVQUFVLE1BQU0sT0FBTyxDQUFDO0lBQUcsSUFBSUosU0FBUyxDQUFDO0lBQUcsSUFBSyxJQUFJSyxPQUFPRCxPQUFRO1FBQUUsSUFBSVAsT0FBT0gsU0FBUyxDQUFDWSxjQUFjLENBQUNDLElBQUksQ0FBQ0gsUUFBUUMsTUFBTTtZQUFFLElBQUkrQixTQUFTRyxPQUFPLENBQUNsQyxRQUFRLEdBQUc7WUFBVUwsTUFBTSxDQUFDSyxJQUFJLEdBQUdELE1BQU0sQ0FBQ0MsSUFBSTtRQUFFO0lBQUU7SUFBRSxPQUFPTDtBQUFRO0FBQ3RSOztDQUVDLEdBQ3lCO0FBQ0Y7QUFDcUI7QUFDSTtBQUNqRCxJQUFJNkMsVUFBVSxTQUFTQSxRQUFRQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUMzRCxPQUFPLElBQUlDLE1BQU0sQ0FBQ04sR0FBRyxLQUFLTSxNQUFNLENBQUNGLEtBQUssS0FBS0UsTUFBTSxDQUFDSCxRQUFRLEtBQUtHLE1BQU0sQ0FBQ0QsTUFBTSxLQUFLQyxNQUFNLENBQUNMLEdBQUcsS0FBS0ssTUFBTSxDQUFDSjtBQUN6RztBQUNPLElBQUlLLFFBQVEsU0FBU0EsTUFBTUMsSUFBSTtJQUNwQyxJQUFJQyxTQUFTRCxLQUFLUixDQUFDLEVBQ2pCQSxJQUFJUyxXQUFXLEtBQUssSUFBSSxJQUFJQSxRQUM1QkMsU0FBU0YsS0FBS1AsQ0FBQyxFQUNmQSxJQUFJUyxXQUFXLEtBQUssSUFBSSxJQUFJQSxRQUM1QkMsV0FBV0gsS0FBS0osR0FBRyxFQUNuQkEsTUFBTU8sYUFBYSxLQUFLLElBQUksSUFBSUEsVUFDaENDLFlBQVlKLEtBQUtILElBQUksRUFDckJBLE9BQU9PLGNBQWMsS0FBSyxJQUFJLElBQUlBLFdBQ2xDQyxhQUFhTCxLQUFLTixLQUFLLEVBQ3ZCQSxRQUFRVyxlQUFlLEtBQUssSUFBSSxJQUFJQSxZQUNwQ0MsY0FBY04sS0FBS0wsTUFBTSxFQUN6QkEsU0FBU1csZ0JBQWdCLEtBQUssSUFBSSxJQUFJQSxhQUN0Q0MsWUFBWVAsS0FBS08sU0FBUyxFQUMxQkMsT0FBTzNCLHlCQUF5Qm1CLE1BQU0zRDtJQUN4QyxJQUFJb0UsUUFBUTVDLGNBQWM7UUFDeEIyQixHQUFHQTtRQUNIQyxHQUFHQTtRQUNIRyxLQUFLQTtRQUNMQyxNQUFNQTtRQUNOSCxPQUFPQTtRQUNQQyxRQUFRQTtJQUNWLEdBQUdhO0lBQ0gsSUFBSSxDQUFDbkIseURBQVFBLENBQUNHLE1BQU0sQ0FBQ0gseURBQVFBLENBQUNJLE1BQU0sQ0FBQ0oseURBQVFBLENBQUNLLFVBQVUsQ0FBQ0wseURBQVFBLENBQUNNLFdBQVcsQ0FBQ04seURBQVFBLENBQUNPLFFBQVEsQ0FBQ1AseURBQVFBLENBQUNRLE9BQU87UUFDOUcsT0FBTztJQUNUO0lBQ0EsT0FBTyxXQUFXLEdBQUVWLDBEQUFtQixDQUFDLFFBQVE3QyxTQUFTLENBQUMsR0FBR2dELDZEQUFXQSxDQUFDbUIsT0FBTyxPQUFPO1FBQ3JGRixXQUFXbkIsZ0RBQUlBLENBQUMsa0JBQWtCbUI7UUFDbENJLEdBQUdwQixRQUFRQyxHQUFHQyxHQUFHQyxPQUFPQyxRQUFRQyxLQUFLQztJQUN2QztBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvc2hhcGUvQ3Jvc3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7IFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjsgcmV0dXJuIF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbzsgfSwgX3R5cGVvZihvKTsgfVxudmFyIF9leGNsdWRlZCA9IFtcInhcIiwgXCJ5XCIsIFwidG9wXCIsIFwibGVmdFwiLCBcIndpZHRoXCIsIFwiaGVpZ2h0XCIsIFwiY2xhc3NOYW1lXCJdO1xuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5mdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQoZSkgeyBmb3IgKHZhciByID0gMTsgciA8IGFyZ3VtZW50cy5sZW5ndGg7IHIrKykgeyB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307IHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHQpKSA6IG93bktleXMoT2JqZWN0KHQpKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTsgfSk7IH0gcmV0dXJuIGU7IH1cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsga2V5ID0gX3RvUHJvcGVydHlLZXkoa2V5KTsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7IHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpOyByZXR1cm4gXCJzeW1ib2xcIiA9PSBfdHlwZW9mKGkpID8gaSA6IGkgKyBcIlwiOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDsgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmICh2b2lkIDAgIT09IGUpIHsgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YoaSkpIHJldHVybiBpOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7IH0gcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTsgfVxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHsgaWYgKHNvdXJjZSA9PSBudWxsKSByZXR1cm4ge307IHZhciB0YXJnZXQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKTsgdmFyIGtleSwgaTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHNvdXJjZVN5bWJvbEtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZVN5bWJvbEtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHNvdXJjZSwga2V5KSkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cbi8qKlxuICogQGZpbGVPdmVydmlldyBDcm9zc1xuICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsc3ggZnJvbSAnY2xzeCc7XG5pbXBvcnQgeyBpc051bWJlciB9IGZyb20gJy4uL3V0aWwvRGF0YVV0aWxzJztcbmltcG9ydCB7IGZpbHRlclByb3BzIH0gZnJvbSAnLi4vdXRpbC9SZWFjdFV0aWxzJztcbnZhciBnZXRQYXRoID0gZnVuY3Rpb24gZ2V0UGF0aCh4LCB5LCB3aWR0aCwgaGVpZ2h0LCB0b3AsIGxlZnQpIHtcbiAgcmV0dXJuIFwiTVwiLmNvbmNhdCh4LCBcIixcIikuY29uY2F0KHRvcCwgXCJ2XCIpLmNvbmNhdChoZWlnaHQsIFwiTVwiKS5jb25jYXQobGVmdCwgXCIsXCIpLmNvbmNhdCh5LCBcImhcIikuY29uY2F0KHdpZHRoKTtcbn07XG5leHBvcnQgdmFyIENyb3NzID0gZnVuY3Rpb24gQ3Jvc3MoX3JlZikge1xuICB2YXIgX3JlZiR4ID0gX3JlZi54LFxuICAgIHggPSBfcmVmJHggPT09IHZvaWQgMCA/IDAgOiBfcmVmJHgsXG4gICAgX3JlZiR5ID0gX3JlZi55LFxuICAgIHkgPSBfcmVmJHkgPT09IHZvaWQgMCA/IDAgOiBfcmVmJHksXG4gICAgX3JlZiR0b3AgPSBfcmVmLnRvcCxcbiAgICB0b3AgPSBfcmVmJHRvcCA9PT0gdm9pZCAwID8gMCA6IF9yZWYkdG9wLFxuICAgIF9yZWYkbGVmdCA9IF9yZWYubGVmdCxcbiAgICBsZWZ0ID0gX3JlZiRsZWZ0ID09PSB2b2lkIDAgPyAwIDogX3JlZiRsZWZ0LFxuICAgIF9yZWYkd2lkdGggPSBfcmVmLndpZHRoLFxuICAgIHdpZHRoID0gX3JlZiR3aWR0aCA9PT0gdm9pZCAwID8gMCA6IF9yZWYkd2lkdGgsXG4gICAgX3JlZiRoZWlnaHQgPSBfcmVmLmhlaWdodCxcbiAgICBoZWlnaHQgPSBfcmVmJGhlaWdodCA9PT0gdm9pZCAwID8gMCA6IF9yZWYkaGVpZ2h0LFxuICAgIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgX2V4Y2x1ZGVkKTtcbiAgdmFyIHByb3BzID0gX29iamVjdFNwcmVhZCh7XG4gICAgeDogeCxcbiAgICB5OiB5LFxuICAgIHRvcDogdG9wLFxuICAgIGxlZnQ6IGxlZnQsXG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0XG4gIH0sIHJlc3QpO1xuICBpZiAoIWlzTnVtYmVyKHgpIHx8ICFpc051bWJlcih5KSB8fCAhaXNOdW1iZXIod2lkdGgpIHx8ICFpc051bWJlcihoZWlnaHQpIHx8ICFpc051bWJlcih0b3ApIHx8ICFpc051bWJlcihsZWZ0KSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInBhdGhcIiwgX2V4dGVuZHMoe30sIGZpbHRlclByb3BzKHByb3BzLCB0cnVlKSwge1xuICAgIGNsYXNzTmFtZTogY2xzeCgncmVjaGFydHMtY3Jvc3MnLCBjbGFzc05hbWUpLFxuICAgIGQ6IGdldFBhdGgoeCwgeSwgd2lkdGgsIGhlaWdodCwgdG9wLCBsZWZ0KVxuICB9KSk7XG59OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwicHJvdG90eXBlIiwiX2V4Y2x1ZGVkIiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5Iiwib3duS2V5cyIsImUiLCJyIiwidCIsImtleXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsIl9vYmplY3RTcHJlYWQiLCJmb3JFYWNoIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsIm9iaiIsInZhbHVlIiwiX3RvUHJvcGVydHlLZXkiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIl90b1ByaW1pdGl2ZSIsInRvUHJpbWl0aXZlIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwiZXhjbHVkZWQiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsInNvdXJjZVN5bWJvbEtleXMiLCJpbmRleE9mIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJSZWFjdCIsImNsc3giLCJpc051bWJlciIsImZpbHRlclByb3BzIiwiZ2V0UGF0aCIsIngiLCJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJ0b3AiLCJsZWZ0IiwiY29uY2F0IiwiQ3Jvc3MiLCJfcmVmIiwiX3JlZiR4IiwiX3JlZiR5IiwiX3JlZiR0b3AiLCJfcmVmJGxlZnQiLCJfcmVmJHdpZHRoIiwiX3JlZiRoZWlnaHQiLCJjbGFzc05hbWUiLCJyZXN0IiwicHJvcHMiLCJjcmVhdGVFbGVtZW50IiwiZCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Cross.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Curve.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Curve.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Curve: () => (/* binding */ Curve),\n/* harmony export */   getPath: () => (/* binding */ getPath)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! victory-vendor/d3-shape */ \"(ssr)/./node_modules/.pnpm/victory-vendor@36.9.2/node_modules/victory-vendor/es/d3-shape.js\");\n/* harmony import */ var lodash_upperFirst__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/upperFirst */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/upperFirst.js\");\n/* harmony import */ var lodash_upperFirst__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Curve\n */ \n\n\n\n\n\n\n\nvar CURVE_FACTORIES = {\n    curveBasisClosed: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveBasisClosed,\n    curveBasisOpen: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveBasisOpen,\n    curveBasis: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveBasis,\n    curveBumpX: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveBumpX,\n    curveBumpY: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveBumpY,\n    curveLinearClosed: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveLinearClosed,\n    curveLinear: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveLinear,\n    curveMonotoneX: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveMonotoneX,\n    curveMonotoneY: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveMonotoneY,\n    curveNatural: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveNatural,\n    curveStep: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveStep,\n    curveStepAfter: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveStepAfter,\n    curveStepBefore: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveStepBefore\n};\nvar defined = function defined(p) {\n    return p.x === +p.x && p.y === +p.y;\n};\nvar getX = function getX(p) {\n    return p.x;\n};\nvar getY = function getY(p) {\n    return p.y;\n};\nvar getCurveFactory = function getCurveFactory(type, layout) {\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default()(type)) {\n        return type;\n    }\n    var name = \"curve\".concat(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_2___default()(type));\n    if ((name === 'curveMonotone' || name === 'curveBump') && layout) {\n        return CURVE_FACTORIES[\"\".concat(name).concat(layout === 'vertical' ? 'Y' : 'X')];\n    }\n    return CURVE_FACTORIES[name] || victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.curveLinear;\n};\n/**\n * Calculate the path of curve. Returns null if points is an empty array.\n * @return path or null\n */ var getPath = function getPath(_ref) {\n    var _ref$type = _ref.type, type = _ref$type === void 0 ? 'linear' : _ref$type, _ref$points = _ref.points, points = _ref$points === void 0 ? [] : _ref$points, baseLine = _ref.baseLine, layout = _ref.layout, _ref$connectNulls = _ref.connectNulls, connectNulls = _ref$connectNulls === void 0 ? false : _ref$connectNulls;\n    var curveFactory = getCurveFactory(type, layout);\n    var formatPoints = connectNulls ? points.filter(function(entry) {\n        return defined(entry);\n    }) : points;\n    var lineFunction;\n    if (Array.isArray(baseLine)) {\n        var formatBaseLine = connectNulls ? baseLine.filter(function(base) {\n            return defined(base);\n        }) : baseLine;\n        var areaPoints = formatPoints.map(function(entry, index) {\n            return _objectSpread(_objectSpread({}, entry), {}, {\n                base: formatBaseLine[index]\n            });\n        });\n        if (layout === 'vertical') {\n            lineFunction = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.area)().y(getY).x1(getX).x0(function(d) {\n                return d.base.x;\n            });\n        } else {\n            lineFunction = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.area)().x(getX).y1(getY).y0(function(d) {\n                return d.base.y;\n            });\n        }\n        lineFunction.defined(defined).curve(curveFactory);\n        return lineFunction(areaPoints);\n    }\n    if (layout === 'vertical' && (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(baseLine)) {\n        lineFunction = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.area)().y(getY).x1(getX).x0(baseLine);\n    } else if ((0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(baseLine)) {\n        lineFunction = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.area)().x(getX).y1(getY).y0(baseLine);\n    } else {\n        lineFunction = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.line)().x(getX).y(getY);\n    }\n    lineFunction.defined(defined).curve(curveFactory);\n    return lineFunction(formatPoints);\n};\nvar Curve = function Curve(props) {\n    var className = props.className, points = props.points, path = props.path, pathRef = props.pathRef;\n    if ((!points || !points.length) && !path) {\n        return null;\n    }\n    var realPath = points && points.length ? getPath(props) : path;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_6__.filterProps)(props, false), (0,_util_types__WEBPACK_IMPORTED_MODULE_7__.adaptEventHandlers)(props), {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('recharts-curve', className),\n        d: realPath,\n        ref: pathRef\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Curve.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Dot.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Dot.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dot: () => (/* binding */ Dot)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n/**\n * @fileOverview Dot\n */ \n\n\n\nvar Dot = function Dot(props) {\n    var cx = props.cx, cy = props.cy, r = props.r, className = props.className;\n    var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-dot', className);\n    if (cx === +cx && cy === +cy && r === +r) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(props, false), (0,_util_types__WEBPACK_IMPORTED_MODULE_3__.adaptEventHandlers)(props), {\n            className: layerClass,\n            cx: cx,\n            cy: cy,\n            r: r\n        }));\n    }\n    return null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9zaGFwZS9Eb3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsU0FBU0E7SUFBYUEsV0FBV0MsT0FBT0MsTUFBTSxHQUFHRCxPQUFPQyxNQUFNLENBQUNDLElBQUksS0FBSyxTQUFVQyxNQUFNO1FBQUksSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlDLFVBQVVDLE1BQU0sRUFBRUYsSUFBSztZQUFFLElBQUlHLFNBQVNGLFNBQVMsQ0FBQ0QsRUFBRTtZQUFFLElBQUssSUFBSUksT0FBT0QsT0FBUTtnQkFBRSxJQUFJUCxPQUFPUyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixRQUFRQyxNQUFNO29CQUFFTCxNQUFNLENBQUNLLElBQUksR0FBR0QsTUFBTSxDQUFDQyxJQUFJO2dCQUFFO1lBQUU7UUFBRTtRQUFFLE9BQU9MO0lBQVE7SUFBRyxPQUFPSixTQUFTYSxLQUFLLENBQUMsSUFBSSxFQUFFUDtBQUFZO0FBQ2xWOztDQUVDLEdBQzhCO0FBQ1A7QUFDMkI7QUFDRjtBQUMxQyxJQUFJWSxNQUFNLFNBQVNBLElBQUlDLEtBQUs7SUFDakMsSUFBSUMsS0FBS0QsTUFBTUMsRUFBRSxFQUNmQyxLQUFLRixNQUFNRSxFQUFFLEVBQ2JDLElBQUlILE1BQU1HLENBQUMsRUFDWEMsWUFBWUosTUFBTUksU0FBUztJQUM3QixJQUFJQyxhQUFhVCxnREFBSUEsQ0FBQyxnQkFBZ0JRO0lBQ3RDLElBQUlILE9BQU8sQ0FBQ0EsTUFBTUMsT0FBTyxDQUFDQSxNQUFNQyxNQUFNLENBQUNBLEdBQUc7UUFDeEMsT0FBTyxXQUFXLEdBQUVSLGdEQUFtQixDQUFDLFVBQVVkLFNBQVMsQ0FBQyxHQUFHaUIsNkRBQVdBLENBQUNFLE9BQU8sUUFBUUgsK0RBQWtCQSxDQUFDRyxRQUFRO1lBQ25ISSxXQUFXQztZQUNYSixJQUFJQTtZQUNKQyxJQUFJQTtZQUNKQyxHQUFHQTtRQUNMO0lBQ0Y7SUFDQSxPQUFPO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi9zaGFwZS9Eb3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG4vKipcbiAqIEBmaWxlT3ZlcnZpZXcgRG90XG4gKi9cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbHN4IGZyb20gJ2Nsc3gnO1xuaW1wb3J0IHsgYWRhcHRFdmVudEhhbmRsZXJzIH0gZnJvbSAnLi4vdXRpbC90eXBlcyc7XG5pbXBvcnQgeyBmaWx0ZXJQcm9wcyB9IGZyb20gJy4uL3V0aWwvUmVhY3RVdGlscyc7XG5leHBvcnQgdmFyIERvdCA9IGZ1bmN0aW9uIERvdChwcm9wcykge1xuICB2YXIgY3ggPSBwcm9wcy5jeCxcbiAgICBjeSA9IHByb3BzLmN5LFxuICAgIHIgPSBwcm9wcy5yLFxuICAgIGNsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZTtcbiAgdmFyIGxheWVyQ2xhc3MgPSBjbHN4KCdyZWNoYXJ0cy1kb3QnLCBjbGFzc05hbWUpO1xuICBpZiAoY3ggPT09ICtjeCAmJiBjeSA9PT0gK2N5ICYmIHIgPT09ICtyKSB7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiY2lyY2xlXCIsIF9leHRlbmRzKHt9LCBmaWx0ZXJQcm9wcyhwcm9wcywgZmFsc2UpLCBhZGFwdEV2ZW50SGFuZGxlcnMocHJvcHMpLCB7XG4gICAgICBjbGFzc05hbWU6IGxheWVyQ2xhc3MsXG4gICAgICBjeDogY3gsXG4gICAgICBjeTogY3ksXG4gICAgICByOiByXG4gICAgfSkpO1xuICB9XG4gIHJldHVybiBudWxsO1xufTsiXSwibmFtZXMiOlsiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiUmVhY3QiLCJjbHN4IiwiYWRhcHRFdmVudEhhbmRsZXJzIiwiZmlsdGVyUHJvcHMiLCJEb3QiLCJwcm9wcyIsImN4IiwiY3kiLCJyIiwiY2xhc3NOYW1lIiwibGF5ZXJDbGFzcyIsImNyZWF0ZUVsZW1lbnQiXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Dot.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Rectangle: () => (/* binding */ Rectangle),\n/* harmony export */   isInRectangle: () => (/* binding */ isInRectangle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var react_smooth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-smooth */ \"(ssr)/./node_modules/.pnpm/react-smooth@4.0.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-smooth/es6/index.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Rectangle\n */ \n\n\n\nvar getRectanglePath = function getRectanglePath(x, y, width, height, radius) {\n    var maxRadius = Math.min(Math.abs(width) / 2, Math.abs(height) / 2);\n    var ySign = height >= 0 ? 1 : -1;\n    var xSign = width >= 0 ? 1 : -1;\n    var clockWise = height >= 0 && width >= 0 || height < 0 && width < 0 ? 1 : 0;\n    var path;\n    if (maxRadius > 0 && radius instanceof Array) {\n        var newRadius = [\n            0,\n            0,\n            0,\n            0\n        ];\n        for(var i = 0, len = 4; i < len; i++){\n            newRadius[i] = radius[i] > maxRadius ? maxRadius : radius[i];\n        }\n        path = \"M\".concat(x, \",\").concat(y + ySign * newRadius[0]);\n        if (newRadius[0] > 0) {\n            path += \"A \".concat(newRadius[0], \",\").concat(newRadius[0], \",0,0,\").concat(clockWise, \",\").concat(x + xSign * newRadius[0], \",\").concat(y);\n        }\n        path += \"L \".concat(x + width - xSign * newRadius[1], \",\").concat(y);\n        if (newRadius[1] > 0) {\n            path += \"A \".concat(newRadius[1], \",\").concat(newRadius[1], \",0,0,\").concat(clockWise, \",\\n        \").concat(x + width, \",\").concat(y + ySign * newRadius[1]);\n        }\n        path += \"L \".concat(x + width, \",\").concat(y + height - ySign * newRadius[2]);\n        if (newRadius[2] > 0) {\n            path += \"A \".concat(newRadius[2], \",\").concat(newRadius[2], \",0,0,\").concat(clockWise, \",\\n        \").concat(x + width - xSign * newRadius[2], \",\").concat(y + height);\n        }\n        path += \"L \".concat(x + xSign * newRadius[3], \",\").concat(y + height);\n        if (newRadius[3] > 0) {\n            path += \"A \".concat(newRadius[3], \",\").concat(newRadius[3], \",0,0,\").concat(clockWise, \",\\n        \").concat(x, \",\").concat(y + height - ySign * newRadius[3]);\n        }\n        path += 'Z';\n    } else if (maxRadius > 0 && radius === +radius && radius > 0) {\n        var _newRadius = Math.min(maxRadius, radius);\n        path = \"M \".concat(x, \",\").concat(y + ySign * _newRadius, \"\\n            A \").concat(_newRadius, \",\").concat(_newRadius, \",0,0,\").concat(clockWise, \",\").concat(x + xSign * _newRadius, \",\").concat(y, \"\\n            L \").concat(x + width - xSign * _newRadius, \",\").concat(y, \"\\n            A \").concat(_newRadius, \",\").concat(_newRadius, \",0,0,\").concat(clockWise, \",\").concat(x + width, \",\").concat(y + ySign * _newRadius, \"\\n            L \").concat(x + width, \",\").concat(y + height - ySign * _newRadius, \"\\n            A \").concat(_newRadius, \",\").concat(_newRadius, \",0,0,\").concat(clockWise, \",\").concat(x + width - xSign * _newRadius, \",\").concat(y + height, \"\\n            L \").concat(x + xSign * _newRadius, \",\").concat(y + height, \"\\n            A \").concat(_newRadius, \",\").concat(_newRadius, \",0,0,\").concat(clockWise, \",\").concat(x, \",\").concat(y + height - ySign * _newRadius, \" Z\");\n    } else {\n        path = \"M \".concat(x, \",\").concat(y, \" h \").concat(width, \" v \").concat(height, \" h \").concat(-width, \" Z\");\n    }\n    return path;\n};\nvar isInRectangle = function isInRectangle(point, rect) {\n    if (!point || !rect) {\n        return false;\n    }\n    var px = point.x, py = point.y;\n    var x = rect.x, y = rect.y, width = rect.width, height = rect.height;\n    if (Math.abs(width) > 0 && Math.abs(height) > 0) {\n        var minX = Math.min(x, x + width);\n        var maxX = Math.max(x, x + width);\n        var minY = Math.min(y, y + height);\n        var maxY = Math.max(y, y + height);\n        return px >= minX && px <= maxX && py >= minY && py <= maxY;\n    }\n    return false;\n};\nvar defaultProps = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    // The radius of border\n    // The radius of four corners when radius is a number\n    // The radius of left-top, right-top, right-bottom, left-bottom when radius is an array\n    radius: 0,\n    isAnimationActive: false,\n    isUpdateAnimationActive: false,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease'\n};\nvar Rectangle = function Rectangle(rectangleProps) {\n    var props = _objectSpread(_objectSpread({}, defaultProps), rectangleProps);\n    var pathRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1), _useState2 = _slicedToArray(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"Rectangle.useEffect\": function() {\n            if (pathRef.current && pathRef.current.getTotalLength) {\n                try {\n                    var pathTotalLength = pathRef.current.getTotalLength();\n                    if (pathTotalLength) {\n                        setTotalLength(pathTotalLength);\n                    }\n                } catch (err) {\n                // calculate total length error\n                }\n            }\n        }\n    }[\"Rectangle.useEffect\"], []);\n    var x = props.x, y = props.y, width = props.width, height = props.height, radius = props.radius, className = props.className;\n    var animationEasing = props.animationEasing, animationDuration = props.animationDuration, animationBegin = props.animationBegin, isAnimationActive = props.isAnimationActive, isUpdateAnimationActive = props.isUpdateAnimationActive;\n    if (x !== +x || y !== +y || width !== +width || height !== +height || width === 0 || height === 0) {\n        return null;\n    }\n    var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-rectangle', className);\n    if (!isUpdateAnimationActive) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(props, true), {\n            className: layerClass,\n            d: getRectanglePath(x, y, width, height, radius)\n        }));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_smooth__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        canBegin: totalLength > 0,\n        from: {\n            width: width,\n            height: height,\n            x: x,\n            y: y\n        },\n        to: {\n            width: width,\n            height: height,\n            x: x,\n            y: y\n        },\n        duration: animationDuration,\n        animationEasing: animationEasing,\n        isActive: isUpdateAnimationActive\n    }, function(_ref) {\n        var currWidth = _ref.width, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_smooth__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            canBegin: totalLength > 0,\n            from: \"0px \".concat(totalLength === -1 ? 1 : totalLength, \"px\"),\n            to: \"\".concat(totalLength, \"px 0px\"),\n            attributeName: \"strokeDasharray\",\n            begin: animationBegin,\n            duration: animationDuration,\n            isActive: isAnimationActive,\n            easing: animationEasing\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(props, true), {\n            className: layerClass,\n            d: getRectanglePath(currX, currY, currWidth, currHeight, radius),\n            ref: pathRef\n        })));\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Sector.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Sector.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sector: () => (/* binding */ Sector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/PolarUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js\");\n/* harmony import */ var _util_DataUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Sector\n */ \n\n\n\n\nvar getDeltaAngle = function getDeltaAngle(startAngle, endAngle) {\n    var sign = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.mathSign)(endAngle - startAngle);\n    var deltaAngle = Math.min(Math.abs(endAngle - startAngle), 359.999);\n    return sign * deltaAngle;\n};\nvar getTangentCircle = function getTangentCircle(_ref) {\n    var cx = _ref.cx, cy = _ref.cy, radius = _ref.radius, angle = _ref.angle, sign = _ref.sign, isExternal = _ref.isExternal, cornerRadius = _ref.cornerRadius, cornerIsExternal = _ref.cornerIsExternal;\n    var centerRadius = cornerRadius * (isExternal ? 1 : -1) + radius;\n    var theta = Math.asin(cornerRadius / centerRadius) / _util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.RADIAN;\n    var centerAngle = cornerIsExternal ? angle : angle + sign * theta;\n    var center = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, centerRadius, centerAngle);\n    // The coordinate of point which is tangent to the circle\n    var circleTangency = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, radius, centerAngle);\n    // The coordinate of point which is tangent to the radius line\n    var lineTangencyAngle = cornerIsExternal ? angle - sign * theta : angle;\n    var lineTangency = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, centerRadius * Math.cos(theta * _util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.RADIAN), lineTangencyAngle);\n    return {\n        center: center,\n        circleTangency: circleTangency,\n        lineTangency: lineTangency,\n        theta: theta\n    };\n};\nvar getSectorPath = function getSectorPath(_ref2) {\n    var cx = _ref2.cx, cy = _ref2.cy, innerRadius = _ref2.innerRadius, outerRadius = _ref2.outerRadius, startAngle = _ref2.startAngle, endAngle = _ref2.endAngle;\n    var angle = getDeltaAngle(startAngle, endAngle);\n    // When the angle of sector equals to 360, star point and end point coincide\n    var tempEndAngle = startAngle + angle;\n    var outerStartPoint = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, outerRadius, startAngle);\n    var outerEndPoint = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, outerRadius, tempEndAngle);\n    var path = \"M \".concat(outerStartPoint.x, \",\").concat(outerStartPoint.y, \"\\n    A \").concat(outerRadius, \",\").concat(outerRadius, \",0,\\n    \").concat(+(Math.abs(angle) > 180), \",\").concat(+(startAngle > tempEndAngle), \",\\n    \").concat(outerEndPoint.x, \",\").concat(outerEndPoint.y, \"\\n  \");\n    if (innerRadius > 0) {\n        var innerStartPoint = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, innerRadius, startAngle);\n        var innerEndPoint = (0,_util_PolarUtils__WEBPACK_IMPORTED_MODULE_3__.polarToCartesian)(cx, cy, innerRadius, tempEndAngle);\n        path += \"L \".concat(innerEndPoint.x, \",\").concat(innerEndPoint.y, \"\\n            A \").concat(innerRadius, \",\").concat(innerRadius, \",0,\\n            \").concat(+(Math.abs(angle) > 180), \",\").concat(+(startAngle <= tempEndAngle), \",\\n            \").concat(innerStartPoint.x, \",\").concat(innerStartPoint.y, \" Z\");\n    } else {\n        path += \"L \".concat(cx, \",\").concat(cy, \" Z\");\n    }\n    return path;\n};\nvar getSectorWithCorner = function getSectorWithCorner(_ref3) {\n    var cx = _ref3.cx, cy = _ref3.cy, innerRadius = _ref3.innerRadius, outerRadius = _ref3.outerRadius, cornerRadius = _ref3.cornerRadius, forceCornerRadius = _ref3.forceCornerRadius, cornerIsExternal = _ref3.cornerIsExternal, startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;\n    var sign = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.mathSign)(endAngle - startAngle);\n    var _getTangentCircle = getTangentCircle({\n        cx: cx,\n        cy: cy,\n        radius: outerRadius,\n        angle: startAngle,\n        sign: sign,\n        cornerRadius: cornerRadius,\n        cornerIsExternal: cornerIsExternal\n    }), soct = _getTangentCircle.circleTangency, solt = _getTangentCircle.lineTangency, sot = _getTangentCircle.theta;\n    var _getTangentCircle2 = getTangentCircle({\n        cx: cx,\n        cy: cy,\n        radius: outerRadius,\n        angle: endAngle,\n        sign: -sign,\n        cornerRadius: cornerRadius,\n        cornerIsExternal: cornerIsExternal\n    }), eoct = _getTangentCircle2.circleTangency, eolt = _getTangentCircle2.lineTangency, eot = _getTangentCircle2.theta;\n    var outerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sot - eot;\n    if (outerArcAngle < 0) {\n        if (forceCornerRadius) {\n            return \"M \".concat(solt.x, \",\").concat(solt.y, \"\\n        a\").concat(cornerRadius, \",\").concat(cornerRadius, \",0,0,1,\").concat(cornerRadius * 2, \",0\\n        a\").concat(cornerRadius, \",\").concat(cornerRadius, \",0,0,1,\").concat(-cornerRadius * 2, \",0\\n      \");\n        }\n        return getSectorPath({\n            cx: cx,\n            cy: cy,\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n    }\n    var path = \"M \".concat(solt.x, \",\").concat(solt.y, \"\\n    A\").concat(cornerRadius, \",\").concat(cornerRadius, \",0,0,\").concat(+(sign < 0), \",\").concat(soct.x, \",\").concat(soct.y, \"\\n    A\").concat(outerRadius, \",\").concat(outerRadius, \",0,\").concat(+(outerArcAngle > 180), \",\").concat(+(sign < 0), \",\").concat(eoct.x, \",\").concat(eoct.y, \"\\n    A\").concat(cornerRadius, \",\").concat(cornerRadius, \",0,0,\").concat(+(sign < 0), \",\").concat(eolt.x, \",\").concat(eolt.y, \"\\n  \");\n    if (innerRadius > 0) {\n        var _getTangentCircle3 = getTangentCircle({\n            cx: cx,\n            cy: cy,\n            radius: innerRadius,\n            angle: startAngle,\n            sign: sign,\n            isExternal: true,\n            cornerRadius: cornerRadius,\n            cornerIsExternal: cornerIsExternal\n        }), sict = _getTangentCircle3.circleTangency, silt = _getTangentCircle3.lineTangency, sit = _getTangentCircle3.theta;\n        var _getTangentCircle4 = getTangentCircle({\n            cx: cx,\n            cy: cy,\n            radius: innerRadius,\n            angle: endAngle,\n            sign: -sign,\n            isExternal: true,\n            cornerRadius: cornerRadius,\n            cornerIsExternal: cornerIsExternal\n        }), eict = _getTangentCircle4.circleTangency, eilt = _getTangentCircle4.lineTangency, eit = _getTangentCircle4.theta;\n        var innerArcAngle = cornerIsExternal ? Math.abs(startAngle - endAngle) : Math.abs(startAngle - endAngle) - sit - eit;\n        if (innerArcAngle < 0 && cornerRadius === 0) {\n            return \"\".concat(path, \"L\").concat(cx, \",\").concat(cy, \"Z\");\n        }\n        path += \"L\".concat(eilt.x, \",\").concat(eilt.y, \"\\n      A\").concat(cornerRadius, \",\").concat(cornerRadius, \",0,0,\").concat(+(sign < 0), \",\").concat(eict.x, \",\").concat(eict.y, \"\\n      A\").concat(innerRadius, \",\").concat(innerRadius, \",0,\").concat(+(innerArcAngle > 180), \",\").concat(+(sign > 0), \",\").concat(sict.x, \",\").concat(sict.y, \"\\n      A\").concat(cornerRadius, \",\").concat(cornerRadius, \",0,0,\").concat(+(sign < 0), \",\").concat(silt.x, \",\").concat(silt.y, \"Z\");\n    } else {\n        path += \"L\".concat(cx, \",\").concat(cy, \"Z\");\n    }\n    return path;\n};\nvar defaultProps = {\n    cx: 0,\n    cy: 0,\n    innerRadius: 0,\n    outerRadius: 0,\n    startAngle: 0,\n    endAngle: 0,\n    cornerRadius: 0,\n    forceCornerRadius: false,\n    cornerIsExternal: false\n};\nvar Sector = function Sector(sectorProps) {\n    var props = _objectSpread(_objectSpread({}, defaultProps), sectorProps);\n    var cx = props.cx, cy = props.cy, innerRadius = props.innerRadius, outerRadius = props.outerRadius, cornerRadius = props.cornerRadius, forceCornerRadius = props.forceCornerRadius, cornerIsExternal = props.cornerIsExternal, startAngle = props.startAngle, endAngle = props.endAngle, className = props.className;\n    if (outerRadius < innerRadius || startAngle === endAngle) {\n        return null;\n    }\n    var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-sector', className);\n    var deltaRadius = outerRadius - innerRadius;\n    var cr = (0,_util_DataUtils__WEBPACK_IMPORTED_MODULE_2__.getPercentValue)(cornerRadius, deltaRadius, 0, true);\n    var path;\n    if (cr > 0 && Math.abs(startAngle - endAngle) < 360) {\n        path = getSectorWithCorner({\n            cx: cx,\n            cy: cy,\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            cornerRadius: Math.min(cr, deltaRadius / 2),\n            forceCornerRadius: forceCornerRadius,\n            cornerIsExternal: cornerIsExternal,\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n    } else {\n        path = getSectorPath({\n            cx: cx,\n            cy: cy,\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, true), {\n        className: layerClass,\n        d: path,\n        role: \"img\"\n    }));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Sector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Symbols.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Symbols.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Symbols: () => (/* binding */ Symbols)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_upperFirst__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/upperFirst */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/upperFirst.js\");\n/* harmony import */ var lodash_upperFirst__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! victory-vendor/d3-shape */ \"(ssr)/./node_modules/.pnpm/victory-vendor@36.9.2/node_modules/victory-vendor/es/d3-shape.js\");\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nvar _excluded = [\n    \"type\",\n    \"size\",\n    \"sizeType\"\n];\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n/**\n * @fileOverview Curve\n */ \n\n\n\n\nvar symbolFactories = {\n    symbolCircle: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolCircle,\n    symbolCross: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolCross,\n    symbolDiamond: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolDiamond,\n    symbolSquare: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolSquare,\n    symbolStar: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolStar,\n    symbolTriangle: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolTriangle,\n    symbolWye: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolWye\n};\nvar RADIAN = Math.PI / 180;\nvar getSymbolFactory = function getSymbolFactory(type) {\n    var name = \"symbol\".concat(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_1___default()(type));\n    return symbolFactories[name] || victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbolCircle;\n};\nvar calculateAreaSize = function calculateAreaSize(size, sizeType, type) {\n    if (sizeType === 'area') {\n        return size;\n    }\n    switch(type){\n        case 'cross':\n            return 5 * size * size / 9;\n        case 'diamond':\n            return 0.5 * size * size / Math.sqrt(3);\n        case 'square':\n            return size * size;\n        case 'star':\n            {\n                var angle = 18 * RADIAN;\n                return 1.25 * size * size * (Math.tan(angle) - Math.tan(angle * 2) * Math.pow(Math.tan(angle), 2));\n            }\n        case 'triangle':\n            return Math.sqrt(3) * size * size / 4;\n        case 'wye':\n            return (21 - 10 * Math.sqrt(3)) * size * size / 8;\n        default:\n            return Math.PI * size * size / 4;\n    }\n};\nvar registerSymbol = function registerSymbol(key, factory) {\n    symbolFactories[\"symbol\".concat(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_1___default()(key))] = factory;\n};\nvar Symbols = function Symbols(_ref) {\n    var _ref$type = _ref.type, type = _ref$type === void 0 ? 'circle' : _ref$type, _ref$size = _ref.size, size = _ref$size === void 0 ? 64 : _ref$size, _ref$sizeType = _ref.sizeType, sizeType = _ref$sizeType === void 0 ? 'area' : _ref$sizeType, rest = _objectWithoutProperties(_ref, _excluded);\n    var props = _objectSpread(_objectSpread({}, rest), {}, {\n        type: type,\n        size: size,\n        sizeType: sizeType\n    });\n    /**\n   * Calculate the path of curve\n   * @return {String} path\n   */ var getPath = function getPath() {\n        var symbolFactory = getSymbolFactory(type);\n        var symbol = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_2__.symbol)().type(symbolFactory).size(calculateAreaSize(size, sizeType, type));\n        return symbol();\n    };\n    var className = props.className, cx = props.cx, cy = props.cy;\n    var filteredProps = (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_4__.filterProps)(props, true);\n    if (cx === +cx && cy === +cy && size === +size) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, filteredProps, {\n            className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"])('recharts-symbols', className),\n            transform: \"translate(\".concat(cx, \", \").concat(cy, \")\"),\n            d: getPath()\n        }));\n    }\n    return null;\n};\nSymbols.registerSymbol = registerSymbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Symbols.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Trapezoid.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Trapezoid.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Trapezoid: () => (/* binding */ Trapezoid)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var react_smooth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-smooth */ \"(ssr)/./node_modules/.pnpm/react-smooth@4.0.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/react-smooth/es6/index.js\");\n/* harmony import */ var _util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n/**\n * @fileOverview Rectangle\n */ \n\n\n\nvar getTrapezoidPath = function getTrapezoidPath(x, y, upperWidth, lowerWidth, height) {\n    var widthGap = upperWidth - lowerWidth;\n    var path;\n    path = \"M \".concat(x, \",\").concat(y);\n    path += \"L \".concat(x + upperWidth, \",\").concat(y);\n    path += \"L \".concat(x + upperWidth - widthGap / 2, \",\").concat(y + height);\n    path += \"L \".concat(x + upperWidth - widthGap / 2 - lowerWidth, \",\").concat(y + height);\n    path += \"L \".concat(x, \",\").concat(y, \" Z\");\n    return path;\n};\nvar defaultProps = {\n    x: 0,\n    y: 0,\n    upperWidth: 0,\n    lowerWidth: 0,\n    height: 0,\n    isUpdateAnimationActive: false,\n    animationBegin: 0,\n    animationDuration: 1500,\n    animationEasing: 'ease'\n};\nvar Trapezoid = function Trapezoid(props) {\n    var trapezoidProps = _objectSpread(_objectSpread({}, defaultProps), props);\n    var pathRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1), _useState2 = _slicedToArray(_useState, 2), totalLength = _useState2[0], setTotalLength = _useState2[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"Trapezoid.useEffect\": function() {\n            if (pathRef.current && pathRef.current.getTotalLength) {\n                try {\n                    var pathTotalLength = pathRef.current.getTotalLength();\n                    if (pathTotalLength) {\n                        setTotalLength(pathTotalLength);\n                    }\n                } catch (err) {\n                // calculate total length error\n                }\n            }\n        }\n    }[\"Trapezoid.useEffect\"], []);\n    var x = trapezoidProps.x, y = trapezoidProps.y, upperWidth = trapezoidProps.upperWidth, lowerWidth = trapezoidProps.lowerWidth, height = trapezoidProps.height, className = trapezoidProps.className;\n    var animationEasing = trapezoidProps.animationEasing, animationDuration = trapezoidProps.animationDuration, animationBegin = trapezoidProps.animationBegin, isUpdateAnimationActive = trapezoidProps.isUpdateAnimationActive;\n    if (x !== +x || y !== +y || upperWidth !== +upperWidth || lowerWidth !== +lowerWidth || height !== +height || upperWidth === 0 && lowerWidth === 0 || height === 0) {\n        return null;\n    }\n    var layerClass = (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('recharts-trapezoid', className);\n    if (!isUpdateAnimationActive) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"g\", null, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(trapezoidProps, true), {\n            className: layerClass,\n            d: getTrapezoidPath(x, y, upperWidth, lowerWidth, height)\n        })));\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_smooth__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        canBegin: totalLength > 0,\n        from: {\n            upperWidth: 0,\n            lowerWidth: 0,\n            height: height,\n            x: x,\n            y: y\n        },\n        to: {\n            upperWidth: upperWidth,\n            lowerWidth: lowerWidth,\n            height: height,\n            x: x,\n            y: y\n        },\n        duration: animationDuration,\n        animationEasing: animationEasing,\n        isActive: isUpdateAnimationActive\n    }, function(_ref) {\n        var currUpperWidth = _ref.upperWidth, currLowerWidth = _ref.lowerWidth, currHeight = _ref.height, currX = _ref.x, currY = _ref.y;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_smooth__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            canBegin: totalLength > 0,\n            from: \"0px \".concat(totalLength === -1 ? 1 : totalLength, \"px\"),\n            to: \"\".concat(totalLength, \"px 0px\"),\n            attributeName: \"strokeDasharray\",\n            begin: animationBegin,\n            duration: animationDuration,\n            easing: animationEasing\n        }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", _extends({}, (0,_util_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.filterProps)(trapezoidProps, true), {\n            className: layerClass,\n            d: getTrapezoidPath(currX, currY, currUpperWidth, currLowerWidth, currHeight),\n            ref: pathRef\n        })));\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Trapezoid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ActiveShapeUtils.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ActiveShapeUtils.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Shape: () => (/* binding */ Shape),\n/* harmony export */   compareFunnel: () => (/* binding */ compareFunnel),\n/* harmony export */   comparePie: () => (/* binding */ comparePie),\n/* harmony export */   compareScatter: () => (/* binding */ compareScatter),\n/* harmony export */   getActiveShapeIndexForTooltip: () => (/* binding */ getActiveShapeIndexForTooltip),\n/* harmony export */   getPropsFromShapeOption: () => (/* binding */ getPropsFromShapeOption),\n/* harmony export */   isFunnel: () => (/* binding */ isFunnel),\n/* harmony export */   isPie: () => (/* binding */ isPie),\n/* harmony export */   isScatter: () => (/* binding */ isScatter)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isPlainObject */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isPlainObject.js\");\n/* harmony import */ var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isBoolean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isBoolean */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isBoolean.js\");\n/* harmony import */ var lodash_isBoolean__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isBoolean__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/isEqual */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _shape_Rectangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../shape/Rectangle */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Rectangle.js\");\n/* harmony import */ var _shape_Trapezoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../shape/Trapezoid */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Trapezoid.js\");\n/* harmony import */ var _shape_Sector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../shape/Sector */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Sector.js\");\n/* harmony import */ var _container_Layer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../container/Layer */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/container/Layer.js\");\n/* harmony import */ var _shape_Symbols__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../shape/Symbols */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/shape/Symbols.js\");\nvar _excluded = [\n    \"option\",\n    \"shapeType\",\n    \"propTransformer\",\n    \"activeClassName\",\n    \"isActive\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n\n\n\n\n/**\n * This is an abstraction for rendering a user defined prop for a customized shape in several forms.\n *\n * <Shape /> is the root and will handle taking in:\n *  - an object of svg properties\n *  - a boolean\n *  - a render prop(inline function that returns jsx)\n *  - a react element\n *\n * <ShapeSelector /> is a subcomponent of <Shape /> and used to match a component\n * to the value of props.shapeType that is passed to the root.\n *\n */ function defaultPropTransformer(option, props) {\n    return _objectSpread(_objectSpread({}, props), option);\n}\nfunction isSymbolsProps(shapeType, _elementProps) {\n    return shapeType === 'symbols';\n}\nfunction ShapeSelector(_ref) {\n    var shapeType = _ref.shapeType, elementProps = _ref.elementProps;\n    switch(shapeType){\n        case 'rectangle':\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Rectangle__WEBPACK_IMPORTED_MODULE_5__.Rectangle, elementProps);\n        case 'trapezoid':\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Trapezoid__WEBPACK_IMPORTED_MODULE_6__.Trapezoid, elementProps);\n        case 'sector':\n            return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Sector__WEBPACK_IMPORTED_MODULE_7__.Sector, elementProps);\n        case 'symbols':\n            if (isSymbolsProps(shapeType, elementProps)) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shape_Symbols__WEBPACK_IMPORTED_MODULE_8__.Symbols, elementProps);\n            }\n            break;\n        default:\n            return null;\n    }\n}\nfunction getPropsFromShapeOption(option) {\n    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(option)) {\n        return option.props;\n    }\n    return option;\n}\nfunction Shape(_ref2) {\n    var option = _ref2.option, shapeType = _ref2.shapeType, _ref2$propTransformer = _ref2.propTransformer, propTransformer = _ref2$propTransformer === void 0 ? defaultPropTransformer : _ref2$propTransformer, _ref2$activeClassName = _ref2.activeClassName, activeClassName = _ref2$activeClassName === void 0 ? 'recharts-active-shape' : _ref2$activeClassName, isActive = _ref2.isActive, props = _objectWithoutProperties(_ref2, _excluded);\n    var shape;\n    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(option)) {\n        shape = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(option, _objectSpread(_objectSpread({}, props), getPropsFromShapeOption(option)));\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n        shape = option(props);\n    } else if (lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_2___default()(option) && !lodash_isBoolean__WEBPACK_IMPORTED_MODULE_3___default()(option)) {\n        var nextProps = propTransformer(option, props);\n        shape = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ShapeSelector, {\n            shapeType: shapeType,\n            elementProps: nextProps\n        });\n    } else {\n        var elementProps = props;\n        shape = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ShapeSelector, {\n            shapeType: shapeType,\n            elementProps: elementProps\n        });\n    }\n    if (isActive) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_container_Layer__WEBPACK_IMPORTED_MODULE_9__.Layer, {\n            className: activeClassName\n        }, shape);\n    }\n    return shape;\n}\n/**\n * This is an abstraction to handle identifying the active index from a tooltip mouse interaction\n */ function isFunnel(graphicalItem, _item) {\n    return _item != null && 'trapezoids' in graphicalItem.props;\n}\nfunction isPie(graphicalItem, _item) {\n    return _item != null && 'sectors' in graphicalItem.props;\n}\nfunction isScatter(graphicalItem, _item) {\n    return _item != null && 'points' in graphicalItem.props;\n}\nfunction compareFunnel(shapeData, activeTooltipItem) {\n    var _activeTooltipItem$la, _activeTooltipItem$la2;\n    var xMatches = shapeData.x === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la === void 0 ? void 0 : _activeTooltipItem$la.x) || shapeData.x === activeTooltipItem.x;\n    var yMatches = shapeData.y === (activeTooltipItem === null || activeTooltipItem === void 0 || (_activeTooltipItem$la2 = activeTooltipItem.labelViewBox) === null || _activeTooltipItem$la2 === void 0 ? void 0 : _activeTooltipItem$la2.y) || shapeData.y === activeTooltipItem.y;\n    return xMatches && yMatches;\n}\nfunction comparePie(shapeData, activeTooltipItem) {\n    var startAngleMatches = shapeData.endAngle === activeTooltipItem.endAngle;\n    var endAngleMatches = shapeData.startAngle === activeTooltipItem.startAngle;\n    return startAngleMatches && endAngleMatches;\n}\nfunction compareScatter(shapeData, activeTooltipItem) {\n    var xMatches = shapeData.x === activeTooltipItem.x;\n    var yMatches = shapeData.y === activeTooltipItem.y;\n    var zMatches = shapeData.z === activeTooltipItem.z;\n    return xMatches && yMatches && zMatches;\n}\nfunction getComparisonFn(graphicalItem, activeItem) {\n    var comparison;\n    if (isFunnel(graphicalItem, activeItem)) {\n        comparison = compareFunnel;\n    } else if (isPie(graphicalItem, activeItem)) {\n        comparison = comparePie;\n    } else if (isScatter(graphicalItem, activeItem)) {\n        comparison = compareScatter;\n    }\n    return comparison;\n}\nfunction getShapeDataKey(graphicalItem, activeItem) {\n    var shapeKey;\n    if (isFunnel(graphicalItem, activeItem)) {\n        shapeKey = 'trapezoids';\n    } else if (isPie(graphicalItem, activeItem)) {\n        shapeKey = 'sectors';\n    } else if (isScatter(graphicalItem, activeItem)) {\n        shapeKey = 'points';\n    }\n    return shapeKey;\n}\nfunction getActiveShapeTooltipPayload(graphicalItem, activeItem) {\n    if (isFunnel(graphicalItem, activeItem)) {\n        var _activeItem$tooltipPa;\n        return (_activeItem$tooltipPa = activeItem.tooltipPayload) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa[0]) === null || _activeItem$tooltipPa === void 0 || (_activeItem$tooltipPa = _activeItem$tooltipPa.payload) === null || _activeItem$tooltipPa === void 0 ? void 0 : _activeItem$tooltipPa.payload;\n    }\n    if (isPie(graphicalItem, activeItem)) {\n        var _activeItem$tooltipPa2;\n        return (_activeItem$tooltipPa2 = activeItem.tooltipPayload) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2[0]) === null || _activeItem$tooltipPa2 === void 0 || (_activeItem$tooltipPa2 = _activeItem$tooltipPa2.payload) === null || _activeItem$tooltipPa2 === void 0 ? void 0 : _activeItem$tooltipPa2.payload;\n    }\n    if (isScatter(graphicalItem, activeItem)) {\n        return activeItem.payload;\n    }\n    return {};\n}\n/**\n *\n * @param {GetActiveShapeIndexForTooltip} arg an object of incoming attributes from Tooltip\n * @returns {number}\n *\n * To handle possible duplicates in the data set,\n * match both the data value of the active item to a data value on a graph item,\n * and match the mouse coordinates of the active item to the coordinates of in a particular components shape data.\n * This assumes equal lengths of shape objects to data items.\n */ function getActiveShapeIndexForTooltip(_ref3) {\n    var activeTooltipItem = _ref3.activeTooltipItem, graphicalItem = _ref3.graphicalItem, itemData = _ref3.itemData;\n    var shapeKey = getShapeDataKey(graphicalItem, activeTooltipItem);\n    var tooltipPayload = getActiveShapeTooltipPayload(graphicalItem, activeTooltipItem);\n    var activeItemMatches = itemData.filter(function(datum, dataIndex) {\n        var valuesMatch = lodash_isEqual__WEBPACK_IMPORTED_MODULE_4___default()(tooltipPayload, datum);\n        var mouseCoordinateMatches = graphicalItem.props[shapeKey].filter(function(shapeData) {\n            var comparison = getComparisonFn(graphicalItem, activeTooltipItem);\n            return comparison(shapeData, activeTooltipItem);\n        });\n        // get the last index in case of multiple matches\n        var indexOfMouseCoordinates = graphicalItem.props[shapeKey].indexOf(mouseCoordinateMatches[mouseCoordinateMatches.length - 1]);\n        var coordinatesMatch = dataIndex === indexOfMouseCoordinates;\n        return valuesMatch && coordinatesMatch;\n    });\n    // get the last index in case of multiple matches\n    var activeIndex = itemData.indexOf(activeItemMatches[activeItemMatches.length - 1]);\n    return activeIndex;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ActiveShapeUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/BarUtils.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/BarUtils.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BarRectangle: () => (/* binding */ BarRectangle),\n/* harmony export */   minPointSizeCallback: () => (/* binding */ minPointSizeCallback)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-invariant */ \"(ssr)/./node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var _ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ActiveShapeUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ActiveShapeUtils.js\");\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nvar _excluded = [\n    \"x\",\n    \"y\"\n];\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\n\n\n\n// Rectangle props is expecting x, y, height, width as numbers, name as a string, and radius as a custom type\n// When props are being spread in from a user defined component in Bar,\n// the prop types of an SVGElement have these typed as something else.\n// This function will return the passed in props\n// along with x, y, height as numbers, name as a string, and radius as number | [number, number, number, number]\nfunction typeguardBarRectangleProps(_ref, props) {\n    var xProp = _ref.x, yProp = _ref.y, option = _objectWithoutProperties(_ref, _excluded);\n    var xValue = \"\".concat(xProp);\n    var x = parseInt(xValue, 10);\n    var yValue = \"\".concat(yProp);\n    var y = parseInt(yValue, 10);\n    var heightValue = \"\".concat(props.height || option.height);\n    var height = parseInt(heightValue, 10);\n    var widthValue = \"\".concat(props.width || option.width);\n    var width = parseInt(widthValue, 10);\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, props), option), x ? {\n        x: x\n    } : {}), y ? {\n        y: y\n    } : {}), {}, {\n        height: height,\n        width: width,\n        name: props.name,\n        radius: props.radius\n    });\n}\nfunction BarRectangle(props) {\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ActiveShapeUtils__WEBPACK_IMPORTED_MODULE_2__.Shape, _extends({\n        shapeType: \"rectangle\",\n        propTransformer: typeguardBarRectangleProps,\n        activeClassName: \"recharts-active-bar\"\n    }, props));\n}\n/**\n * Safely gets minPointSize from from the minPointSize prop if it is a function\n * @param minPointSize minPointSize as passed to the Bar component\n * @param defaultValue default minPointSize\n * @returns minPointSize\n */ var minPointSizeCallback = function minPointSizeCallback(minPointSize) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return function(value, index) {\n        if (typeof minPointSize === 'number') return minPointSize;\n        var isValueNumberOrNil = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_3__.isNumber)(value) || (0,_DataUtils__WEBPACK_IMPORTED_MODULE_3__.isNullish)(value);\n        if (isValueNumberOrNil) {\n            return minPointSize(value, index);\n        }\n        !isValueNumberOrNil ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(false, \"minPointSize callback function received a value with type of \".concat(_typeof(value), \". Currently only numbers or null/undefined are supported.\")) : 0 : void 0;\n        return defaultValue;\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/BarUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScaleHelper: () => (/* binding */ ScaleHelper),\n/* harmony export */   createLabeledScales: () => (/* binding */ createLabeledScales),\n/* harmony export */   formatAxisMap: () => (/* binding */ formatAxisMap),\n/* harmony export */   getAngledRectangleWidth: () => (/* binding */ getAngledRectangleWidth),\n/* harmony export */   normalizeAngle: () => (/* binding */ normalizeAngle),\n/* harmony export */   rectWithCoords: () => (/* binding */ rectWithCoords),\n/* harmony export */   rectWithPoints: () => (/* binding */ rectWithPoints)\n/* harmony export */ });\n/* harmony import */ var lodash_mapValues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/mapValues */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/mapValues.js\");\n/* harmony import */ var lodash_mapValues__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_mapValues__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_every__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/every */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/every.js\");\n/* harmony import */ var lodash_every__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_every__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ChartUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _ReactUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _cartesian_Bar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cartesian/Bar */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/Bar.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n/**\n * Calculate the scale function, position, width, height of axes\n * @param  {Object} props     Latest props\n * @param  {Object} axisMap   The configuration of axes\n * @param  {Object} offset    The offset of main part in the svg element\n * @param  {String} axisType  The type of axes, x-axis or y-axis\n * @param  {String} chartName The name of chart\n * @return {Object} Configuration\n */ var formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {\n    var width = props.width, height = props.height, layout = props.layout, children = props.children;\n    var ids = Object.keys(axisMap);\n    var steps = {\n        left: offset.left,\n        leftMirror: offset.left,\n        right: width - offset.right,\n        rightMirror: width - offset.right,\n        top: offset.top,\n        topMirror: offset.top,\n        bottom: height - offset.bottom,\n        bottomMirror: height - offset.bottom\n    };\n    var hasBar = !!(0,_ReactUtils__WEBPACK_IMPORTED_MODULE_2__.findChildByType)(children, _cartesian_Bar__WEBPACK_IMPORTED_MODULE_3__.Bar);\n    return ids.reduce(function(result, id) {\n        var axis = axisMap[id];\n        var orientation = axis.orientation, domain = axis.domain, _axis$padding = axis.padding, padding = _axis$padding === void 0 ? {} : _axis$padding, mirror = axis.mirror, reversed = axis.reversed;\n        var offsetKey = \"\".concat(orientation).concat(mirror ? 'Mirror' : '');\n        var calculatedPadding, range, x, y, needSpace;\n        if (axis.type === 'number' && (axis.padding === 'gap' || axis.padding === 'no-gap')) {\n            var diff = domain[1] - domain[0];\n            var smallestDistanceBetweenValues = Infinity;\n            var sortedValues = axis.categoricalDomain.sort(_DataUtils__WEBPACK_IMPORTED_MODULE_4__.compareValues);\n            sortedValues.forEach(function(value, index) {\n                if (index > 0) {\n                    smallestDistanceBetweenValues = Math.min((value || 0) - (sortedValues[index - 1] || 0), smallestDistanceBetweenValues);\n                }\n            });\n            if (Number.isFinite(smallestDistanceBetweenValues)) {\n                var smallestDistanceInPercent = smallestDistanceBetweenValues / diff;\n                var rangeWidth = axis.layout === 'vertical' ? offset.height : offset.width;\n                if (axis.padding === 'gap') {\n                    calculatedPadding = smallestDistanceInPercent * rangeWidth / 2;\n                }\n                if (axis.padding === 'no-gap') {\n                    var gap = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_4__.getPercentValue)(props.barCategoryGap, smallestDistanceInPercent * rangeWidth);\n                    var halfBand = smallestDistanceInPercent * rangeWidth / 2;\n                    calculatedPadding = halfBand - gap - (halfBand - gap) / rangeWidth * gap;\n                }\n            }\n        }\n        if (axisType === 'xAxis') {\n            range = [\n                offset.left + (padding.left || 0) + (calculatedPadding || 0),\n                offset.left + offset.width - (padding.right || 0) - (calculatedPadding || 0)\n            ];\n        } else if (axisType === 'yAxis') {\n            range = layout === 'horizontal' ? [\n                offset.top + offset.height - (padding.bottom || 0),\n                offset.top + (padding.top || 0)\n            ] : [\n                offset.top + (padding.top || 0) + (calculatedPadding || 0),\n                offset.top + offset.height - (padding.bottom || 0) - (calculatedPadding || 0)\n            ];\n        } else {\n            range = axis.range;\n        }\n        if (reversed) {\n            range = [\n                range[1],\n                range[0]\n            ];\n        }\n        var _parseScale = (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_5__.parseScale)(axis, chartName, hasBar), scale = _parseScale.scale, realScaleType = _parseScale.realScaleType;\n        scale.domain(domain).range(range);\n        (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_5__.checkDomainOfScale)(scale);\n        var ticks = (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_5__.getTicksOfScale)(scale, _objectSpread(_objectSpread({}, axis), {}, {\n            realScaleType: realScaleType\n        }));\n        if (axisType === 'xAxis') {\n            needSpace = orientation === 'top' && !mirror || orientation === 'bottom' && mirror;\n            x = offset.left;\n            y = steps[offsetKey] - needSpace * axis.height;\n        } else if (axisType === 'yAxis') {\n            needSpace = orientation === 'left' && !mirror || orientation === 'right' && mirror;\n            x = steps[offsetKey] - needSpace * axis.width;\n            y = offset.top;\n        }\n        var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {\n            realScaleType: realScaleType,\n            x: x,\n            y: y,\n            scale: scale,\n            width: axisType === 'xAxis' ? offset.width : axis.width,\n            height: axisType === 'yAxis' ? offset.height : axis.height\n        });\n        finalAxis.bandSize = (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_5__.getBandSizeOfAxis)(finalAxis, ticks);\n        if (!axis.hide && axisType === 'xAxis') {\n            steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.height;\n        } else if (!axis.hide) {\n            steps[offsetKey] += (needSpace ? -1 : 1) * finalAxis.width;\n        }\n        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));\n    }, {});\n};\nvar rectWithPoints = function rectWithPoints(_ref, _ref2) {\n    var x1 = _ref.x, y1 = _ref.y;\n    var x2 = _ref2.x, y2 = _ref2.y;\n    return {\n        x: Math.min(x1, x2),\n        y: Math.min(y1, y2),\n        width: Math.abs(x2 - x1),\n        height: Math.abs(y2 - y1)\n    };\n};\n/**\n * Compute the x, y, width, and height of a box from two reference points.\n * @param  {Object} coords     x1, x2, y1, and y2\n * @return {Object} object\n */ var rectWithCoords = function rectWithCoords(_ref3) {\n    var x1 = _ref3.x1, y1 = _ref3.y1, x2 = _ref3.x2, y2 = _ref3.y2;\n    return rectWithPoints({\n        x: x1,\n        y: y1\n    }, {\n        x: x2,\n        y: y2\n    });\n};\nvar ScaleHelper = /*#__PURE__*/ function() {\n    function ScaleHelper(scale) {\n        _classCallCheck(this, ScaleHelper);\n        this.scale = scale;\n    }\n    return _createClass(ScaleHelper, [\n        {\n            key: \"domain\",\n            get: function get() {\n                return this.scale.domain;\n            }\n        },\n        {\n            key: \"range\",\n            get: function get() {\n                return this.scale.range;\n            }\n        },\n        {\n            key: \"rangeMin\",\n            get: function get() {\n                return this.range()[0];\n            }\n        },\n        {\n            key: \"rangeMax\",\n            get: function get() {\n                return this.range()[1];\n            }\n        },\n        {\n            key: \"bandwidth\",\n            get: function get() {\n                return this.scale.bandwidth;\n            }\n        },\n        {\n            key: \"apply\",\n            value: function apply(value) {\n                var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, bandAware = _ref4.bandAware, position = _ref4.position;\n                if (value === undefined) {\n                    return undefined;\n                }\n                if (position) {\n                    switch(position){\n                        case 'start':\n                            {\n                                return this.scale(value);\n                            }\n                        case 'middle':\n                            {\n                                var offset = this.bandwidth ? this.bandwidth() / 2 : 0;\n                                return this.scale(value) + offset;\n                            }\n                        case 'end':\n                            {\n                                var _offset = this.bandwidth ? this.bandwidth() : 0;\n                                return this.scale(value) + _offset;\n                            }\n                        default:\n                            {\n                                return this.scale(value);\n                            }\n                    }\n                }\n                if (bandAware) {\n                    var _offset2 = this.bandwidth ? this.bandwidth() / 2 : 0;\n                    return this.scale(value) + _offset2;\n                }\n                return this.scale(value);\n            }\n        },\n        {\n            key: \"isInRange\",\n            value: function isInRange(value) {\n                var range = this.range();\n                var first = range[0];\n                var last = range[range.length - 1];\n                return first <= last ? value >= first && value <= last : value >= last && value <= first;\n            }\n        }\n    ], [\n        {\n            key: \"create\",\n            value: function create(obj) {\n                return new ScaleHelper(obj);\n            }\n        }\n    ]);\n}();\n_defineProperty(ScaleHelper, \"EPS\", 1e-4);\nvar createLabeledScales = function createLabeledScales(options) {\n    var scales = Object.keys(options).reduce(function(res, key) {\n        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, key, ScaleHelper.create(options[key])));\n    }, {});\n    return _objectSpread(_objectSpread({}, scales), {}, {\n        apply: function apply(coord) {\n            var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, bandAware = _ref5.bandAware, position = _ref5.position;\n            return lodash_mapValues__WEBPACK_IMPORTED_MODULE_0___default()(coord, function(value, label) {\n                return scales[label].apply(value, {\n                    bandAware: bandAware,\n                    position: position\n                });\n            });\n        },\n        isInRange: function isInRange(coord) {\n            return lodash_every__WEBPACK_IMPORTED_MODULE_1___default()(coord, function(value, label) {\n                return scales[label].isInRange(value);\n            });\n        }\n    });\n};\n/** Normalizes the angle so that 0 <= angle < 180.\n * @param {number} angle Angle in degrees.\n * @return {number} the normalized angle with a value of at least 0 and never greater or equal to 180. */ function normalizeAngle(angle) {\n    return (angle % 180 + 180) % 180;\n}\n/** Calculates the width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n * @param {Object} size Width and height of the text in a horizontal position.\n * @param {number} angle Angle in degrees in which the text is displayed.\n * @return {number} The width of the largest horizontal line that fits inside a rectangle that is displayed at an angle.\n */ var getAngledRectangleWidth = function getAngledRectangleWidth(_ref6) {\n    var width = _ref6.width, height = _ref6.height;\n    var angle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    // Ensure angle is >= 0 && < 180\n    var normalizedAngle = normalizeAngle(angle);\n    var angleRadians = normalizedAngle * Math.PI / 180;\n    /* Depending on the height and width of the rectangle, we may need to use different formulas to calculate the angled\n   * width. This threshold defines when each formula should kick in. */ var angleThreshold = Math.atan(height / width);\n    var angledWidth = angleRadians > angleThreshold && angleRadians < Math.PI - angleThreshold ? height / Math.sin(angleRadians) : width / Math.cos(angleRadians);\n    return Math.abs(angledWidth);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_VALUE_REG: () => (/* binding */ MAX_VALUE_REG),\n/* harmony export */   MIN_VALUE_REG: () => (/* binding */ MIN_VALUE_REG),\n/* harmony export */   appendOffsetOfLegend: () => (/* binding */ appendOffsetOfLegend),\n/* harmony export */   calculateActiveTickIndex: () => (/* binding */ calculateActiveTickIndex),\n/* harmony export */   checkDomainOfScale: () => (/* binding */ checkDomainOfScale),\n/* harmony export */   combineEventHandlers: () => (/* binding */ combineEventHandlers),\n/* harmony export */   findPositionOfBar: () => (/* binding */ findPositionOfBar),\n/* harmony export */   getBandSizeOfAxis: () => (/* binding */ getBandSizeOfAxis),\n/* harmony export */   getBarPosition: () => (/* binding */ getBarPosition),\n/* harmony export */   getBarSizeList: () => (/* binding */ getBarSizeList),\n/* harmony export */   getBaseValueOfBar: () => (/* binding */ getBaseValueOfBar),\n/* harmony export */   getCateCoordinateOfBar: () => (/* binding */ getCateCoordinateOfBar),\n/* harmony export */   getCateCoordinateOfLine: () => (/* binding */ getCateCoordinateOfLine),\n/* harmony export */   getCoordinatesOfGrid: () => (/* binding */ getCoordinatesOfGrid),\n/* harmony export */   getDomainOfDataByKey: () => (/* binding */ getDomainOfDataByKey),\n/* harmony export */   getDomainOfErrorBars: () => (/* binding */ getDomainOfErrorBars),\n/* harmony export */   getDomainOfItemsWithSameAxis: () => (/* binding */ getDomainOfItemsWithSameAxis),\n/* harmony export */   getDomainOfStackGroups: () => (/* binding */ getDomainOfStackGroups),\n/* harmony export */   getLegendProps: () => (/* reexport safe */ _getLegendProps__WEBPACK_IMPORTED_MODULE_14__.getLegendProps),\n/* harmony export */   getMainColorOfGraphicItem: () => (/* binding */ getMainColorOfGraphicItem),\n/* harmony export */   getStackGroupsByAxisId: () => (/* binding */ getStackGroupsByAxisId),\n/* harmony export */   getStackedData: () => (/* binding */ getStackedData),\n/* harmony export */   getStackedDataOfItem: () => (/* binding */ getStackedDataOfItem),\n/* harmony export */   getTicksOfAxis: () => (/* binding */ getTicksOfAxis),\n/* harmony export */   getTicksOfScale: () => (/* binding */ getTicksOfScale),\n/* harmony export */   getTooltipItem: () => (/* binding */ getTooltipItem),\n/* harmony export */   getValueByDataKey: () => (/* binding */ getValueByDataKey),\n/* harmony export */   isCategoricalAxis: () => (/* binding */ isCategoricalAxis),\n/* harmony export */   offsetPositive: () => (/* binding */ offsetPositive),\n/* harmony export */   offsetSign: () => (/* binding */ offsetSign),\n/* harmony export */   parseDomainOfCategoryAxis: () => (/* binding */ parseDomainOfCategoryAxis),\n/* harmony export */   parseErrorBarsOfAxis: () => (/* binding */ parseErrorBarsOfAxis),\n/* harmony export */   parseScale: () => (/* binding */ parseScale),\n/* harmony export */   parseSpecifiedDomain: () => (/* binding */ parseSpecifiedDomain),\n/* harmony export */   truncateByDomain: () => (/* binding */ truncateByDomain)\n/* harmony export */ });\n/* harmony import */ var victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! victory-vendor/d3-scale */ \"(ssr)/./node_modules/.pnpm/victory-vendor@36.9.2/node_modules/victory-vendor/es/d3-scale.js\");\n/* harmony import */ var victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! victory-vendor/d3-shape */ \"(ssr)/./node_modules/.pnpm/victory-vendor@36.9.2/node_modules/victory-vendor/es/d3-shape.js\");\n/* harmony import */ var lodash_max__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/max */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/max.js\");\n/* harmony import */ var lodash_max__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_max__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_min__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/min */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/min.js\");\n/* harmony import */ var lodash_min__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_min__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/isString */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isString.js\");\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/get */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash_flatMap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/flatMap */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/flatMap.js\");\n/* harmony import */ var lodash_flatMap__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_flatMap__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var lodash_isNaN__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/isNaN */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNaN.js\");\n/* harmony import */ var lodash_isNaN__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_isNaN__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var lodash_upperFirst__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash/upperFirst */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/upperFirst.js\");\n/* harmony import */ var lodash_upperFirst__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/isEqual */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lodash/sortBy */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/sortBy.js\");\n/* harmony import */ var lodash_sortBy__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(lodash_sortBy__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var recharts_scale__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! recharts-scale */ \"(ssr)/./node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js\");\n/* harmony import */ var _cartesian_ErrorBar__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../cartesian/ErrorBar */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ErrorBar.js\");\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _ReactUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _getLegendProps__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./getLegendProps */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getLegendProps.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// TODO: Cause of circular dependency. Needs refactor.\n// import { RadiusAxisProps, AngleAxisProps } from '../polar/types';\n\n// Exported for backwards compatibility\n\nfunction getValueByDataKey(obj, dataKey, defaultValue) {\n    if (lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(obj) || lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(dataKey)) {\n        return defaultValue;\n    }\n    if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumOrStr)(dataKey)) {\n        return lodash_get__WEBPACK_IMPORTED_MODULE_7___default()(obj, dataKey, defaultValue);\n    }\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default()(dataKey)) {\n        return dataKey(obj);\n    }\n    return defaultValue;\n}\n/**\n * Get domain of data by key.\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */ function getDomainOfDataByKey(data, key, type, filterNil) {\n    var flattenData = lodash_flatMap__WEBPACK_IMPORTED_MODULE_8___default()(data, function(entry) {\n        return getValueByDataKey(entry, key);\n    });\n    if (type === 'number') {\n        // @ts-expect-error parseFloat type only accepts strings\n        var domain = flattenData.filter(function(entry) {\n            return (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(entry) || parseFloat(entry);\n        });\n        return domain.length ? [\n            lodash_min__WEBPACK_IMPORTED_MODULE_3___default()(domain),\n            lodash_max__WEBPACK_IMPORTED_MODULE_2___default()(domain)\n        ] : [\n            Infinity,\n            -Infinity\n        ];\n    }\n    var validateData = filterNil ? flattenData.filter(function(entry) {\n        return !lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(entry);\n    }) : flattenData;\n    // Supports x-axis of Date type\n    return validateData.map(function(entry) {\n        return (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumOrStr)(entry) || entry instanceof Date ? entry : '';\n    });\n}\nvar calculateActiveTickIndex = function calculateActiveTickIndex(coordinate) {\n    var _ticks$length;\n    var ticks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var unsortedTicks = arguments.length > 2 ? arguments[2] : undefined;\n    var axis = arguments.length > 3 ? arguments[3] : undefined;\n    var index = -1;\n    var len = (_ticks$length = ticks === null || ticks === void 0 ? void 0 : ticks.length) !== null && _ticks$length !== void 0 ? _ticks$length : 0;\n    // if there are 1 or less ticks ticks then the active tick is at index 0\n    if (len <= 1) {\n        return 0;\n    }\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n        var range = axis.range;\n        // ticks are distributed in a circle\n        for(var i = 0; i < len; i++){\n            var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n            var cur = unsortedTicks[i].coordinate;\n            var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n            var sameDirectionCoord = void 0;\n            if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.mathSign)(cur - before) !== (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.mathSign)(after - cur)) {\n                var diffInterval = [];\n                if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.mathSign)(after - cur) === (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.mathSign)(range[1] - range[0])) {\n                    sameDirectionCoord = after;\n                    var curInRange = cur + range[1] - range[0];\n                    diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n                    diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n                } else {\n                    sameDirectionCoord = before;\n                    var afterInRange = after + range[1] - range[0];\n                    diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n                    diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n                }\n                var sameInterval = [\n                    Math.min(cur, (sameDirectionCoord + cur) / 2),\n                    Math.max(cur, (sameDirectionCoord + cur) / 2)\n                ];\n                if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n                    index = unsortedTicks[i].index;\n                    break;\n                }\n            } else {\n                var minValue = Math.min(before, after);\n                var maxValue = Math.max(before, after);\n                if (coordinate > (minValue + cur) / 2 && coordinate <= (maxValue + cur) / 2) {\n                    index = unsortedTicks[i].index;\n                    break;\n                }\n            }\n        }\n    } else {\n        // ticks are distributed in a single direction\n        for(var _i = 0; _i < len; _i++){\n            if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n                index = ticks[_i].index;\n                break;\n            }\n        }\n    }\n    return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */ var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n    var _item$type;\n    var _ref = item, displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n    var defaultedProps = (_item$type = item.type) !== null && _item$type !== void 0 && _item$type.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;\n    var stroke = defaultedProps.stroke, fill = defaultedProps.fill;\n    var result;\n    switch(displayName){\n        case 'Line':\n            result = stroke;\n            break;\n        case 'Area':\n        case 'Radar':\n            result = stroke && stroke !== 'none' ? stroke : fill;\n            break;\n        default:\n            result = fill;\n            break;\n    }\n    return result;\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */ var getBarSizeList = function getBarSizeList(_ref2) {\n    var globalSize = _ref2.barSize, totalSize = _ref2.totalSize, _ref2$stackGroups = _ref2.stackGroups, stackGroups = _ref2$stackGroups === void 0 ? {} : _ref2$stackGroups;\n    if (!stackGroups) {\n        return {};\n    }\n    var result = {};\n    var numericAxisIds = Object.keys(stackGroups);\n    for(var i = 0, len = numericAxisIds.length; i < len; i++){\n        var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n        var stackIds = Object.keys(sgs);\n        for(var j = 0, sLen = stackIds.length; j < sLen; j++){\n            var _sgs$stackIds$j = sgs[stackIds[j]], items = _sgs$stackIds$j.items, cateAxisId = _sgs$stackIds$j.cateAxisId;\n            var barItems = items.filter(function(item) {\n                return (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_16__.getDisplayName)(item.type).indexOf('Bar') >= 0;\n            });\n            if (barItems && barItems.length) {\n                var barItemDefaultProps = barItems[0].type.defaultProps;\n                var barItemProps = barItemDefaultProps !== undefined ? _objectSpread(_objectSpread({}, barItemDefaultProps), barItems[0].props) : barItems[0].props;\n                var selfSize = barItemProps.barSize;\n                var cateId = barItemProps[cateAxisId];\n                if (!result[cateId]) {\n                    result[cateId] = [];\n                }\n                var barSize = lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(selfSize) ? globalSize : selfSize;\n                result[cateId].push({\n                    item: barItems[0],\n                    stackList: barItems.slice(1),\n                    barSize: lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(barSize) ? undefined : (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.getPercentValue)(barSize, totalSize, 0)\n                });\n            }\n        }\n    }\n    return result;\n};\n/**\n * Calculate the size of each bar and offset between start of band and the bar\n *\n * @param  {number} bandSize is the size of area where bars can render\n * @param  {number | string} barGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {number | string} barCategoryGap is the gap size, as a percentage of `bandSize`.\n *                                  Can be defined as number or percent string\n * @param  {Array<object>} sizeList Sizes of all groups\n * @param  {number} maxBarSize The maximum size of each bar\n * @return {Array<object>} The size and offset of each bar\n */ var getBarPosition = function getBarPosition(_ref3) {\n    var barGap = _ref3.barGap, barCategoryGap = _ref3.barCategoryGap, bandSize = _ref3.bandSize, _ref3$sizeList = _ref3.sizeList, sizeList = _ref3$sizeList === void 0 ? [] : _ref3$sizeList, maxBarSize = _ref3.maxBarSize;\n    var len = sizeList.length;\n    if (len < 1) return null;\n    var realBarGap = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.getPercentValue)(barGap, bandSize, 0, true);\n    var result;\n    var initialValue = [];\n    // whether or not is barSize setted by user\n    if (sizeList[0].barSize === +sizeList[0].barSize) {\n        var useFull = false;\n        var fullBarSize = bandSize / len;\n        // @ts-expect-error the type check above does not check for type number explicitly\n        var sum = sizeList.reduce(function(res, entry) {\n            return res + entry.barSize || 0;\n        }, 0);\n        sum += (len - 1) * realBarGap;\n        if (sum >= bandSize) {\n            sum -= (len - 1) * realBarGap;\n            realBarGap = 0;\n        }\n        if (sum >= bandSize && fullBarSize > 0) {\n            useFull = true;\n            fullBarSize *= 0.9;\n            sum = len * fullBarSize;\n        }\n        var offset = (bandSize - sum) / 2 >> 0;\n        var prev = {\n            offset: offset - realBarGap,\n            size: 0\n        };\n        result = sizeList.reduce(function(res, entry) {\n            var newPosition = {\n                item: entry.item,\n                position: {\n                    offset: prev.offset + prev.size + realBarGap,\n                    // @ts-expect-error the type check above does not check for type number explicitly\n                    size: useFull ? fullBarSize : entry.barSize\n                }\n            };\n            var newRes = [].concat(_toConsumableArray(res), [\n                newPosition\n            ]);\n            prev = newRes[newRes.length - 1].position;\n            if (entry.stackList && entry.stackList.length) {\n                entry.stackList.forEach(function(item) {\n                    newRes.push({\n                        item: item,\n                        position: prev\n                    });\n                });\n            }\n            return newRes;\n        }, initialValue);\n    } else {\n        var _offset = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.getPercentValue)(barCategoryGap, bandSize, 0, true);\n        if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n            realBarGap = 0;\n        }\n        var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n        if (originalSize > 1) {\n            originalSize >>= 0;\n        }\n        var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n        result = sizeList.reduce(function(res, entry, i) {\n            var newRes = [].concat(_toConsumableArray(res), [\n                {\n                    item: entry.item,\n                    position: {\n                        offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n                        size: size\n                    }\n                }\n            ]);\n            if (entry.stackList && entry.stackList.length) {\n                entry.stackList.forEach(function(item) {\n                    newRes.push({\n                        item: item,\n                        position: newRes[newRes.length - 1].position\n                    });\n                });\n            }\n            return newRes;\n        }, initialValue);\n    }\n    return result;\n};\nvar appendOffsetOfLegend = function appendOffsetOfLegend(offset, _unused, props, legendBox) {\n    var children = props.children, width = props.width, margin = props.margin;\n    var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n    var legendProps = (0,_getLegendProps__WEBPACK_IMPORTED_MODULE_14__.getLegendProps)({\n        children: children,\n        legendWidth: legendWidth\n    });\n    if (legendProps) {\n        var _ref4 = legendBox || {}, boxWidth = _ref4.width, boxHeight = _ref4.height;\n        var align = legendProps.align, verticalAlign = legendProps.verticalAlign, layout = legendProps.layout;\n        if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'middle') && align !== 'center' && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(offset[align])) {\n            return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, align, offset[align] + (boxWidth || 0)));\n        }\n        if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && verticalAlign !== 'middle' && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(offset[verticalAlign])) {\n            return _objectSpread(_objectSpread({}, offset), {}, _defineProperty({}, verticalAlign, offset[verticalAlign] + (boxHeight || 0)));\n        }\n    }\n    return offset;\n};\nvar isErrorBarRelevantForAxis = function isErrorBarRelevantForAxis(layout, axisType, direction) {\n    if (lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(axisType)) {\n        return true;\n    }\n    if (layout === 'horizontal') {\n        return axisType === 'yAxis';\n    }\n    if (layout === 'vertical') {\n        return axisType === 'xAxis';\n    }\n    if (direction === 'x') {\n        return axisType === 'xAxis';\n    }\n    if (direction === 'y') {\n        return axisType === 'yAxis';\n    }\n    return true;\n};\nvar getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, layout, axisType) {\n    var children = item.props.children;\n    var errorBars = (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_16__.findAllByType)(children, _cartesian_ErrorBar__WEBPACK_IMPORTED_MODULE_17__.ErrorBar).filter(function(errorBarChild) {\n        return isErrorBarRelevantForAxis(layout, axisType, errorBarChild.props.direction);\n    });\n    if (errorBars && errorBars.length) {\n        var keys = errorBars.map(function(errorBarChild) {\n            return errorBarChild.props.dataKey;\n        });\n        return data.reduce(function(result, entry) {\n            var entryValue = getValueByDataKey(entry, dataKey);\n            if (lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(entryValue)) return result;\n            var mainValue = Array.isArray(entryValue) ? [\n                lodash_min__WEBPACK_IMPORTED_MODULE_3___default()(entryValue),\n                lodash_max__WEBPACK_IMPORTED_MODULE_2___default()(entryValue)\n            ] : [\n                entryValue,\n                entryValue\n            ];\n            var errorDomain = keys.reduce(function(prevErrorArr, k) {\n                var errorValue = getValueByDataKey(entry, k, 0);\n                var lowerValue = mainValue[0] - Math.abs(Array.isArray(errorValue) ? errorValue[0] : errorValue);\n                var upperValue = mainValue[1] + Math.abs(Array.isArray(errorValue) ? errorValue[1] : errorValue);\n                return [\n                    Math.min(lowerValue, prevErrorArr[0]),\n                    Math.max(upperValue, prevErrorArr[1])\n                ];\n            }, [\n                Infinity,\n                -Infinity\n            ]);\n            return [\n                Math.min(errorDomain[0], result[0]),\n                Math.max(errorDomain[1], result[1])\n            ];\n        }, [\n            Infinity,\n            -Infinity\n        ]);\n    }\n    return null;\n};\nvar parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType, layout) {\n    var domains = items.map(function(item) {\n        return getDomainOfErrorBars(data, item, dataKey, layout, axisType);\n    }).filter(function(entry) {\n        return !lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(entry);\n    });\n    if (domains && domains.length) {\n        return domains.reduce(function(result, entry) {\n            return [\n                Math.min(result[0], entry[0]),\n                Math.max(result[1], entry[1])\n            ];\n        }, [\n            Infinity,\n            -Infinity\n        ]);\n    }\n    return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {LayoutType} layout The type of layout\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */ var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, layout, filterNil) {\n    var domains = items.map(function(item) {\n        var dataKey = item.props.dataKey;\n        if (type === 'number' && dataKey) {\n            return getDomainOfErrorBars(data, item, dataKey, layout) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n        }\n        return getDomainOfDataByKey(data, dataKey, type, filterNil);\n    });\n    if (type === 'number') {\n        // Calculate the domain of number axis\n        return domains.reduce(// @ts-expect-error if (type === number) means that the domain is numerical type\n        // - but this link is missing in the type definition\n        function(result, entry) {\n            return [\n                Math.min(result[0], entry[0]),\n                Math.max(result[1], entry[1])\n            ];\n        }, [\n            Infinity,\n            -Infinity\n        ]);\n    }\n    var tag = {};\n    // Get the union set of category axis\n    return domains.reduce(function(result, entry) {\n        for(var i = 0, len = entry.length; i < len; i++){\n            // @ts-expect-error Date cannot index an object\n            if (!tag[entry[i]]) {\n                // @ts-expect-error Date cannot index an object\n                tag[entry[i]] = true;\n                // @ts-expect-error Date cannot index an object\n                result.push(entry[i]);\n            }\n        }\n        return result;\n    }, []);\n};\nvar isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n    return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks           The ticks in axis\n * @param {Number} minValue        The minimun value of axis\n * @param {Number} maxValue        The maximun value of axis\n * @param {boolean} syncWithTicks  Synchronize grid lines with ticks or not\n * @return {Array}                 Coordinates\n */ var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, minValue, maxValue, syncWithTicks) {\n    if (syncWithTicks) {\n        return ticks.map(function(entry) {\n            return entry.coordinate;\n        });\n    }\n    var hasMin, hasMax;\n    var values = ticks.map(function(entry) {\n        if (entry.coordinate === minValue) {\n            hasMin = true;\n        }\n        if (entry.coordinate === maxValue) {\n            hasMax = true;\n        }\n        return entry.coordinate;\n    });\n    if (!hasMin) {\n        values.push(minValue);\n    }\n    if (!hasMax) {\n        values.push(maxValue);\n    }\n    return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */ var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n    if (!axis) return null;\n    var scale = axis.scale;\n    var duplicateDomain = axis.duplicateDomain, type = axis.type, range = axis.range;\n    var offsetForBand = axis.realScaleType === 'scaleBand' ? scale.bandwidth() / 2 : 2;\n    var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / offsetForBand : 0;\n    offset = axis.axisType === 'angleAxis' && (range === null || range === void 0 ? void 0 : range.length) >= 2 ? (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.mathSign)(range[0] - range[1]) * 2 * offset : offset;\n    // The ticks set by user should only affect the ticks adjacent to axis line\n    if (isGrid && (axis.ticks || axis.niceTicks)) {\n        var result = (axis.ticks || axis.niceTicks).map(function(entry) {\n            var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n            return {\n                // If the scaleContent is not a number, the coordinate will be NaN.\n                // That could be the case for example with a PointScale and a string as domain.\n                coordinate: scale(scaleContent) + offset,\n                value: entry,\n                offset: offset\n            };\n        });\n        return result.filter(function(row) {\n            return !lodash_isNaN__WEBPACK_IMPORTED_MODULE_9___default()(row.coordinate);\n        });\n    }\n    // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n    if (axis.isCategorical && axis.categoricalDomain) {\n        return axis.categoricalDomain.map(function(entry, index) {\n            return {\n                coordinate: scale(entry) + offset,\n                value: entry,\n                index: index,\n                offset: offset\n            };\n        });\n    }\n    if (scale.ticks && !isAll) {\n        return scale.ticks(axis.tickCount).map(function(entry) {\n            return {\n                coordinate: scale(entry) + offset,\n                value: entry,\n                offset: offset\n            };\n        });\n    }\n    // When axis has duplicated text, serial numbers are used to generate scale\n    return scale.domain().map(function(entry, index) {\n        return {\n            coordinate: scale(entry) + offset,\n            value: duplicateDomain ? duplicateDomain[entry] : entry,\n            index: index,\n            offset: offset\n        };\n    });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} childHandler Handler function specified in child component\n * @return {Function}                The combined handler\n */ var handlerWeakMap = new WeakMap();\nvar combineEventHandlers = function combineEventHandlers(defaultHandler, childHandler) {\n    if (typeof childHandler !== 'function') {\n        return defaultHandler;\n    }\n    if (!handlerWeakMap.has(defaultHandler)) {\n        handlerWeakMap.set(defaultHandler, new WeakMap());\n    }\n    var childWeakMap = handlerWeakMap.get(defaultHandler);\n    if (childWeakMap.has(childHandler)) {\n        return childWeakMap.get(childHandler);\n    }\n    var combineHandler = function combineHandler() {\n        defaultHandler.apply(void 0, arguments);\n        childHandler.apply(void 0, arguments);\n    };\n    childWeakMap.set(childHandler, combineHandler);\n    return combineHandler;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @param  {Boolean}  hasBar        if it has a bar\n * @return {object}               The scale function and resolved name\n */ var parseScale = function parseScale(axis, chartType, hasBar) {\n    var scale = axis.scale, type = axis.type, layout = axis.layout, axisType = axis.axisType;\n    if (scale === 'auto') {\n        if (layout === 'radial' && axisType === 'radiusAxis') {\n            return {\n                scale: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scaleBand(),\n                realScaleType: 'band'\n            };\n        }\n        if (layout === 'radial' && axisType === 'angleAxis') {\n            return {\n                scale: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scaleLinear(),\n                realScaleType: 'linear'\n            };\n        }\n        if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0 && !hasBar)) {\n            return {\n                scale: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scalePoint(),\n                realScaleType: 'point'\n            };\n        }\n        if (type === 'category') {\n            return {\n                scale: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scaleBand(),\n                realScaleType: 'band'\n            };\n        }\n        return {\n            scale: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scaleLinear(),\n            realScaleType: 'linear'\n        };\n    }\n    if (lodash_isString__WEBPACK_IMPORTED_MODULE_6___default()(scale)) {\n        var name = \"scale\".concat(lodash_upperFirst__WEBPACK_IMPORTED_MODULE_10___default()(scale));\n        return {\n            scale: (victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__[name] || victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scalePoint)(),\n            realScaleType: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__[name] ? name : 'point'\n        };\n    }\n    return lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default()(scale) ? {\n        scale: scale\n    } : {\n        scale: victory_vendor_d3_scale__WEBPACK_IMPORTED_MODULE_0__.scalePoint(),\n        realScaleType: 'point'\n    };\n};\nvar EPS = 1e-4;\nvar checkDomainOfScale = function checkDomainOfScale(scale) {\n    var domain = scale.domain();\n    if (!domain || domain.length <= 2) {\n        return;\n    }\n    var len = domain.length;\n    var range = scale.range();\n    var minValue = Math.min(range[0], range[1]) - EPS;\n    var maxValue = Math.max(range[0], range[1]) + EPS;\n    var first = scale(domain[0]);\n    var last = scale(domain[len - 1]);\n    if (first < minValue || first > maxValue || last < minValue || last > maxValue) {\n        scale.domain([\n            domain[0],\n            domain[len - 1]\n        ]);\n    }\n};\nvar findPositionOfBar = function findPositionOfBar(barPosition, child) {\n    if (!barPosition) {\n        return null;\n    }\n    for(var i = 0, len = barPosition.length; i < len; i++){\n        if (barPosition[i].item === child) {\n            return barPosition[i].position;\n        }\n    }\n    return null;\n};\n/**\n * Both value and domain are tuples of two numbers\n * - but the type stays as array of numbers until we have better support in rest of the app\n * @param {Array} value input that will be truncated\n * @param {Array} domain boundaries\n * @returns {Array} tuple of two numbers\n */ var truncateByDomain = function truncateByDomain(value, domain) {\n    if (!domain || domain.length !== 2 || !(0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(domain[0]) || !(0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(domain[1])) {\n        return value;\n    }\n    var minValue = Math.min(domain[0], domain[1]);\n    var maxValue = Math.max(domain[0], domain[1]);\n    var result = [\n        value[0],\n        value[1]\n    ];\n    if (!(0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(value[0]) || value[0] < minValue) {\n        result[0] = minValue;\n    }\n    if (!(0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(value[1]) || value[1] > maxValue) {\n        result[1] = maxValue;\n    }\n    if (result[0] > maxValue) {\n        result[0] = maxValue;\n    }\n    if (result[1] < minValue) {\n        result[1] = minValue;\n    }\n    return result;\n};\n/**\n * Stacks all positive numbers above zero and all negative numbers below zero.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */ var offsetSign = function offsetSign(series) {\n    var n = series.length;\n    if (n <= 0) {\n        return;\n    }\n    for(var j = 0, m = series[0].length; j < m; ++j){\n        var positive = 0;\n        var negative = 0;\n        for(var i = 0; i < n; ++i){\n            var value = lodash_isNaN__WEBPACK_IMPORTED_MODULE_9___default()(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n            /* eslint-disable prefer-destructuring, no-param-reassign */ if (value >= 0) {\n                series[i][j][0] = positive;\n                series[i][j][1] = positive + value;\n                positive = series[i][j][1];\n            } else {\n                series[i][j][0] = negative;\n                series[i][j][1] = negative + value;\n                negative = series[i][j][1];\n            }\n        /* eslint-enable prefer-destructuring, no-param-reassign */ }\n    }\n};\n/**\n * Replaces all negative values with zero when stacking data.\n *\n * If all values in the series are positive then this behaves the same as 'none' stacker.\n *\n * @param {Array} series from d3-shape Stack\n * @return {Array} series with applied offset\n */ var offsetPositive = function offsetPositive(series) {\n    var n = series.length;\n    if (n <= 0) {\n        return;\n    }\n    for(var j = 0, m = series[0].length; j < m; ++j){\n        var positive = 0;\n        for(var i = 0; i < n; ++i){\n            var value = lodash_isNaN__WEBPACK_IMPORTED_MODULE_9___default()(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n            /* eslint-disable prefer-destructuring, no-param-reassign */ if (value >= 0) {\n                series[i][j][0] = positive;\n                series[i][j][1] = positive + value;\n                positive = series[i][j][1];\n            } else {\n                series[i][j][0] = 0;\n                series[i][j][1] = 0;\n            }\n        /* eslint-enable prefer-destructuring, no-param-reassign */ }\n    }\n};\n/**\n * Function type to compute offset for stacked data.\n *\n * d3-shape has something fishy going on with its types.\n * In @definitelytyped/d3-shape, this function (the offset accessor) is typed as Series<> => void.\n * However! When I actually open the storybook I can see that the offset accessor actually receives Array<Series<>>.\n * The same I can see in the source code itself:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n * That one unfortunately has no types but we can tell it passes three-dimensional array.\n *\n * Which leads me to believe that definitelytyped is wrong on this one.\n * There's open discussion on this topic without much attention:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/66042\n */ var STACK_OFFSET_MAP = {\n    sign: offsetSign,\n    // @ts-expect-error definitelytyped types are incorrect\n    expand: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.stackOffsetExpand,\n    // @ts-expect-error definitelytyped types are incorrect\n    none: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.stackOffsetNone,\n    // @ts-expect-error definitelytyped types are incorrect\n    silhouette: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.stackOffsetSilhouette,\n    // @ts-expect-error definitelytyped types are incorrect\n    wiggle: victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.stackOffsetWiggle,\n    positive: offsetPositive\n};\nvar getStackedData = function getStackedData(data, stackItems, offsetType) {\n    var dataKeys = stackItems.map(function(item) {\n        return item.props.dataKey;\n    });\n    var offsetAccessor = STACK_OFFSET_MAP[offsetType];\n    var stack = (0,victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.stack)()// @ts-expect-error stack.keys type wants an array of strings, but we provide array of DataKeys\n    .keys(dataKeys).value(function(d, key) {\n        return +getValueByDataKey(d, key, 0);\n    }).order(victory_vendor_d3_shape__WEBPACK_IMPORTED_MODULE_1__.stackOrderNone)// @ts-expect-error definitelytyped types are incorrect\n    .offset(offsetAccessor);\n    return stack(data);\n};\nvar getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n    if (!data) {\n        return null;\n    }\n    // reversing items to affect render order (for layering)\n    var items = reverseStackOrder ? _items.reverse() : _items;\n    var parentStackGroupsInitialValue = {};\n    var stackGroups = items.reduce(function(result, item) {\n        var _item$type2;\n        var defaultedProps = (_item$type2 = item.type) !== null && _item$type2 !== void 0 && _item$type2.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;\n        var stackId = defaultedProps.stackId, hide = defaultedProps.hide;\n        if (hide) {\n            return result;\n        }\n        var axisId = defaultedProps[numericAxisId];\n        var parentGroup = result[axisId] || {\n            hasStack: false,\n            stackGroups: {}\n        };\n        if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumOrStr)(stackId)) {\n            var childGroup = parentGroup.stackGroups[stackId] || {\n                numericAxisId: numericAxisId,\n                cateAxisId: cateAxisId,\n                items: []\n            };\n            childGroup.items.push(item);\n            parentGroup.hasStack = true;\n            parentGroup.stackGroups[stackId] = childGroup;\n        } else {\n            parentGroup.stackGroups[(0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.uniqueId)('_stackId_')] = {\n                numericAxisId: numericAxisId,\n                cateAxisId: cateAxisId,\n                items: [\n                    item\n                ]\n            };\n        }\n        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, parentGroup));\n    }, parentStackGroupsInitialValue);\n    var axisStackGroupsInitialValue = {};\n    return Object.keys(stackGroups).reduce(function(result, axisId) {\n        var group = stackGroups[axisId];\n        if (group.hasStack) {\n            var stackGroupsInitialValue = {};\n            group.stackGroups = Object.keys(group.stackGroups).reduce(function(res, stackId) {\n                var g = group.stackGroups[stackId];\n                return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, stackId, {\n                    numericAxisId: numericAxisId,\n                    cateAxisId: cateAxisId,\n                    items: g.items,\n                    stackedData: getStackedData(data, g.items, offsetType)\n                }));\n            }, stackGroupsInitialValue);\n        }\n        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, axisId, group));\n    }, axisStackGroupsInitialValue);\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */ var getTicksOfScale = function getTicksOfScale(scale, opts) {\n    var realScaleType = opts.realScaleType, type = opts.type, tickCount = opts.tickCount, originalDomain = opts.originalDomain, allowDecimals = opts.allowDecimals;\n    var scaleType = realScaleType || opts.scale;\n    if (scaleType !== 'auto' && scaleType !== 'linear') {\n        return null;\n    }\n    if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n        // Calculate the ticks by the number of grid when the axis is a number axis\n        var domain = scale.domain();\n        if (!domain.length) {\n            return null;\n        }\n        var tickValues = (0,recharts_scale__WEBPACK_IMPORTED_MODULE_13__.getNiceTickValues)(domain, tickCount, allowDecimals);\n        scale.domain([\n            lodash_min__WEBPACK_IMPORTED_MODULE_3___default()(tickValues),\n            lodash_max__WEBPACK_IMPORTED_MODULE_2___default()(tickValues)\n        ]);\n        return {\n            niceTicks: tickValues\n        };\n    }\n    if (tickCount && type === 'number') {\n        var _domain = scale.domain();\n        var _tickValues = (0,recharts_scale__WEBPACK_IMPORTED_MODULE_13__.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);\n        return {\n            niceTicks: _tickValues\n        };\n    }\n    return null;\n};\nfunction getCateCoordinateOfLine(_ref5) {\n    var axis = _ref5.axis, ticks = _ref5.ticks, bandSize = _ref5.bandSize, entry = _ref5.entry, index = _ref5.index, dataKey = _ref5.dataKey;\n    if (axis.type === 'category') {\n        // find coordinate of category axis by the value of category\n        // @ts-expect-error why does this use direct object access instead of getValueByDataKey?\n        if (!axis.allowDuplicatedCategory && axis.dataKey && !lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(entry[axis.dataKey])) {\n            // @ts-expect-error why does this use direct object access instead of getValueByDataKey?\n            var matchedTick = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.findEntryInArray)(ticks, 'value', entry[axis.dataKey]);\n            if (matchedTick) {\n                return matchedTick.coordinate + bandSize / 2;\n            }\n        }\n        return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n    }\n    var value = getValueByDataKey(entry, !lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(dataKey) ? dataKey : axis.dataKey);\n    return !lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(value) ? axis.scale(value) : null;\n}\nvar getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref6) {\n    var axis = _ref6.axis, ticks = _ref6.ticks, offset = _ref6.offset, bandSize = _ref6.bandSize, entry = _ref6.entry, index = _ref6.index;\n    if (axis.type === 'category') {\n        return ticks[index] ? ticks[index].coordinate + offset : null;\n    }\n    var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n    return !lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nvar getBaseValueOfBar = function getBaseValueOfBar(_ref7) {\n    var numericAxis = _ref7.numericAxis;\n    var domain = numericAxis.scale.domain();\n    if (numericAxis.type === 'number') {\n        var minValue = Math.min(domain[0], domain[1]);\n        var maxValue = Math.max(domain[0], domain[1]);\n        if (minValue <= 0 && maxValue >= 0) {\n            return 0;\n        }\n        if (maxValue < 0) {\n            return maxValue;\n        }\n        return minValue;\n    }\n    return domain[0];\n};\nvar getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n    var _item$type3;\n    var defaultedProps = (_item$type3 = item.type) !== null && _item$type3 !== void 0 && _item$type3.defaultProps ? _objectSpread(_objectSpread({}, item.type.defaultProps), item.props) : item.props;\n    var stackId = defaultedProps.stackId;\n    if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumOrStr)(stackId)) {\n        var group = stackGroups[stackId];\n        if (group) {\n            var itemIndex = group.items.indexOf(item);\n            return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n        }\n    }\n    return null;\n};\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n    return data.reduce(function(result, entry) {\n        return [\n            lodash_min__WEBPACK_IMPORTED_MODULE_3___default()(entry.concat([\n                result[0]\n            ]).filter(_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)),\n            lodash_max__WEBPACK_IMPORTED_MODULE_2___default()(entry.concat([\n                result[1]\n            ]).filter(_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber))\n        ];\n    }, [\n        Infinity,\n        -Infinity\n    ]);\n};\nvar getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n    return Object.keys(stackGroups).reduce(function(result, stackId) {\n        var group = stackGroups[stackId];\n        var stackedData = group.stackedData;\n        var domain = stackedData.reduce(function(res, entry) {\n            var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n            return [\n                Math.min(res[0], s[0]),\n                Math.max(res[1], s[1])\n            ];\n        }, [\n            Infinity,\n            -Infinity\n        ]);\n        return [\n            Math.min(domain[0], result[0]),\n            Math.max(domain[1], result[1])\n        ];\n    }, [\n        Infinity,\n        -Infinity\n    ]).map(function(result) {\n        return result === Infinity || result === -Infinity ? 0 : result;\n    });\n};\nvar MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nvar MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nvar parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default()(specifiedDomain)) {\n        return specifiedDomain(dataDomain, allowDataOverflow);\n    }\n    if (!Array.isArray(specifiedDomain)) {\n        return dataDomain;\n    }\n    var domain = [];\n    /* eslint-disable prefer-destructuring */ if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(specifiedDomain[0])) {\n        domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n    } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n        var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n        domain[0] = dataDomain[0] - value;\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default()(specifiedDomain[0])) {\n        domain[0] = specifiedDomain[0](dataDomain[0]);\n    } else {\n        domain[0] = dataDomain[0];\n    }\n    if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_15__.isNumber)(specifiedDomain[1])) {\n        domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n    } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n        var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n        domain[1] = dataDomain[1] + _value;\n    } else if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default()(specifiedDomain[1])) {\n        domain[1] = specifiedDomain[1](dataDomain[1]);\n    } else {\n        domain[1] = dataDomain[1];\n    }\n    /* eslint-enable prefer-destructuring */ return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */ var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n    // @ts-expect-error we need to rethink scale type\n    if (axis && axis.scale && axis.scale.bandwidth) {\n        // @ts-expect-error we need to rethink scale type\n        var bandWidth = axis.scale.bandwidth();\n        if (!isBar || bandWidth > 0) {\n            return bandWidth;\n        }\n    }\n    if (axis && ticks && ticks.length >= 2) {\n        var orderedTicks = lodash_sortBy__WEBPACK_IMPORTED_MODULE_12___default()(ticks, function(o) {\n            return o.coordinate;\n        });\n        var bandSize = Infinity;\n        for(var i = 1, len = orderedTicks.length; i < len; i++){\n            var cur = orderedTicks[i];\n            var prev = orderedTicks[i - 1];\n            bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n        }\n        return bandSize === Infinity ? 0 : bandSize;\n    }\n    return isBar ? undefined : 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis ReactElement\n * @returns {Array}        domains\n */ var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n    if (!specifiedDomain || !specifiedDomain.length) {\n        return calculatedDomain;\n    }\n    if (lodash_isEqual__WEBPACK_IMPORTED_MODULE_11___default()(specifiedDomain, lodash_get__WEBPACK_IMPORTED_MODULE_7___default()(axisChild, 'type.defaultProps.domain'))) {\n        return calculatedDomain;\n    }\n    return specifiedDomain;\n};\nvar getTooltipItem = function getTooltipItem(graphicalItem, payload) {\n    var defaultedProps = graphicalItem.type.defaultProps ? _objectSpread(_objectSpread({}, graphicalItem.type.defaultProps), graphicalItem.props) : graphicalItem.props;\n    var dataKey = defaultedProps.dataKey, name = defaultedProps.name, unit = defaultedProps.unit, formatter = defaultedProps.formatter, tooltipType = defaultedProps.tooltipType, chartType = defaultedProps.chartType, hide = defaultedProps.hide;\n    return _objectSpread(_objectSpread({}, (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_16__.filterProps)(graphicalItem, false)), {}, {\n        dataKey: dataKey,\n        unit: unit,\n        formatter: formatter,\n        name: name || dataKey,\n        color: getMainColorOfGraphicItem(graphicalItem),\n        value: getValueByDataKey(payload, dataKey),\n        type: tooltipType,\n        payload: payload,\n        chartType: chartType,\n        hide: hide\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CssPrefixUtils.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CssPrefixUtils.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePrefixStyle: () => (/* binding */ generatePrefixStyle)\n/* harmony export */ });\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nvar PREFIX_LIST = [\n    'Webkit',\n    'Moz',\n    'O',\n    'ms'\n];\nvar generatePrefixStyle = function generatePrefixStyle(name, value) {\n    if (!name) {\n        return null;\n    }\n    var camelName = name.replace(/(\\w)/, function(v) {\n        return v.toUpperCase();\n    });\n    var result = PREFIX_LIST.reduce(function(res, entry) {\n        return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, entry + camelName, value));\n    }, {});\n    result[name] = value;\n    return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0Nzc1ByZWZpeFV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQSxRQUFRQyxDQUFDO0lBQUk7SUFBMkIsT0FBT0QsVUFBVSxjQUFjLE9BQU9FLFVBQVUsWUFBWSxPQUFPQSxPQUFPQyxRQUFRLEdBQUcsU0FBVUYsQ0FBQztRQUFJLE9BQU8sT0FBT0E7SUFBRyxJQUFJLFNBQVVBLENBQUM7UUFBSSxPQUFPQSxLQUFLLGNBQWMsT0FBT0MsVUFBVUQsRUFBRSxXQUFXLEtBQUtDLFVBQVVELE1BQU1DLE9BQU9FLFNBQVMsR0FBRyxXQUFXLE9BQU9IO0lBQUcsR0FBR0QsUUFBUUM7QUFBSTtBQUM3VCxTQUFTSSxRQUFRQyxDQUFDLEVBQUVDLENBQUM7SUFBSSxJQUFJQyxJQUFJQyxPQUFPQyxJQUFJLENBQUNKO0lBQUksSUFBSUcsT0FBT0UscUJBQXFCLEVBQUU7UUFBRSxJQUFJVixJQUFJUSxPQUFPRSxxQkFBcUIsQ0FBQ0w7UUFBSUMsS0FBTU4sQ0FBQUEsSUFBSUEsRUFBRVcsTUFBTSxDQUFDLFNBQVVMLENBQUM7WUFBSSxPQUFPRSxPQUFPSSx3QkFBd0IsQ0FBQ1AsR0FBR0MsR0FBR08sVUFBVTtRQUFFLEVBQUMsR0FBSU4sRUFBRU8sSUFBSSxDQUFDQyxLQUFLLENBQUNSLEdBQUdQO0lBQUk7SUFBRSxPQUFPTztBQUFHO0FBQzlQLFNBQVNTLGNBQWNYLENBQUM7SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVcsVUFBVUMsTUFBTSxFQUFFWixJQUFLO1FBQUUsSUFBSUMsSUFBSSxRQUFRVSxTQUFTLENBQUNYLEVBQUUsR0FBR1csU0FBUyxDQUFDWCxFQUFFLEdBQUcsQ0FBQztRQUFHQSxJQUFJLElBQUlGLFFBQVFJLE9BQU9ELElBQUksQ0FBQyxHQUFHWSxPQUFPLENBQUMsU0FBVWIsQ0FBQztZQUFJYyxnQkFBZ0JmLEdBQUdDLEdBQUdDLENBQUMsQ0FBQ0QsRUFBRTtRQUFHLEtBQUtFLE9BQU9hLHlCQUF5QixHQUFHYixPQUFPYyxnQkFBZ0IsQ0FBQ2pCLEdBQUdHLE9BQU9hLHlCQUF5QixDQUFDZCxNQUFNSCxRQUFRSSxPQUFPRCxJQUFJWSxPQUFPLENBQUMsU0FBVWIsQ0FBQztZQUFJRSxPQUFPZSxjQUFjLENBQUNsQixHQUFHQyxHQUFHRSxPQUFPSSx3QkFBd0IsQ0FBQ0wsR0FBR0Q7UUFBSztJQUFJO0lBQUUsT0FBT0Q7QUFBRztBQUN0YixTQUFTZSxnQkFBZ0JJLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxLQUFLO0lBQUlELE1BQU1FLGVBQWVGO0lBQU0sSUFBSUEsT0FBT0QsS0FBSztRQUFFaEIsT0FBT2UsY0FBYyxDQUFDQyxLQUFLQyxLQUFLO1lBQUVDLE9BQU9BO1lBQU9iLFlBQVk7WUFBTWUsY0FBYztZQUFNQyxVQUFVO1FBQUs7SUFBSSxPQUFPO1FBQUVMLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHQztJQUFPO0lBQUUsT0FBT0Y7QUFBSztBQUMzTyxTQUFTRyxlQUFlcEIsQ0FBQztJQUFJLElBQUl1QixJQUFJQyxhQUFheEIsR0FBRztJQUFXLE9BQU8sWUFBWVIsUUFBUStCLEtBQUtBLElBQUlBLElBQUk7QUFBSTtBQUM1RyxTQUFTQyxhQUFheEIsQ0FBQyxFQUFFRCxDQUFDO0lBQUksSUFBSSxZQUFZUCxRQUFRUSxNQUFNLENBQUNBLEdBQUcsT0FBT0E7SUFBRyxJQUFJRixJQUFJRSxDQUFDLENBQUNOLE9BQU8rQixXQUFXLENBQUM7SUFBRSxJQUFJLEtBQUssTUFBTTNCLEdBQUc7UUFBRSxJQUFJeUIsSUFBSXpCLEVBQUU0QixJQUFJLENBQUMxQixHQUFHRCxLQUFLO1FBQVksSUFBSSxZQUFZUCxRQUFRK0IsSUFBSSxPQUFPQTtRQUFHLE1BQU0sSUFBSUksVUFBVTtJQUFpRDtJQUFFLE9BQU8sQ0FBQyxhQUFhNUIsSUFBSTZCLFNBQVNDLE1BQUssRUFBRzdCO0FBQUk7QUFDM1QsSUFBSThCLGNBQWM7SUFBQztJQUFVO0lBQU87SUFBSztDQUFLO0FBQ3ZDLElBQUlDLHNCQUFzQixTQUFTQSxvQkFBb0JDLElBQUksRUFBRWIsS0FBSztJQUN2RSxJQUFJLENBQUNhLE1BQU07UUFDVCxPQUFPO0lBQ1Q7SUFDQSxJQUFJQyxZQUFZRCxLQUFLRSxPQUFPLENBQUMsUUFBUSxTQUFVQyxDQUFDO1FBQzlDLE9BQU9BLEVBQUVDLFdBQVc7SUFDdEI7SUFDQSxJQUFJQyxTQUFTUCxZQUFZUSxNQUFNLENBQUMsU0FBVUMsR0FBRyxFQUFFQyxLQUFLO1FBQ2xELE9BQU8vQixjQUFjQSxjQUFjLENBQUMsR0FBRzhCLE1BQU0sQ0FBQyxHQUFHMUIsZ0JBQWdCLENBQUMsR0FBRzJCLFFBQVFQLFdBQVdkO0lBQzFGLEdBQUcsQ0FBQztJQUNKa0IsTUFBTSxDQUFDTCxLQUFLLEdBQUdiO0lBQ2YsT0FBT2tCO0FBQ1QsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0Nzc1ByZWZpeFV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF90eXBlb2YobykgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IHJldHVybiBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHsgcmV0dXJuIHR5cGVvZiBvOyB9IDogZnVuY3Rpb24gKG8pIHsgcmV0dXJuIG8gJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG87IH0sIF90eXBlb2Yobyk7IH1cbmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfVxuZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfVxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBrZXkgPSBfdG9Qcm9wZXJ0eUtleShrZXkpOyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cbmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KHQpIHsgdmFyIGkgPSBfdG9QcmltaXRpdmUodCwgXCJzdHJpbmdcIik7IHJldHVybiBcInN5bWJvbFwiID09IF90eXBlb2YoaSkgPyBpIDogaSArIFwiXCI7IH1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7IGlmIChcIm9iamVjdFwiICE9IF90eXBlb2YodCkgfHwgIXQpIHJldHVybiB0OyB2YXIgZSA9IHRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHZvaWQgMCAhPT0gZSkgeyB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTsgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG52YXIgUFJFRklYX0xJU1QgPSBbJ1dlYmtpdCcsICdNb3onLCAnTycsICdtcyddO1xuZXhwb3J0IHZhciBnZW5lcmF0ZVByZWZpeFN0eWxlID0gZnVuY3Rpb24gZ2VuZXJhdGVQcmVmaXhTdHlsZShuYW1lLCB2YWx1ZSkge1xuICBpZiAoIW5hbWUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICB2YXIgY2FtZWxOYW1lID0gbmFtZS5yZXBsYWNlKC8oXFx3KS8sIGZ1bmN0aW9uICh2KSB7XG4gICAgcmV0dXJuIHYudG9VcHBlckNhc2UoKTtcbiAgfSk7XG4gIHZhciByZXN1bHQgPSBQUkVGSVhfTElTVC5yZWR1Y2UoZnVuY3Rpb24gKHJlcywgZW50cnkpIHtcbiAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByZXMpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBlbnRyeSArIGNhbWVsTmFtZSwgdmFsdWUpKTtcbiAgfSwge30pO1xuICByZXN1bHRbbmFtZV0gPSB2YWx1ZTtcbiAgcmV0dXJuIHJlc3VsdDtcbn07Il0sIm5hbWVzIjpbIl90eXBlb2YiLCJvIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJwcm90b3R5cGUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJpIiwiX3RvUHJpbWl0aXZlIiwidG9QcmltaXRpdmUiLCJjYWxsIiwiVHlwZUVycm9yIiwiU3RyaW5nIiwiTnVtYmVyIiwiUFJFRklYX0xJU1QiLCJnZW5lcmF0ZVByZWZpeFN0eWxlIiwibmFtZSIsImNhbWVsTmFtZSIsInJlcGxhY2UiLCJ2IiwidG9VcHBlckNhc2UiLCJyZXN1bHQiLCJyZWR1Y2UiLCJyZXMiLCJlbnRyeSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CssPrefixUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DOMUtils.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DOMUtils.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOffset: () => (/* binding */ getOffset),\n/* harmony export */   getStringSize: () => (/* binding */ getStringSize),\n/* harmony export */   getStyleString: () => (/* binding */ getStyleString)\n/* harmony export */ });\n/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Global */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\nvar stringCache = {\n    widthCache: {},\n    cacheCount: 0\n};\nvar MAX_CACHE_NUM = 2000;\nvar SPAN_STYLE = {\n    position: 'absolute',\n    top: '-20000px',\n    left: 0,\n    padding: 0,\n    margin: 0,\n    border: 'none',\n    whiteSpace: 'pre'\n};\nvar STYLE_LIST = [\n    'minWidth',\n    'maxWidth',\n    'width',\n    'minHeight',\n    'maxHeight',\n    'height',\n    'top',\n    'left',\n    'fontSize',\n    'lineHeight',\n    'padding',\n    'margin',\n    'paddingLeft',\n    'paddingRight',\n    'paddingTop',\n    'paddingBottom',\n    'marginLeft',\n    'marginRight',\n    'marginTop',\n    'marginBottom'\n];\nvar MEASUREMENT_SPAN_ID = 'recharts_measurement_span';\nfunction autoCompleteStyle(name, value) {\n    if (STYLE_LIST.indexOf(name) >= 0 && value === +value) {\n        return \"\".concat(value, \"px\");\n    }\n    return value;\n}\nfunction camelToMiddleLine(text) {\n    var strs = text.split('');\n    var formatStrs = strs.reduce(function(result, entry) {\n        if (entry === entry.toUpperCase()) {\n            return [].concat(_toConsumableArray(result), [\n                '-',\n                entry.toLowerCase()\n            ]);\n        }\n        return [].concat(_toConsumableArray(result), [\n            entry\n        ]);\n    }, []);\n    return formatStrs.join('');\n}\nvar getStyleString = function getStyleString(style) {\n    return Object.keys(style).reduce(function(result, s) {\n        return \"\".concat(result).concat(camelToMiddleLine(s), \":\").concat(autoCompleteStyle(s, style[s]), \";\");\n    }, '');\n};\nfunction removeInvalidKeys(obj) {\n    var copyObj = _objectSpread({}, obj);\n    Object.keys(copyObj).forEach(function(key) {\n        if (!copyObj[key]) {\n            delete copyObj[key];\n        }\n    });\n    return copyObj;\n}\nvar getStringSize = function getStringSize(text) {\n    var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (text === undefined || text === null || _Global__WEBPACK_IMPORTED_MODULE_0__.Global.isSsr) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n    var copyStyle = removeInvalidKeys(style);\n    var cacheKey = JSON.stringify({\n        text: text,\n        copyStyle: copyStyle\n    });\n    if (stringCache.widthCache[cacheKey]) {\n        return stringCache.widthCache[cacheKey];\n    }\n    try {\n        var measurementSpan = document.getElementById(MEASUREMENT_SPAN_ID);\n        if (!measurementSpan) {\n            measurementSpan = document.createElement('span');\n            measurementSpan.setAttribute('id', MEASUREMENT_SPAN_ID);\n            measurementSpan.setAttribute('aria-hidden', 'true');\n            document.body.appendChild(measurementSpan);\n        }\n        // Need to use CSS Object Model (CSSOM) to be able to comply with Content Security Policy (CSP)\n        // https://en.wikipedia.org/wiki/Content_Security_Policy\n        var measurementSpanStyle = _objectSpread(_objectSpread({}, SPAN_STYLE), copyStyle);\n        Object.assign(measurementSpan.style, measurementSpanStyle);\n        measurementSpan.textContent = \"\".concat(text);\n        var rect = measurementSpan.getBoundingClientRect();\n        var result = {\n            width: rect.width,\n            height: rect.height\n        };\n        stringCache.widthCache[cacheKey] = result;\n        if (++stringCache.cacheCount > MAX_CACHE_NUM) {\n            stringCache.cacheCount = 0;\n            stringCache.widthCache = {};\n        }\n        return result;\n    } catch (e) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n};\nvar getOffset = function getOffset(rect) {\n    return {\n        top: rect.top + window.scrollY - document.documentElement.clientTop,\n        left: rect.left + window.scrollX - document.documentElement.clientLeft\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DOMUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareValues: () => (/* binding */ compareValues),\n/* harmony export */   findEntryInArray: () => (/* binding */ findEntryInArray),\n/* harmony export */   getAnyElementOfObject: () => (/* binding */ getAnyElementOfObject),\n/* harmony export */   getLinearRegression: () => (/* binding */ getLinearRegression),\n/* harmony export */   getPercentValue: () => (/* binding */ getPercentValue),\n/* harmony export */   hasDuplicate: () => (/* binding */ hasDuplicate),\n/* harmony export */   interpolateNumber: () => (/* binding */ interpolateNumber),\n/* harmony export */   isNullish: () => (/* binding */ isNullish),\n/* harmony export */   isNumOrStr: () => (/* binding */ isNumOrStr),\n/* harmony export */   isNumber: () => (/* binding */ isNumber),\n/* harmony export */   isPercent: () => (/* binding */ isPercent),\n/* harmony export */   mathSign: () => (/* binding */ mathSign),\n/* harmony export */   uniqueId: () => (/* binding */ uniqueId)\n/* harmony export */ });\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isString */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isString.js\");\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isNaN__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNaN */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNaN.js\");\n/* harmony import */ var lodash_isNaN__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNaN__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/get */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isNumber */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNumber.js\");\n/* harmony import */ var lodash_isNumber__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isNumber__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nvar mathSign = function mathSign(value) {\n    if (value === 0) {\n        return 0;\n    }\n    if (value > 0) {\n        return 1;\n    }\n    return -1;\n};\nvar isPercent = function isPercent(value) {\n    return lodash_isString__WEBPACK_IMPORTED_MODULE_0___default()(value) && value.indexOf('%') === value.length - 1;\n};\nvar isNumber = function isNumber(value) {\n    return lodash_isNumber__WEBPACK_IMPORTED_MODULE_3___default()(value) && !lodash_isNaN__WEBPACK_IMPORTED_MODULE_1___default()(value);\n};\nvar isNullish = function isNullish(value) {\n    return lodash_isNil__WEBPACK_IMPORTED_MODULE_4___default()(value);\n};\nvar isNumOrStr = function isNumOrStr(value) {\n    return isNumber(value) || lodash_isString__WEBPACK_IMPORTED_MODULE_0___default()(value);\n};\nvar idCounter = 0;\nvar uniqueId = function uniqueId(prefix) {\n    var id = ++idCounter;\n    return \"\".concat(prefix || '').concat(id);\n};\n/**\n * Get percent value of a total value\n * @param {number|string} percent A percent\n * @param {number} totalValue     Total value\n * @param {number} defaultValue   The value returned when percent is undefined or invalid\n * @param {boolean} validate      If set to be true, the result will be validated\n * @return {number} value\n */ var getPercentValue = function getPercentValue(percent, totalValue) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    if (!isNumber(percent) && !lodash_isString__WEBPACK_IMPORTED_MODULE_0___default()(percent)) {\n        return defaultValue;\n    }\n    var value;\n    if (isPercent(percent)) {\n        var index = percent.indexOf('%');\n        value = totalValue * parseFloat(percent.slice(0, index)) / 100;\n    } else {\n        value = +percent;\n    }\n    if (lodash_isNaN__WEBPACK_IMPORTED_MODULE_1___default()(value)) {\n        value = defaultValue;\n    }\n    if (validate && value > totalValue) {\n        value = totalValue;\n    }\n    return value;\n};\nvar getAnyElementOfObject = function getAnyElementOfObject(obj) {\n    if (!obj) {\n        return null;\n    }\n    var keys = Object.keys(obj);\n    if (keys && keys.length) {\n        return obj[keys[0]];\n    }\n    return null;\n};\nvar hasDuplicate = function hasDuplicate(ary) {\n    if (!Array.isArray(ary)) {\n        return false;\n    }\n    var len = ary.length;\n    var cache = {};\n    for(var i = 0; i < len; i++){\n        if (!cache[ary[i]]) {\n            cache[ary[i]] = true;\n        } else {\n            return true;\n        }\n    }\n    return false;\n};\n/* @todo consider to rename this function into `getInterpolator` */ var interpolateNumber = function interpolateNumber(numberA, numberB) {\n    if (isNumber(numberA) && isNumber(numberB)) {\n        return function(t) {\n            return numberA + t * (numberB - numberA);\n        };\n    }\n    return function() {\n        return numberB;\n    };\n};\nfunction findEntryInArray(ary, specifiedKey, specifiedValue) {\n    if (!ary || !ary.length) {\n        return null;\n    }\n    return ary.find(function(entry) {\n        return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(entry, specifiedKey)) === specifiedValue;\n    });\n}\n/**\n * The least square linear regression\n * @param {Array} data The array of points\n * @returns {Object} The domain of x, and the parameter of linear function\n */ var getLinearRegression = function getLinearRegression(data) {\n    if (!data || !data.length) {\n        return null;\n    }\n    var len = data.length;\n    var xsum = 0;\n    var ysum = 0;\n    var xysum = 0;\n    var xxsum = 0;\n    var xmin = Infinity;\n    var xmax = -Infinity;\n    var xcurrent = 0;\n    var ycurrent = 0;\n    for(var i = 0; i < len; i++){\n        xcurrent = data[i].cx || 0;\n        ycurrent = data[i].cy || 0;\n        xsum += xcurrent;\n        ysum += ycurrent;\n        xysum += xcurrent * ycurrent;\n        xxsum += xcurrent * xcurrent;\n        xmin = Math.min(xmin, xcurrent);\n        xmax = Math.max(xmax, xcurrent);\n    }\n    var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;\n    return {\n        xmin: xmin,\n        xmax: xmax,\n        a: a,\n        b: (ysum - a * xsum) / len\n    };\n};\n/**\n * Compare values.\n *\n * This function is intended to be passed to `Array.prototype.sort()`. It properly compares generic homogeneous arrays that are either `string[]`,\n * `number[]`, or `Date[]`. When comparing heterogeneous arrays or homogeneous arrays of other types, it will attempt to compare items properly but\n * will fall back to string comparison for mismatched or unsupported types.\n *\n * For some background, `Array.prototype.sort()`'s default comparator coerces each of the array's items into a string and compares the strings. This\n * often leads to undesirable behavior, especially with numerical items.\n *\n * @param {unknown} a The first item to compare\n * @param {unknown} b The second item to compare\n * @return {number} A negative number if a < b, a positive number if a > b, 0 if equal\n */ var compareValues = function compareValues(a, b) {\n    if (isNumber(a) && isNumber(b)) {\n        return a - b;\n    }\n    if (lodash_isString__WEBPACK_IMPORTED_MODULE_0___default()(a) && lodash_isString__WEBPACK_IMPORTED_MODULE_0___default()(b)) {\n        return a.localeCompare(b);\n    }\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() - b.getTime();\n    }\n    return String(a).localeCompare(String(b));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DetectReferenceElementsDomain.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DetectReferenceElementsDomain.js ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectReferenceElementsDomain: () => (/* binding */ detectReferenceElementsDomain)\n/* harmony export */ });\n/* harmony import */ var _cartesian_ReferenceDot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cartesian/ReferenceDot */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceDot.js\");\n/* harmony import */ var _cartesian_ReferenceLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cartesian/ReferenceLine */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceLine.js\");\n/* harmony import */ var _cartesian_ReferenceArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cartesian/ReferenceArea */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/cartesian/ReferenceArea.js\");\n/* harmony import */ var _IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./IfOverflowMatches */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js\");\n/* harmony import */ var _ReactUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\n\n\n\n\nvar detectReferenceElementsDomain = function detectReferenceElementsDomain(children, domain, axisId, axisType, specifiedTicks) {\n    var lines = (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_0__.findAllByType)(children, _cartesian_ReferenceLine__WEBPACK_IMPORTED_MODULE_1__.ReferenceLine);\n    var dots = (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_0__.findAllByType)(children, _cartesian_ReferenceDot__WEBPACK_IMPORTED_MODULE_2__.ReferenceDot);\n    var elements = [].concat(_toConsumableArray(lines), _toConsumableArray(dots));\n    var areas = (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_0__.findAllByType)(children, _cartesian_ReferenceArea__WEBPACK_IMPORTED_MODULE_3__.ReferenceArea);\n    var idKey = \"\".concat(axisType, \"Id\");\n    var valueKey = axisType[0];\n    var finalDomain = domain;\n    if (elements.length) {\n        finalDomain = elements.reduce(function(result, el) {\n            if (el.props[idKey] === axisId && (0,_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(el.props, 'extendDomain') && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(el.props[valueKey])) {\n                var value = el.props[valueKey];\n                return [\n                    Math.min(result[0], value),\n                    Math.max(result[1], value)\n                ];\n            }\n            return result;\n        }, finalDomain);\n    }\n    if (areas.length) {\n        var key1 = \"\".concat(valueKey, \"1\");\n        var key2 = \"\".concat(valueKey, \"2\");\n        finalDomain = areas.reduce(function(result, el) {\n            if (el.props[idKey] === axisId && (0,_IfOverflowMatches__WEBPACK_IMPORTED_MODULE_4__.ifOverflowMatches)(el.props, 'extendDomain') && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(el.props[key1]) && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(el.props[key2])) {\n                var value1 = el.props[key1];\n                var value2 = el.props[key2];\n                return [\n                    Math.min(result[0], value1, value2),\n                    Math.max(result[1], value1, value2)\n                ];\n            }\n            return result;\n        }, finalDomain);\n    }\n    if (specifiedTicks && specifiedTicks.length) {\n        finalDomain = specifiedTicks.reduce(function(result, tick) {\n            if ((0,_DataUtils__WEBPACK_IMPORTED_MODULE_5__.isNumber)(tick)) {\n                return [\n                    Math.min(result[0], tick),\n                    Math.max(result[1], tick)\n                ];\n            }\n            return result;\n        }, finalDomain);\n    }\n    return finalDomain;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DetectReferenceElementsDomain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Events.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Events.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SYNC_EVENT: () => (/* binding */ SYNC_EVENT),\n/* harmony export */   eventCenter: () => (/* binding */ eventCenter)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_0__);\n\nvar eventCenter = new (eventemitter3__WEBPACK_IMPORTED_MODULE_0___default())();\n\nvar SYNC_EVENT = 'recharts.syncMouseEvents';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBQ3pDLElBQUlDLGNBQWMsSUFBSUQsc0RBQVlBO0FBQ1g7QUFDaEIsSUFBSUUsYUFBYSwyQkFBMkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvdXRpbC9FdmVudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICdldmVudGVtaXR0ZXIzJztcbnZhciBldmVudENlbnRlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbmV4cG9ydCB7IGV2ZW50Q2VudGVyIH07XG5leHBvcnQgdmFyIFNZTkNfRVZFTlQgPSAncmVjaGFydHMuc3luY01vdXNlRXZlbnRzJzsiXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIiwiZXZlbnRDZW50ZXIiLCJTWU5DX0VWRU5UIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Global: () => (/* binding */ Global)\n/* harmony export */ });\nvar parseIsSsrByDefault = function parseIsSsrByDefault() {\n    return !( false && 0);\n};\nvar Global = {\n    isSsr: parseIsSsrByDefault(),\n    get: function get(key) {\n        return Global[key];\n    },\n    set: function set(key, value) {\n        if (typeof key === 'string') {\n            Global[key] = value;\n        } else {\n            var keys = Object.keys(key);\n            if (keys && keys.length) {\n                keys.forEach(function(k) {\n                    Global[k] = key[k];\n                });\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0dsb2JhbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsc0JBQXNCLFNBQVNBO0lBQ2pDLE9BQU8sQ0FBRSxPQUFpRixJQUFJQyxDQUFpQjtBQUNqSDtBQUNPLElBQUlJLFNBQVM7SUFDbEJDLE9BQU9OO0lBQ1BPLEtBQUssU0FBU0EsSUFBSUMsR0FBRztRQUNuQixPQUFPSCxNQUFNLENBQUNHLElBQUk7SUFDcEI7SUFDQUMsS0FBSyxTQUFTQSxJQUFJRCxHQUFHLEVBQUVFLEtBQUs7UUFDMUIsSUFBSSxPQUFPRixRQUFRLFVBQVU7WUFDM0JILE1BQU0sQ0FBQ0csSUFBSSxHQUFHRTtRQUNoQixPQUFPO1lBQ0wsSUFBSUMsT0FBT0MsT0FBT0QsSUFBSSxDQUFDSDtZQUN2QixJQUFJRyxRQUFRQSxLQUFLRSxNQUFNLEVBQUU7Z0JBQ3ZCRixLQUFLRyxPQUFPLENBQUMsU0FBVUMsQ0FBQztvQkFDdEJWLE1BQU0sQ0FBQ1UsRUFBRSxHQUFHUCxHQUFHLENBQUNPLEVBQUU7Z0JBQ3BCO1lBQ0Y7UUFDRjtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0dsb2JhbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcGFyc2VJc1NzckJ5RGVmYXVsdCA9IGZ1bmN0aW9uIHBhcnNlSXNTc3JCeURlZmF1bHQoKSB7XG4gIHJldHVybiAhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAmJiB3aW5kb3cuc2V0VGltZW91dCk7XG59O1xuZXhwb3J0IHZhciBHbG9iYWwgPSB7XG4gIGlzU3NyOiBwYXJzZUlzU3NyQnlEZWZhdWx0KCksXG4gIGdldDogZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgIHJldHVybiBHbG9iYWxba2V5XTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xuICAgICAgR2xvYmFsW2tleV0gPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhrZXkpO1xuICAgICAgaWYgKGtleXMgJiYga2V5cy5sZW5ndGgpIHtcbiAgICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgR2xvYmFsW2tdID0ga2V5W2tdO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07Il0sIm5hbWVzIjpbInBhcnNlSXNTc3JCeURlZmF1bHQiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRUaW1lb3V0IiwiR2xvYmFsIiwiaXNTc3IiLCJnZXQiLCJrZXkiLCJzZXQiLCJ2YWx1ZSIsImtleXMiLCJPYmplY3QiLCJsZW5ndGgiLCJmb3JFYWNoIiwiayJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/Global.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ifOverflowMatches: () => (/* binding */ ifOverflowMatches)\n/* harmony export */ });\nvar ifOverflowMatches = function ifOverflowMatches(props, value) {\n    var alwaysShow = props.alwaysShow;\n    var ifOverflow = props.ifOverflow;\n    if (alwaysShow) {\n        ifOverflow = 'extendDomain';\n    }\n    return ifOverflow === value;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0lmT3ZlcmZsb3dNYXRjaGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxvQkFBb0IsU0FBU0Esa0JBQWtCQyxLQUFLLEVBQUVDLEtBQUs7SUFDcEUsSUFBSUMsYUFBYUYsTUFBTUUsVUFBVTtJQUNqQyxJQUFJQyxhQUFhSCxNQUFNRyxVQUFVO0lBQ2pDLElBQUlELFlBQVk7UUFDZEMsYUFBYTtJQUNmO0lBQ0EsT0FBT0EsZUFBZUY7QUFDeEIsRUFBRSIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0lmT3ZlcmZsb3dNYXRjaGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgaWZPdmVyZmxvd01hdGNoZXMgPSBmdW5jdGlvbiBpZk92ZXJmbG93TWF0Y2hlcyhwcm9wcywgdmFsdWUpIHtcbiAgdmFyIGFsd2F5c1Nob3cgPSBwcm9wcy5hbHdheXNTaG93O1xuICB2YXIgaWZPdmVyZmxvdyA9IHByb3BzLmlmT3ZlcmZsb3c7XG4gIGlmIChhbHdheXNTaG93KSB7XG4gICAgaWZPdmVyZmxvdyA9ICdleHRlbmREb21haW4nO1xuICB9XG4gIHJldHVybiBpZk92ZXJmbG93ID09PSB2YWx1ZTtcbn07Il0sIm5hbWVzIjpbImlmT3ZlcmZsb3dNYXRjaGVzIiwicHJvcHMiLCJ2YWx1ZSIsImFsd2F5c1Nob3ciLCJpZk92ZXJmbG93Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/IfOverflowMatches.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n/* eslint no-console: 0 */ var isDev = \"development\" !== 'production';\nvar warn = function warn(condition, format) {\n    for(var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++){\n        args[_key - 2] = arguments[_key];\n    }\n    if (isDev && typeof console !== 'undefined' && console.warn) {\n        if (format === undefined) {\n            console.warn('LogUtils requires an error message argument');\n        }\n        if (!condition) {\n            if (format === undefined) {\n                console.warn('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n            } else {\n                var argIndex = 0;\n                console.warn(format.replace(/%s/g, function() {\n                    return args[argIndex++];\n                }));\n            }\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL0xvZ1V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSx3QkFBd0IsR0FDeEIsSUFBSUEsUUFBUUMsa0JBQXlCO0FBQzlCLElBQUlDLE9BQU8sU0FBU0EsS0FBS0MsU0FBUyxFQUFFQyxNQUFNO0lBQy9DLElBQUssSUFBSUMsT0FBT0MsVUFBVUMsTUFBTSxFQUFFQyxPQUFPLElBQUlDLE1BQU1KLE9BQU8sSUFBSUEsT0FBTyxJQUFJLElBQUlLLE9BQU8sR0FBR0EsT0FBT0wsTUFBTUssT0FBUTtRQUMxR0YsSUFBSSxDQUFDRSxPQUFPLEVBQUUsR0FBR0osU0FBUyxDQUFDSSxLQUFLO0lBQ2xDO0lBQ0EsSUFBSVYsU0FBUyxPQUFPVyxZQUFZLGVBQWVBLFFBQVFULElBQUksRUFBRTtRQUMzRCxJQUFJRSxXQUFXUSxXQUFXO1lBQ3hCRCxRQUFRVCxJQUFJLENBQUM7UUFDZjtRQUNBLElBQUksQ0FBQ0MsV0FBVztZQUNkLElBQUlDLFdBQVdRLFdBQVc7Z0JBQ3hCRCxRQUFRVCxJQUFJLENBQUMsdUVBQXVFO1lBQ3RGLE9BQU87Z0JBQ0wsSUFBSVcsV0FBVztnQkFDZkYsUUFBUVQsSUFBSSxDQUFDRSxPQUFPVSxPQUFPLENBQUMsT0FBTztvQkFDakMsT0FBT04sSUFBSSxDQUFDSyxXQUFXO2dCQUN6QjtZQUNGO1FBQ0Y7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvdXRpbC9Mb2dVdGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tY29uc29sZTogMCAqL1xudmFyIGlzRGV2ID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcbmV4cG9ydCB2YXIgd2FybiA9IGZ1bmN0aW9uIHdhcm4oY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDIgPyBfbGVuIC0gMiA6IDApLCBfa2V5ID0gMjsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleSAtIDJdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG4gIGlmIChpc0RldiAmJiB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0xvZ1V0aWxzIHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zb2xlLndhcm4oJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICAgIGNvbnNvbGUud2Fybihmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59OyJdLCJuYW1lcyI6WyJpc0RldiIsInByb2Nlc3MiLCJ3YXJuIiwiY29uZGl0aW9uIiwiZm9ybWF0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJjb25zb2xlIiwidW5kZWZpbmVkIiwiYXJnSW5kZXgiLCJyZXBsYWNlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/LogUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RADIAN: () => (/* binding */ RADIAN),\n/* harmony export */   degreeToRadian: () => (/* binding */ degreeToRadian),\n/* harmony export */   distanceBetweenPoints: () => (/* binding */ distanceBetweenPoints),\n/* harmony export */   formatAngleOfSector: () => (/* binding */ formatAngleOfSector),\n/* harmony export */   formatAxisMap: () => (/* binding */ formatAxisMap),\n/* harmony export */   getAngleOfPoint: () => (/* binding */ getAngleOfPoint),\n/* harmony export */   getMaxRadius: () => (/* binding */ getMaxRadius),\n/* harmony export */   getTickClassName: () => (/* binding */ getTickClassName),\n/* harmony export */   inRangeOfSector: () => (/* binding */ inRangeOfSector),\n/* harmony export */   polarToCartesian: () => (/* binding */ polarToCartesian),\n/* harmony export */   radianToDegree: () => (/* binding */ radianToDegree)\n/* harmony export */ });\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _ChartUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\n\n\n\nvar RADIAN = Math.PI / 180;\nvar degreeToRadian = function degreeToRadian(angle) {\n    return angle * Math.PI / 180;\n};\nvar radianToDegree = function radianToDegree(angleInRadian) {\n    return angleInRadian * 180 / Math.PI;\n};\nvar polarToCartesian = function polarToCartesian(cx, cy, radius, angle) {\n    return {\n        x: cx + Math.cos(-RADIAN * angle) * radius,\n        y: cy + Math.sin(-RADIAN * angle) * radius\n    };\n};\nvar getMaxRadius = function getMaxRadius(width, height) {\n    var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    };\n    return Math.min(Math.abs(width - (offset.left || 0) - (offset.right || 0)), Math.abs(height - (offset.top || 0) - (offset.bottom || 0))) / 2;\n};\n/**\n * Calculate the scale function, position, width, height of axes\n * @param  {Object} props     Latest props\n * @param  {Object} axisMap   The configuration of axes\n * @param  {Object} offset    The offset of main part in the svg element\n * @param  {Object} axisType  The type of axes, radius-axis or angle-axis\n * @param  {String} chartName The name of chart\n * @return {Object} Configuration\n */ var formatAxisMap = function formatAxisMap(props, axisMap, offset, axisType, chartName) {\n    var width = props.width, height = props.height;\n    var startAngle = props.startAngle, endAngle = props.endAngle;\n    var cx = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_3__.getPercentValue)(props.cx, width, width / 2);\n    var cy = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_3__.getPercentValue)(props.cy, height, height / 2);\n    var maxRadius = getMaxRadius(width, height, offset);\n    var innerRadius = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_3__.getPercentValue)(props.innerRadius, maxRadius, 0);\n    var outerRadius = (0,_DataUtils__WEBPACK_IMPORTED_MODULE_3__.getPercentValue)(props.outerRadius, maxRadius, maxRadius * 0.8);\n    var ids = Object.keys(axisMap);\n    return ids.reduce(function(result, id) {\n        var axis = axisMap[id];\n        var domain = axis.domain, reversed = axis.reversed;\n        var range;\n        if (lodash_isNil__WEBPACK_IMPORTED_MODULE_0___default()(axis.range)) {\n            if (axisType === 'angleAxis') {\n                range = [\n                    startAngle,\n                    endAngle\n                ];\n            } else if (axisType === 'radiusAxis') {\n                range = [\n                    innerRadius,\n                    outerRadius\n                ];\n            }\n            if (reversed) {\n                range = [\n                    range[1],\n                    range[0]\n                ];\n            }\n        } else {\n            range = axis.range;\n            var _range = range;\n            var _range2 = _slicedToArray(_range, 2);\n            startAngle = _range2[0];\n            endAngle = _range2[1];\n        }\n        var _parseScale = (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_4__.parseScale)(axis, chartName), realScaleType = _parseScale.realScaleType, scale = _parseScale.scale;\n        scale.domain(domain).range(range);\n        (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_4__.checkDomainOfScale)(scale);\n        var ticks = (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_4__.getTicksOfScale)(scale, _objectSpread(_objectSpread({}, axis), {}, {\n            realScaleType: realScaleType\n        }));\n        var finalAxis = _objectSpread(_objectSpread(_objectSpread({}, axis), ticks), {}, {\n            range: range,\n            radius: outerRadius,\n            realScaleType: realScaleType,\n            scale: scale,\n            cx: cx,\n            cy: cy,\n            innerRadius: innerRadius,\n            outerRadius: outerRadius,\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, id, finalAxis));\n    }, {});\n};\nvar distanceBetweenPoints = function distanceBetweenPoints(point, anotherPoint) {\n    var x1 = point.x, y1 = point.y;\n    var x2 = anotherPoint.x, y2 = anotherPoint.y;\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n};\nvar getAngleOfPoint = function getAngleOfPoint(_ref, _ref2) {\n    var x = _ref.x, y = _ref.y;\n    var cx = _ref2.cx, cy = _ref2.cy;\n    var radius = distanceBetweenPoints({\n        x: x,\n        y: y\n    }, {\n        x: cx,\n        y: cy\n    });\n    if (radius <= 0) {\n        return {\n            radius: radius\n        };\n    }\n    var cos = (x - cx) / radius;\n    var angleInRadian = Math.acos(cos);\n    if (y > cy) {\n        angleInRadian = 2 * Math.PI - angleInRadian;\n    }\n    return {\n        radius: radius,\n        angle: radianToDegree(angleInRadian),\n        angleInRadian: angleInRadian\n    };\n};\nvar formatAngleOfSector = function formatAngleOfSector(_ref3) {\n    var startAngle = _ref3.startAngle, endAngle = _ref3.endAngle;\n    var startCnt = Math.floor(startAngle / 360);\n    var endCnt = Math.floor(endAngle / 360);\n    var min = Math.min(startCnt, endCnt);\n    return {\n        startAngle: startAngle - min * 360,\n        endAngle: endAngle - min * 360\n    };\n};\nvar reverseFormatAngleOfSetor = function reverseFormatAngleOfSetor(angle, _ref4) {\n    var startAngle = _ref4.startAngle, endAngle = _ref4.endAngle;\n    var startCnt = Math.floor(startAngle / 360);\n    var endCnt = Math.floor(endAngle / 360);\n    var min = Math.min(startCnt, endCnt);\n    return angle + min * 360;\n};\nvar inRangeOfSector = function inRangeOfSector(_ref5, sector) {\n    var x = _ref5.x, y = _ref5.y;\n    var _getAngleOfPoint = getAngleOfPoint({\n        x: x,\n        y: y\n    }, sector), radius = _getAngleOfPoint.radius, angle = _getAngleOfPoint.angle;\n    var innerRadius = sector.innerRadius, outerRadius = sector.outerRadius;\n    if (radius < innerRadius || radius > outerRadius) {\n        return false;\n    }\n    if (radius === 0) {\n        return true;\n    }\n    var _formatAngleOfSector = formatAngleOfSector(sector), startAngle = _formatAngleOfSector.startAngle, endAngle = _formatAngleOfSector.endAngle;\n    var formatAngle = angle;\n    var inRange;\n    if (startAngle <= endAngle) {\n        while(formatAngle > endAngle){\n            formatAngle -= 360;\n        }\n        while(formatAngle < startAngle){\n            formatAngle += 360;\n        }\n        inRange = formatAngle >= startAngle && formatAngle <= endAngle;\n    } else {\n        while(formatAngle > startAngle){\n            formatAngle -= 360;\n        }\n        while(formatAngle < endAngle){\n            formatAngle += 360;\n        }\n        inRange = formatAngle >= endAngle && formatAngle <= startAngle;\n    }\n    if (inRange) {\n        return _objectSpread(_objectSpread({}, sector), {}, {\n            radius: radius,\n            angle: reverseFormatAngleOfSetor(formatAngle, sector)\n        });\n    }\n    return null;\n};\nvar getTickClassName = function getTickClassName(tick) {\n    return !/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(tick) && !lodash_isFunction__WEBPACK_IMPORTED_MODULE_2___default()(tick) && typeof tick !== 'boolean' ? tick.className : '';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LEGEND_TYPES: () => (/* binding */ LEGEND_TYPES),\n/* harmony export */   SCALE_TYPES: () => (/* binding */ SCALE_TYPES),\n/* harmony export */   TOOLTIP_TYPES: () => (/* binding */ TOOLTIP_TYPES),\n/* harmony export */   filterProps: () => (/* binding */ filterProps),\n/* harmony export */   filterSvgElements: () => (/* binding */ filterSvgElements),\n/* harmony export */   findAllByType: () => (/* binding */ findAllByType),\n/* harmony export */   findChildByType: () => (/* binding */ findChildByType),\n/* harmony export */   getDisplayName: () => (/* binding */ getDisplayName),\n/* harmony export */   getReactEventByType: () => (/* binding */ getReactEventByType),\n/* harmony export */   hasClipDot: () => (/* binding */ hasClipDot),\n/* harmony export */   isChildrenEqual: () => (/* binding */ isChildrenEqual),\n/* harmony export */   isSingleChildEqual: () => (/* binding */ isSingleChildEqual),\n/* harmony export */   isValidSpreadableProp: () => (/* binding */ isValidSpreadableProp),\n/* harmony export */   parseChildIndex: () => (/* binding */ parseChildIndex),\n/* harmony export */   renderByOrder: () => (/* binding */ renderByOrder),\n/* harmony export */   toArray: () => (/* binding */ toArray),\n/* harmony export */   validateWidthHeight: () => (/* binding */ validateWidthHeight),\n/* harmony export */   withoutType: () => (/* binding */ withoutType)\n/* harmony export */ });\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/get */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/get.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isNil */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isNil.js\");\n/* harmony import */ var lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isNil__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/isString */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isString.js\");\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/isObject */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js\");\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-is */ \"(ssr)/./node_modules/.pnpm/react-is@18.3.1/node_modules/react-is/index.js\");\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n/* harmony import */ var _ShallowEqual__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ShallowEqual */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ShallowEqual.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\");\nvar _excluded = [\n    \"children\"\n], _excluded2 = [\n    \"children\"\n];\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    for(var key in source){\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\n\n\n\n\n\n\n\n\n\n\nvar REACT_BROWSER_EVENT_MAP = {\n    click: 'onClick',\n    mousedown: 'onMouseDown',\n    mouseup: 'onMouseUp',\n    mouseover: 'onMouseOver',\n    mousemove: 'onMouseMove',\n    mouseout: 'onMouseOut',\n    mouseenter: 'onMouseEnter',\n    mouseleave: 'onMouseLeave',\n    touchcancel: 'onTouchCancel',\n    touchend: 'onTouchEnd',\n    touchmove: 'onTouchMove',\n    touchstart: 'onTouchStart',\n    contextmenu: 'onContextMenu',\n    dblclick: 'onDoubleClick'\n};\nvar SCALE_TYPES = [\n    'auto',\n    'linear',\n    'pow',\n    'sqrt',\n    'log',\n    'identity',\n    'time',\n    'band',\n    'point',\n    'ordinal',\n    'quantile',\n    'quantize',\n    'utc',\n    'sequential',\n    'threshold'\n];\nvar LEGEND_TYPES = [\n    'plainline',\n    'line',\n    'square',\n    'rect',\n    'circle',\n    'cross',\n    'diamond',\n    'star',\n    'triangle',\n    'wye',\n    'none'\n];\nvar TOOLTIP_TYPES = [\n    'none'\n];\n/**\n * Get the display name of a component\n * @param  {Object} Comp Specified Component\n * @return {String}      Display name of Component\n */ var getDisplayName = function getDisplayName(Comp) {\n    if (typeof Comp === 'string') {\n        return Comp;\n    }\n    if (!Comp) {\n        return '';\n    }\n    return Comp.displayName || Comp.name || 'Component';\n};\n// `toArray` gets called multiple times during the render\n// so we can memoize last invocation (since reference to `children` is the same)\nvar lastChildren = null;\nvar lastResult = null;\nvar toArray = function toArray(children) {\n    if (children === lastChildren && Array.isArray(lastResult)) {\n        return lastResult;\n    }\n    var result = [];\n    react__WEBPACK_IMPORTED_MODULE_5__.Children.forEach(children, function(child) {\n        if (lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(child)) return;\n        if ((0,react_is__WEBPACK_IMPORTED_MODULE_6__.isFragment)(child)) {\n            result = result.concat(toArray(child.props.children));\n        } else {\n            // @ts-expect-error this could still be Iterable<ReactNode> and TS does not like that\n            result.push(child);\n        }\n    });\n    lastResult = result;\n    lastChildren = children;\n    return result;\n};\n/*\n * Find and return all matched children by type.\n * `type` must be a React.ComponentType\n */ function findAllByType(children, type) {\n    var result = [];\n    var types = [];\n    if (Array.isArray(type)) {\n        types = type.map(function(t) {\n            return getDisplayName(t);\n        });\n    } else {\n        types = [\n            getDisplayName(type)\n        ];\n    }\n    toArray(children).forEach(function(child) {\n        var childType = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(child, 'type.displayName') || lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(child, 'type.name');\n        if (types.indexOf(childType) !== -1) {\n            result.push(child);\n        }\n    });\n    return result;\n}\n/*\n * Return the first matched child by type, return null otherwise.\n * `type` must be a React.ComponentType\n */ function findChildByType(children, type) {\n    var result = findAllByType(children, type);\n    return result && result[0];\n}\n/*\n * Create a new array of children excluding the ones matched the type\n */ var withoutType = function withoutType(children, type) {\n    var newChildren = [];\n    var types;\n    if (Array.isArray(type)) {\n        types = type.map(function(t) {\n            return getDisplayName(t);\n        });\n    } else {\n        types = [\n            getDisplayName(type)\n        ];\n    }\n    toArray(children).forEach(function(child) {\n        var displayName = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(child, 'type.displayName');\n        if (displayName && types.indexOf(displayName) !== -1) {\n            return;\n        }\n        newChildren.push(child);\n    });\n    return newChildren;\n};\n/**\n * validate the width and height props of a chart element\n * @param  {Object} el A chart element\n * @return {Boolean}   true If the props width and height are number, and greater than 0\n */ var validateWidthHeight = function validateWidthHeight(el) {\n    if (!el || !el.props) {\n        return false;\n    }\n    var _el$props = el.props, width = _el$props.width, height = _el$props.height;\n    if (!(0,_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(width) || width <= 0 || !(0,_DataUtils__WEBPACK_IMPORTED_MODULE_7__.isNumber)(height) || height <= 0) {\n        return false;\n    }\n    return true;\n};\nvar SVG_TAGS = [\n    'a',\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animate',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'circle',\n    'clipPath',\n    'color-profile',\n    'cursor',\n    'defs',\n    'desc',\n    'ellipse',\n    'feBlend',\n    'feColormatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'filter',\n    'font',\n    'font-face',\n    'font-face-format',\n    'font-face-name',\n    'font-face-url',\n    'foreignObject',\n    'g',\n    'glyph',\n    'glyphRef',\n    'hkern',\n    'image',\n    'line',\n    'lineGradient',\n    'marker',\n    'mask',\n    'metadata',\n    'missing-glyph',\n    'mpath',\n    'path',\n    'pattern',\n    'polygon',\n    'polyline',\n    'radialGradient',\n    'rect',\n    'script',\n    'set',\n    'stop',\n    'style',\n    'svg',\n    'switch',\n    'symbol',\n    'text',\n    'textPath',\n    'title',\n    'tref',\n    'tspan',\n    'use',\n    'view',\n    'vkern'\n];\nvar isSvgElement = function isSvgElement(child) {\n    return child && child.type && lodash_isString__WEBPACK_IMPORTED_MODULE_2___default()(child.type) && SVG_TAGS.indexOf(child.type) >= 0;\n};\nvar hasClipDot = function hasClipDot(dot) {\n    return dot && _typeof(dot) === 'object' && 'clipDot' in dot;\n};\n/**\n * Checks if the property is valid to spread onto an SVG element or onto a specific component\n * @param {unknown} property property value currently being compared\n * @param {string} key property key currently being compared\n * @param {boolean} includeEvents if events are included in spreadable props\n * @param {boolean} svgElementType checks against map of SVG element types to attributes\n * @returns {boolean} is prop valid\n */ var isValidSpreadableProp = function isValidSpreadableProp(property, key, includeEvents, svgElementType) {\n    var _FilteredElementKeyMa;\n    /**\n   * If the svg element type is explicitly included, check against the filtered element key map\n   * to determine if there are attributes that should only exist on that element type.\n   * @todo Add an internal cjs version of https://github.com/wooorm/svg-element-attributes for full coverage.\n   */ var matchingElementTypeKeys = (_FilteredElementKeyMa = _types__WEBPACK_IMPORTED_MODULE_8__.FilteredElementKeyMap === null || _types__WEBPACK_IMPORTED_MODULE_8__.FilteredElementKeyMap === void 0 ? void 0 : _types__WEBPACK_IMPORTED_MODULE_8__.FilteredElementKeyMap[svgElementType]) !== null && _FilteredElementKeyMa !== void 0 ? _FilteredElementKeyMa : [];\n    return key.startsWith('data-') || !lodash_isFunction__WEBPACK_IMPORTED_MODULE_3___default()(property) && (svgElementType && matchingElementTypeKeys.includes(key) || _types__WEBPACK_IMPORTED_MODULE_8__.SVGElementPropKeys.includes(key)) || includeEvents && _types__WEBPACK_IMPORTED_MODULE_8__.EventKeys.includes(key);\n};\n/**\n * Filter all the svg elements of children\n * @param  {Array} children The children of a react element\n * @return {Array}          All the svg elements\n */ var filterSvgElements = function filterSvgElements(children) {\n    var svgElements = [];\n    toArray(children).forEach(function(entry) {\n        if (isSvgElement(entry)) {\n            svgElements.push(entry);\n        }\n    });\n    return svgElements;\n};\nvar filterProps = function filterProps(props, includeEvents, svgElementType) {\n    if (!props || typeof props === 'function' || typeof props === 'boolean') {\n        return null;\n    }\n    var inputProps = props;\n    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_5__.isValidElement)(props)) {\n        inputProps = props.props;\n    }\n    if (!lodash_isObject__WEBPACK_IMPORTED_MODULE_4___default()(inputProps)) {\n        return null;\n    }\n    var out = {};\n    /**\n   * Props are blindly spread onto SVG elements. This loop filters out properties that we don't want to spread.\n   * Items filtered out are as follows:\n   *   - functions in properties that are SVG attributes (functions are included when includeEvents is true)\n   *   - props that are SVG attributes but don't matched the passed svgElementType\n   *   - any prop that is not in SVGElementPropKeys (or in EventKeys if includeEvents is true)\n   */ Object.keys(inputProps).forEach(function(key) {\n        var _inputProps;\n        if (isValidSpreadableProp((_inputProps = inputProps) === null || _inputProps === void 0 ? void 0 : _inputProps[key], key, includeEvents, svgElementType)) {\n            out[key] = inputProps[key];\n        }\n    });\n    return out;\n};\n/**\n * Wether props of children changed\n * @param  {Object} nextChildren The latest children\n * @param  {Object} prevChildren The prev children\n * @return {Boolean}             equal or not\n */ var isChildrenEqual = function isChildrenEqual(nextChildren, prevChildren) {\n    if (nextChildren === prevChildren) {\n        return true;\n    }\n    var count = react__WEBPACK_IMPORTED_MODULE_5__.Children.count(nextChildren);\n    if (count !== react__WEBPACK_IMPORTED_MODULE_5__.Children.count(prevChildren)) {\n        return false;\n    }\n    if (count === 0) {\n        return true;\n    }\n    if (count === 1) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return isSingleChildEqual(Array.isArray(nextChildren) ? nextChildren[0] : nextChildren, Array.isArray(prevChildren) ? prevChildren[0] : prevChildren);\n    }\n    for(var i = 0; i < count; i++){\n        var nextChild = nextChildren[i];\n        var prevChild = prevChildren[i];\n        if (Array.isArray(nextChild) || Array.isArray(prevChild)) {\n            if (!isChildrenEqual(nextChild, prevChild)) {\n                return false;\n            }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        } else if (!isSingleChildEqual(nextChild, prevChild)) {\n            return false;\n        }\n    }\n    return true;\n};\nvar isSingleChildEqual = function isSingleChildEqual(nextChild, prevChild) {\n    if (lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(nextChild) && lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(prevChild)) {\n        return true;\n    }\n    if (!lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(nextChild) && !lodash_isNil__WEBPACK_IMPORTED_MODULE_1___default()(prevChild)) {\n        var _ref = nextChild.props || {}, nextChildren = _ref.children, nextProps = _objectWithoutProperties(_ref, _excluded);\n        var _ref2 = prevChild.props || {}, prevChildren = _ref2.children, prevProps = _objectWithoutProperties(_ref2, _excluded2);\n        if (nextChildren && prevChildren) {\n            return (0,_ShallowEqual__WEBPACK_IMPORTED_MODULE_9__.shallowEqual)(nextProps, prevProps) && isChildrenEqual(nextChildren, prevChildren);\n        }\n        if (!nextChildren && !prevChildren) {\n            return (0,_ShallowEqual__WEBPACK_IMPORTED_MODULE_9__.shallowEqual)(nextProps, prevProps);\n        }\n        return false;\n    }\n    return false;\n};\nvar renderByOrder = function renderByOrder(children, renderMap) {\n    var elements = [];\n    var record = {};\n    toArray(children).forEach(function(child, index) {\n        if (isSvgElement(child)) {\n            elements.push(child);\n        } else if (child) {\n            var displayName = getDisplayName(child.type);\n            var _ref3 = renderMap[displayName] || {}, handler = _ref3.handler, once = _ref3.once;\n            if (handler && (!once || !record[displayName])) {\n                var results = handler(child, displayName, index);\n                elements.push(results);\n                record[displayName] = true;\n            }\n        }\n    });\n    return elements;\n};\nvar getReactEventByType = function getReactEventByType(e) {\n    var type = e && e.type;\n    if (type && REACT_BROWSER_EVENT_MAP[type]) {\n        return REACT_BROWSER_EVENT_MAP[type];\n    }\n    return null;\n};\nvar parseChildIndex = function parseChildIndex(child, children) {\n    return toArray(children).indexOf(child);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReduceCSSCalc.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReduceCSSCalc.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   reduceCSSCalc: () => (/* binding */ reduceCSSCalc),\n/* harmony export */   safeEvaluateExpression: () => (/* binding */ safeEvaluateExpression)\n/* harmony export */ });\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nvar MULTIPLY_OR_DIVIDE_REGEX = /(-?\\d+(?:\\.\\d+)?[a-zA-Z%]*)([*/])(-?\\d+(?:\\.\\d+)?[a-zA-Z%]*)/;\nvar ADD_OR_SUBTRACT_REGEX = /(-?\\d+(?:\\.\\d+)?[a-zA-Z%]*)([+-])(-?\\d+(?:\\.\\d+)?[a-zA-Z%]*)/;\nvar CSS_LENGTH_UNIT_REGEX = /^px|cm|vh|vw|em|rem|%|mm|in|pt|pc|ex|ch|vmin|vmax|Q$/;\nvar NUM_SPLIT_REGEX = /(-?\\d+(?:\\.\\d+)?)([a-zA-Z%]+)?/;\nvar CONVERSION_RATES = {\n    cm: 96 / 2.54,\n    mm: 96 / 25.4,\n    pt: 96 / 72,\n    pc: 96 / 6,\n    \"in\": 96,\n    Q: 96 / (2.54 * 40),\n    px: 1\n};\nvar FIXED_CSS_LENGTH_UNITS = Object.keys(CONVERSION_RATES);\nvar STR_NAN = 'NaN';\nfunction convertToPx(value, unit) {\n    return value * CONVERSION_RATES[unit];\n}\nvar DecimalCSS = /*#__PURE__*/ function() {\n    function DecimalCSS(num, unit) {\n        _classCallCheck(this, DecimalCSS);\n        this.num = num;\n        this.unit = unit;\n        this.num = num;\n        this.unit = unit;\n        if (Number.isNaN(num)) {\n            this.unit = '';\n        }\n        if (unit !== '' && !CSS_LENGTH_UNIT_REGEX.test(unit)) {\n            this.num = NaN;\n            this.unit = '';\n        }\n        if (FIXED_CSS_LENGTH_UNITS.includes(unit)) {\n            this.num = convertToPx(num, unit);\n            this.unit = 'px';\n        }\n    }\n    return _createClass(DecimalCSS, [\n        {\n            key: \"add\",\n            value: function add(other) {\n                if (this.unit !== other.unit) {\n                    return new DecimalCSS(NaN, '');\n                }\n                return new DecimalCSS(this.num + other.num, this.unit);\n            }\n        },\n        {\n            key: \"subtract\",\n            value: function subtract(other) {\n                if (this.unit !== other.unit) {\n                    return new DecimalCSS(NaN, '');\n                }\n                return new DecimalCSS(this.num - other.num, this.unit);\n            }\n        },\n        {\n            key: \"multiply\",\n            value: function multiply(other) {\n                if (this.unit !== '' && other.unit !== '' && this.unit !== other.unit) {\n                    return new DecimalCSS(NaN, '');\n                }\n                return new DecimalCSS(this.num * other.num, this.unit || other.unit);\n            }\n        },\n        {\n            key: \"divide\",\n            value: function divide(other) {\n                if (this.unit !== '' && other.unit !== '' && this.unit !== other.unit) {\n                    return new DecimalCSS(NaN, '');\n                }\n                return new DecimalCSS(this.num / other.num, this.unit || other.unit);\n            }\n        },\n        {\n            key: \"toString\",\n            value: function toString() {\n                return \"\".concat(this.num).concat(this.unit);\n            }\n        },\n        {\n            key: \"isNaN\",\n            value: function isNaN() {\n                return Number.isNaN(this.num);\n            }\n        }\n    ], [\n        {\n            key: \"parse\",\n            value: function parse(str) {\n                var _NUM_SPLIT_REGEX$exec;\n                var _ref = (_NUM_SPLIT_REGEX$exec = NUM_SPLIT_REGEX.exec(str)) !== null && _NUM_SPLIT_REGEX$exec !== void 0 ? _NUM_SPLIT_REGEX$exec : [], _ref2 = _slicedToArray(_ref, 3), numStr = _ref2[1], unit = _ref2[2];\n                return new DecimalCSS(parseFloat(numStr), unit !== null && unit !== void 0 ? unit : '');\n            }\n        }\n    ]);\n}();\nfunction calculateArithmetic(expr) {\n    if (expr.includes(STR_NAN)) {\n        return STR_NAN;\n    }\n    var newExpr = expr;\n    while(newExpr.includes('*') || newExpr.includes('/')){\n        var _MULTIPLY_OR_DIVIDE_R;\n        var _ref3 = (_MULTIPLY_OR_DIVIDE_R = MULTIPLY_OR_DIVIDE_REGEX.exec(newExpr)) !== null && _MULTIPLY_OR_DIVIDE_R !== void 0 ? _MULTIPLY_OR_DIVIDE_R : [], _ref4 = _slicedToArray(_ref3, 4), leftOperand = _ref4[1], operator = _ref4[2], rightOperand = _ref4[3];\n        var lTs = DecimalCSS.parse(leftOperand !== null && leftOperand !== void 0 ? leftOperand : '');\n        var rTs = DecimalCSS.parse(rightOperand !== null && rightOperand !== void 0 ? rightOperand : '');\n        var result = operator === '*' ? lTs.multiply(rTs) : lTs.divide(rTs);\n        if (result.isNaN()) {\n            return STR_NAN;\n        }\n        newExpr = newExpr.replace(MULTIPLY_OR_DIVIDE_REGEX, result.toString());\n    }\n    while(newExpr.includes('+') || /.-\\d+(?:\\.\\d+)?/.test(newExpr)){\n        var _ADD_OR_SUBTRACT_REGE;\n        var _ref5 = (_ADD_OR_SUBTRACT_REGE = ADD_OR_SUBTRACT_REGEX.exec(newExpr)) !== null && _ADD_OR_SUBTRACT_REGE !== void 0 ? _ADD_OR_SUBTRACT_REGE : [], _ref6 = _slicedToArray(_ref5, 4), _leftOperand = _ref6[1], _operator = _ref6[2], _rightOperand = _ref6[3];\n        var _lTs = DecimalCSS.parse(_leftOperand !== null && _leftOperand !== void 0 ? _leftOperand : '');\n        var _rTs = DecimalCSS.parse(_rightOperand !== null && _rightOperand !== void 0 ? _rightOperand : '');\n        var _result = _operator === '+' ? _lTs.add(_rTs) : _lTs.subtract(_rTs);\n        if (_result.isNaN()) {\n            return STR_NAN;\n        }\n        newExpr = newExpr.replace(ADD_OR_SUBTRACT_REGEX, _result.toString());\n    }\n    return newExpr;\n}\nvar PARENTHESES_REGEX = /\\(([^()]*)\\)/;\nfunction calculateParentheses(expr) {\n    var newExpr = expr;\n    while(newExpr.includes('(')){\n        var _PARENTHESES_REGEX$ex = PARENTHESES_REGEX.exec(newExpr), _PARENTHESES_REGEX$ex2 = _slicedToArray(_PARENTHESES_REGEX$ex, 2), parentheticalExpression = _PARENTHESES_REGEX$ex2[1];\n        newExpr = newExpr.replace(PARENTHESES_REGEX, calculateArithmetic(parentheticalExpression));\n    }\n    return newExpr;\n}\nfunction evaluateExpression(expression) {\n    var newExpr = expression.replace(/\\s+/g, '');\n    newExpr = calculateParentheses(newExpr);\n    newExpr = calculateArithmetic(newExpr);\n    return newExpr;\n}\nfunction safeEvaluateExpression(expression) {\n    try {\n        return evaluateExpression(expression);\n    } catch (e) {\n        /* istanbul ignore next */ return STR_NAN;\n    }\n}\nfunction reduceCSSCalc(expression) {\n    var result = safeEvaluateExpression(expression.slice(5, -1));\n    if (result === STR_NAN) {\n        // notify the user\n        return '';\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReduceCSSCalc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ShallowEqual.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ShallowEqual.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shallowEqual: () => (/* binding */ shallowEqual)\n/* harmony export */ });\nfunction shallowEqual(a, b) {\n    /* eslint-disable no-restricted-syntax */ for(var key in a){\n        if (({}).hasOwnProperty.call(a, key) && (!({}).hasOwnProperty.call(b, key) || a[key] !== b[key])) {\n            return false;\n        }\n    }\n    for(var _key in b){\n        if (({}).hasOwnProperty.call(b, _key) && !({}).hasOwnProperty.call(a, _key)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL1NoYWxsb3dFcXVhbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsYUFBYUMsQ0FBQyxFQUFFQyxDQUFDO0lBQy9CLHVDQUF1QyxHQUN2QyxJQUFLLElBQUlDLE9BQU9GLEVBQUc7UUFDakIsSUFBSSxFQUFDLEdBQUVHLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixHQUFHRSxRQUFTLEVBQUMsRUFBQyxHQUFFQyxjQUFjLENBQUNDLElBQUksQ0FBQ0gsR0FBR0MsUUFBUUYsQ0FBQyxDQUFDRSxJQUFJLEtBQUtELENBQUMsQ0FBQ0MsSUFBSSxHQUFHO1lBQzVGLE9BQU87UUFDVDtJQUNGO0lBQ0EsSUFBSyxJQUFJRyxRQUFRSixFQUFHO1FBQ2xCLElBQUksRUFBQyxHQUFFRSxjQUFjLENBQUNDLElBQUksQ0FBQ0gsR0FBR0ksU0FBUyxDQUFDLEVBQUMsR0FBRUYsY0FBYyxDQUFDQyxJQUFJLENBQUNKLEdBQUdLLE9BQU87WUFDdkUsT0FBTztRQUNUO0lBQ0Y7SUFDQSxPQUFPO0FBQ1QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvdXRpbC9TaGFsbG93RXF1YWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChhLCBiKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLXJlc3RyaWN0ZWQtc3ludGF4ICovXG4gIGZvciAodmFyIGtleSBpbiBhKSB7XG4gICAgaWYgKHt9Lmhhc093blByb3BlcnR5LmNhbGwoYSwga2V5KSAmJiAoIXt9Lmhhc093blByb3BlcnR5LmNhbGwoYiwga2V5KSB8fCBhW2tleV0gIT09IGJba2V5XSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgZm9yICh2YXIgX2tleSBpbiBiKSB7XG4gICAgaWYgKHt9Lmhhc093blByb3BlcnR5LmNhbGwoYiwgX2tleSkgJiYgIXt9Lmhhc093blByb3BlcnR5LmNhbGwoYSwgX2tleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59Il0sIm5hbWVzIjpbInNoYWxsb3dFcXVhbCIsImEiLCJiIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX2tleSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ShallowEqual.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/TickUtils.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/TickUtils.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAngledTickWidth: () => (/* binding */ getAngledTickWidth),\n/* harmony export */   getNumberIntervalTicks: () => (/* binding */ getNumberIntervalTicks),\n/* harmony export */   getTickBoundaries: () => (/* binding */ getTickBoundaries),\n/* harmony export */   isVisible: () => (/* binding */ isVisible)\n/* harmony export */ });\n/* harmony import */ var _CartesianUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CartesianUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/CartesianUtils.js\");\n/* harmony import */ var _getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getEveryNthWithCondition */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getEveryNthWithCondition.js\");\n\n\nfunction getAngledTickWidth(contentSize, unitSize, angle) {\n    var size = {\n        width: contentSize.width + unitSize.width,\n        height: contentSize.height + unitSize.height\n    };\n    return (0,_CartesianUtils__WEBPACK_IMPORTED_MODULE_0__.getAngledRectangleWidth)(size, angle);\n}\nfunction getTickBoundaries(viewBox, sign, sizeKey) {\n    var isWidth = sizeKey === 'width';\n    var x = viewBox.x, y = viewBox.y, width = viewBox.width, height = viewBox.height;\n    if (sign === 1) {\n        return {\n            start: isWidth ? x : y,\n            end: isWidth ? x + width : y + height\n        };\n    }\n    return {\n        start: isWidth ? x + width : y + height,\n        end: isWidth ? x : y\n    };\n}\nfunction isVisible(sign, tickPosition, getSize, start, end) {\n    /* Since getSize() is expensive (it reads the ticks' size from the DOM), we do this check first to avoid calculating\n   * the tick's size. */ if (sign * tickPosition < sign * start || sign * tickPosition > sign * end) {\n        return false;\n    }\n    var size = getSize();\n    return sign * (tickPosition - sign * size / 2 - start) >= 0 && sign * (tickPosition + sign * size / 2 - end) <= 0;\n}\nfunction getNumberIntervalTicks(ticks, interval) {\n    return (0,_getEveryNthWithCondition__WEBPACK_IMPORTED_MODULE_1__.getEveryNthWithCondition)(ticks, interval + 1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL1RpY2tVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkQ7QUFDVztBQUMvRCxTQUFTRSxtQkFBbUJDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxLQUFLO0lBQzdELElBQUlDLE9BQU87UUFDVEMsT0FBT0osWUFBWUksS0FBSyxHQUFHSCxTQUFTRyxLQUFLO1FBQ3pDQyxRQUFRTCxZQUFZSyxNQUFNLEdBQUdKLFNBQVNJLE1BQU07SUFDOUM7SUFDQSxPQUFPUix3RUFBdUJBLENBQUNNLE1BQU1EO0FBQ3ZDO0FBQ08sU0FBU0ksa0JBQWtCQyxPQUFPLEVBQUVDLElBQUksRUFBRUMsT0FBTztJQUN0RCxJQUFJQyxVQUFVRCxZQUFZO0lBQzFCLElBQUlFLElBQUlKLFFBQVFJLENBQUMsRUFDZkMsSUFBSUwsUUFBUUssQ0FBQyxFQUNiUixRQUFRRyxRQUFRSCxLQUFLLEVBQ3JCQyxTQUFTRSxRQUFRRixNQUFNO0lBQ3pCLElBQUlHLFNBQVMsR0FBRztRQUNkLE9BQU87WUFDTEssT0FBT0gsVUFBVUMsSUFBSUM7WUFDckJFLEtBQUtKLFVBQVVDLElBQUlQLFFBQVFRLElBQUlQO1FBQ2pDO0lBQ0Y7SUFDQSxPQUFPO1FBQ0xRLE9BQU9ILFVBQVVDLElBQUlQLFFBQVFRLElBQUlQO1FBQ2pDUyxLQUFLSixVQUFVQyxJQUFJQztJQUNyQjtBQUNGO0FBQ08sU0FBU0csVUFBVVAsSUFBSSxFQUFFUSxZQUFZLEVBQUVDLE9BQU8sRUFBRUosS0FBSyxFQUFFQyxHQUFHO0lBQy9EO3NCQUNvQixHQUNwQixJQUFJTixPQUFPUSxlQUFlUixPQUFPSyxTQUFTTCxPQUFPUSxlQUFlUixPQUFPTSxLQUFLO1FBQzFFLE9BQU87SUFDVDtJQUNBLElBQUlYLE9BQU9jO0lBQ1gsT0FBT1QsT0FBUVEsQ0FBQUEsZUFBZVIsT0FBT0wsT0FBTyxJQUFJVSxLQUFJLEtBQU0sS0FBS0wsT0FBUVEsQ0FBQUEsZUFBZVIsT0FBT0wsT0FBTyxJQUFJVyxHQUFFLEtBQU07QUFDbEg7QUFDTyxTQUFTSSx1QkFBdUJDLEtBQUssRUFBRUMsUUFBUTtJQUNwRCxPQUFPdEIsbUZBQXdCQSxDQUFDcUIsT0FBT0MsV0FBVztBQUNwRCIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL1RpY2tVdGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBbmdsZWRSZWN0YW5nbGVXaWR0aCB9IGZyb20gJy4vQ2FydGVzaWFuVXRpbHMnO1xuaW1wb3J0IHsgZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uIH0gZnJvbSAnLi9nZXRFdmVyeU50aFdpdGhDb25kaXRpb24nO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFuZ2xlZFRpY2tXaWR0aChjb250ZW50U2l6ZSwgdW5pdFNpemUsIGFuZ2xlKSB7XG4gIHZhciBzaXplID0ge1xuICAgIHdpZHRoOiBjb250ZW50U2l6ZS53aWR0aCArIHVuaXRTaXplLndpZHRoLFxuICAgIGhlaWdodDogY29udGVudFNpemUuaGVpZ2h0ICsgdW5pdFNpemUuaGVpZ2h0XG4gIH07XG4gIHJldHVybiBnZXRBbmdsZWRSZWN0YW5nbGVXaWR0aChzaXplLCBhbmdsZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VGlja0JvdW5kYXJpZXModmlld0JveCwgc2lnbiwgc2l6ZUtleSkge1xuICB2YXIgaXNXaWR0aCA9IHNpemVLZXkgPT09ICd3aWR0aCc7XG4gIHZhciB4ID0gdmlld0JveC54LFxuICAgIHkgPSB2aWV3Qm94LnksXG4gICAgd2lkdGggPSB2aWV3Qm94LndpZHRoLFxuICAgIGhlaWdodCA9IHZpZXdCb3guaGVpZ2h0O1xuICBpZiAoc2lnbiA9PT0gMSkge1xuICAgIHJldHVybiB7XG4gICAgICBzdGFydDogaXNXaWR0aCA/IHggOiB5LFxuICAgICAgZW5kOiBpc1dpZHRoID8geCArIHdpZHRoIDogeSArIGhlaWdodFxuICAgIH07XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzdGFydDogaXNXaWR0aCA/IHggKyB3aWR0aCA6IHkgKyBoZWlnaHQsXG4gICAgZW5kOiBpc1dpZHRoID8geCA6IHlcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Zpc2libGUoc2lnbiwgdGlja1Bvc2l0aW9uLCBnZXRTaXplLCBzdGFydCwgZW5kKSB7XG4gIC8qIFNpbmNlIGdldFNpemUoKSBpcyBleHBlbnNpdmUgKGl0IHJlYWRzIHRoZSB0aWNrcycgc2l6ZSBmcm9tIHRoZSBET00pLCB3ZSBkbyB0aGlzIGNoZWNrIGZpcnN0IHRvIGF2b2lkIGNhbGN1bGF0aW5nXG4gICAqIHRoZSB0aWNrJ3Mgc2l6ZS4gKi9cbiAgaWYgKHNpZ24gKiB0aWNrUG9zaXRpb24gPCBzaWduICogc3RhcnQgfHwgc2lnbiAqIHRpY2tQb3NpdGlvbiA+IHNpZ24gKiBlbmQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHNpemUgPSBnZXRTaXplKCk7XG4gIHJldHVybiBzaWduICogKHRpY2tQb3NpdGlvbiAtIHNpZ24gKiBzaXplIC8gMiAtIHN0YXJ0KSA+PSAwICYmIHNpZ24gKiAodGlja1Bvc2l0aW9uICsgc2lnbiAqIHNpemUgLyAyIC0gZW5kKSA8PSAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE51bWJlckludGVydmFsVGlja3ModGlja3MsIGludGVydmFsKSB7XG4gIHJldHVybiBnZXRFdmVyeU50aFdpdGhDb25kaXRpb24odGlja3MsIGludGVydmFsICsgMSk7XG59Il0sIm5hbWVzIjpbImdldEFuZ2xlZFJlY3RhbmdsZVdpZHRoIiwiZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uIiwiZ2V0QW5nbGVkVGlja1dpZHRoIiwiY29udGVudFNpemUiLCJ1bml0U2l6ZSIsImFuZ2xlIiwic2l6ZSIsIndpZHRoIiwiaGVpZ2h0IiwiZ2V0VGlja0JvdW5kYXJpZXMiLCJ2aWV3Qm94Iiwic2lnbiIsInNpemVLZXkiLCJpc1dpZHRoIiwieCIsInkiLCJzdGFydCIsImVuZCIsImlzVmlzaWJsZSIsInRpY2tQb3NpdGlvbiIsImdldFNpemUiLCJnZXROdW1iZXJJbnRlcnZhbFRpY2tzIiwidGlja3MiLCJpbnRlcnZhbCJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/TickUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/calculateViewBox.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/calculateViewBox.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateViewBox: () => (/* binding */ calculateViewBox)\n/* harmony export */ });\n/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/memoize */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/memoize.js\");\n/* harmony import */ var lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_memoize__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * This is memoized because the viewBox is unlikely to change often\n * - but because it is computed from offset, any change to it would re-render all children.\n *\n * And because we have many readers of the viewBox, and update it only rarely,\n * then let's optimize with memoization.\n */ var calculateViewBox = lodash_memoize__WEBPACK_IMPORTED_MODULE_0___default()(function(offset) {\n    return {\n        x: offset.left,\n        y: offset.top,\n        width: offset.width,\n        height: offset.height\n    };\n}, function(offset) {\n    return [\n        'l',\n        offset.left,\n        't',\n        offset.top,\n        'w',\n        offset.width,\n        'h',\n        offset.height\n    ].join('');\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL2NhbGN1bGF0ZVZpZXdCb3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ3JDOzs7Ozs7Q0FNQyxHQUNNLElBQUlDLG1CQUFtQkQscURBQU9BLENBQUMsU0FBVUUsTUFBTTtJQUNwRCxPQUFPO1FBQ0xDLEdBQUdELE9BQU9FLElBQUk7UUFDZEMsR0FBR0gsT0FBT0ksR0FBRztRQUNiQyxPQUFPTCxPQUFPSyxLQUFLO1FBQ25CQyxRQUFRTixPQUFPTSxNQUFNO0lBQ3ZCO0FBQ0YsR0FBRyxTQUFVTixNQUFNO0lBQ2pCLE9BQU87UUFBQztRQUFLQSxPQUFPRSxJQUFJO1FBQUU7UUFBS0YsT0FBT0ksR0FBRztRQUFFO1FBQUtKLE9BQU9LLEtBQUs7UUFBRTtRQUFLTCxPQUFPTSxNQUFNO0tBQUMsQ0FBQ0MsSUFBSSxDQUFDO0FBQ3pGLEdBQUciLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvdXRpbC9jYWxjdWxhdGVWaWV3Qm94LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtZW1vaXplIGZyb20gJ2xvZGFzaC9tZW1vaXplJztcbi8qKlxuICogVGhpcyBpcyBtZW1vaXplZCBiZWNhdXNlIHRoZSB2aWV3Qm94IGlzIHVubGlrZWx5IHRvIGNoYW5nZSBvZnRlblxuICogLSBidXQgYmVjYXVzZSBpdCBpcyBjb21wdXRlZCBmcm9tIG9mZnNldCwgYW55IGNoYW5nZSB0byBpdCB3b3VsZCByZS1yZW5kZXIgYWxsIGNoaWxkcmVuLlxuICpcbiAqIEFuZCBiZWNhdXNlIHdlIGhhdmUgbWFueSByZWFkZXJzIG9mIHRoZSB2aWV3Qm94LCBhbmQgdXBkYXRlIGl0IG9ubHkgcmFyZWx5LFxuICogdGhlbiBsZXQncyBvcHRpbWl6ZSB3aXRoIG1lbW9pemF0aW9uLlxuICovXG5leHBvcnQgdmFyIGNhbGN1bGF0ZVZpZXdCb3ggPSBtZW1vaXplKGZ1bmN0aW9uIChvZmZzZXQpIHtcbiAgcmV0dXJuIHtcbiAgICB4OiBvZmZzZXQubGVmdCxcbiAgICB5OiBvZmZzZXQudG9wLFxuICAgIHdpZHRoOiBvZmZzZXQud2lkdGgsXG4gICAgaGVpZ2h0OiBvZmZzZXQuaGVpZ2h0XG4gIH07XG59LCBmdW5jdGlvbiAob2Zmc2V0KSB7XG4gIHJldHVybiBbJ2wnLCBvZmZzZXQubGVmdCwgJ3QnLCBvZmZzZXQudG9wLCAndycsIG9mZnNldC53aWR0aCwgJ2gnLCBvZmZzZXQuaGVpZ2h0XS5qb2luKCcnKTtcbn0pOyJdLCJuYW1lcyI6WyJtZW1vaXplIiwiY2FsY3VsYXRlVmlld0JveCIsIm9mZnNldCIsIngiLCJsZWZ0IiwieSIsInRvcCIsIndpZHRoIiwiaGVpZ2h0Iiwiam9pbiJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/calculateViewBox.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorPoints.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorPoints.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCursorPoints: () => (/* binding */ getCursorPoints)\n/* harmony export */ });\n/* harmony import */ var _PolarUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../PolarUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js\");\n/* harmony import */ var _getRadialCursorPoints__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRadialCursorPoints */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getRadialCursorPoints.js\");\n\n\nfunction getCursorPoints(layout, activeCoordinate, offset) {\n    var x1, y1, x2, y2;\n    if (layout === 'horizontal') {\n        x1 = activeCoordinate.x;\n        x2 = x1;\n        y1 = offset.top;\n        y2 = offset.top + offset.height;\n    } else if (layout === 'vertical') {\n        y1 = activeCoordinate.y;\n        y2 = y1;\n        x1 = offset.left;\n        x2 = offset.left + offset.width;\n    } else if (activeCoordinate.cx != null && activeCoordinate.cy != null) {\n        if (layout === 'centric') {\n            var cx = activeCoordinate.cx, cy = activeCoordinate.cy, innerRadius = activeCoordinate.innerRadius, outerRadius = activeCoordinate.outerRadius, angle = activeCoordinate.angle;\n            var innerPoint = (0,_PolarUtils__WEBPACK_IMPORTED_MODULE_0__.polarToCartesian)(cx, cy, innerRadius, angle);\n            var outerPoint = (0,_PolarUtils__WEBPACK_IMPORTED_MODULE_0__.polarToCartesian)(cx, cy, outerRadius, angle);\n            x1 = innerPoint.x;\n            y1 = innerPoint.y;\n            x2 = outerPoint.x;\n            y2 = outerPoint.y;\n        } else {\n            return (0,_getRadialCursorPoints__WEBPACK_IMPORTED_MODULE_1__.getRadialCursorPoints)(activeCoordinate);\n        }\n    }\n    return [\n        {\n            x: x1,\n            y: y1\n        },\n        {\n            x: x2,\n            y: y2\n        }\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL2N1cnNvci9nZXRDdXJzb3JQb2ludHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ2U7QUFDekQsU0FBU0UsZ0JBQWdCQyxNQUFNLEVBQUVDLGdCQUFnQixFQUFFQyxNQUFNO0lBQzlELElBQUlDLElBQUlDLElBQUlDLElBQUlDO0lBQ2hCLElBQUlOLFdBQVcsY0FBYztRQUMzQkcsS0FBS0YsaUJBQWlCTSxDQUFDO1FBQ3ZCRixLQUFLRjtRQUNMQyxLQUFLRixPQUFPTSxHQUFHO1FBQ2ZGLEtBQUtKLE9BQU9NLEdBQUcsR0FBR04sT0FBT08sTUFBTTtJQUNqQyxPQUFPLElBQUlULFdBQVcsWUFBWTtRQUNoQ0ksS0FBS0gsaUJBQWlCUyxDQUFDO1FBQ3ZCSixLQUFLRjtRQUNMRCxLQUFLRCxPQUFPUyxJQUFJO1FBQ2hCTixLQUFLSCxPQUFPUyxJQUFJLEdBQUdULE9BQU9VLEtBQUs7SUFDakMsT0FBTyxJQUFJWCxpQkFBaUJZLEVBQUUsSUFBSSxRQUFRWixpQkFBaUJhLEVBQUUsSUFBSSxNQUFNO1FBQ3JFLElBQUlkLFdBQVcsV0FBVztZQUN4QixJQUFJYSxLQUFLWixpQkFBaUJZLEVBQUUsRUFDMUJDLEtBQUtiLGlCQUFpQmEsRUFBRSxFQUN4QkMsY0FBY2QsaUJBQWlCYyxXQUFXLEVBQzFDQyxjQUFjZixpQkFBaUJlLFdBQVcsRUFDMUNDLFFBQVFoQixpQkFBaUJnQixLQUFLO1lBQ2hDLElBQUlDLGFBQWFyQiw2REFBZ0JBLENBQUNnQixJQUFJQyxJQUFJQyxhQUFhRTtZQUN2RCxJQUFJRSxhQUFhdEIsNkRBQWdCQSxDQUFDZ0IsSUFBSUMsSUFBSUUsYUFBYUM7WUFDdkRkLEtBQUtlLFdBQVdYLENBQUM7WUFDakJILEtBQUtjLFdBQVdSLENBQUM7WUFDakJMLEtBQUtjLFdBQVdaLENBQUM7WUFDakJELEtBQUthLFdBQVdULENBQUM7UUFDbkIsT0FBTztZQUNMLE9BQU9aLDZFQUFxQkEsQ0FBQ0c7UUFDL0I7SUFDRjtJQUNBLE9BQU87UUFBQztZQUNOTSxHQUFHSjtZQUNITyxHQUFHTjtRQUNMO1FBQUc7WUFDREcsR0FBR0Y7WUFDSEssR0FBR0o7UUFDTDtLQUFFO0FBQ0oiLCJzb3VyY2VzIjpbIi9Vc2Vycy9oa3NoYXJtYS9Eb3dubG9hZHMvZGVjZW50cmEtbm9zYW5hLW1haW4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzQDIuMTUuNF9yZWFjdC1kb21AMTkuMS4wX3JlYWN0QDE5LjEuMF9fcmVhY3RAMTkuMS4wL25vZGVfbW9kdWxlcy9yZWNoYXJ0cy9lczYvdXRpbC9jdXJzb3IvZ2V0Q3Vyc29yUG9pbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBvbGFyVG9DYXJ0ZXNpYW4gfSBmcm9tICcuLi9Qb2xhclV0aWxzJztcbmltcG9ydCB7IGdldFJhZGlhbEN1cnNvclBvaW50cyB9IGZyb20gJy4vZ2V0UmFkaWFsQ3Vyc29yUG9pbnRzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRDdXJzb3JQb2ludHMobGF5b3V0LCBhY3RpdmVDb29yZGluYXRlLCBvZmZzZXQpIHtcbiAgdmFyIHgxLCB5MSwgeDIsIHkyO1xuICBpZiAobGF5b3V0ID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICB4MSA9IGFjdGl2ZUNvb3JkaW5hdGUueDtcbiAgICB4MiA9IHgxO1xuICAgIHkxID0gb2Zmc2V0LnRvcDtcbiAgICB5MiA9IG9mZnNldC50b3AgKyBvZmZzZXQuaGVpZ2h0O1xuICB9IGVsc2UgaWYgKGxheW91dCA9PT0gJ3ZlcnRpY2FsJykge1xuICAgIHkxID0gYWN0aXZlQ29vcmRpbmF0ZS55O1xuICAgIHkyID0geTE7XG4gICAgeDEgPSBvZmZzZXQubGVmdDtcbiAgICB4MiA9IG9mZnNldC5sZWZ0ICsgb2Zmc2V0LndpZHRoO1xuICB9IGVsc2UgaWYgKGFjdGl2ZUNvb3JkaW5hdGUuY3ggIT0gbnVsbCAmJiBhY3RpdmVDb29yZGluYXRlLmN5ICE9IG51bGwpIHtcbiAgICBpZiAobGF5b3V0ID09PSAnY2VudHJpYycpIHtcbiAgICAgIHZhciBjeCA9IGFjdGl2ZUNvb3JkaW5hdGUuY3gsXG4gICAgICAgIGN5ID0gYWN0aXZlQ29vcmRpbmF0ZS5jeSxcbiAgICAgICAgaW5uZXJSYWRpdXMgPSBhY3RpdmVDb29yZGluYXRlLmlubmVyUmFkaXVzLFxuICAgICAgICBvdXRlclJhZGl1cyA9IGFjdGl2ZUNvb3JkaW5hdGUub3V0ZXJSYWRpdXMsXG4gICAgICAgIGFuZ2xlID0gYWN0aXZlQ29vcmRpbmF0ZS5hbmdsZTtcbiAgICAgIHZhciBpbm5lclBvaW50ID0gcG9sYXJUb0NhcnRlc2lhbihjeCwgY3ksIGlubmVyUmFkaXVzLCBhbmdsZSk7XG4gICAgICB2YXIgb3V0ZXJQb2ludCA9IHBvbGFyVG9DYXJ0ZXNpYW4oY3gsIGN5LCBvdXRlclJhZGl1cywgYW5nbGUpO1xuICAgICAgeDEgPSBpbm5lclBvaW50Lng7XG4gICAgICB5MSA9IGlubmVyUG9pbnQueTtcbiAgICAgIHgyID0gb3V0ZXJQb2ludC54O1xuICAgICAgeTIgPSBvdXRlclBvaW50Lnk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBnZXRSYWRpYWxDdXJzb3JQb2ludHMoYWN0aXZlQ29vcmRpbmF0ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBbe1xuICAgIHg6IHgxLFxuICAgIHk6IHkxXG4gIH0sIHtcbiAgICB4OiB4MixcbiAgICB5OiB5MlxuICB9XTtcbn0iXSwibmFtZXMiOlsicG9sYXJUb0NhcnRlc2lhbiIsImdldFJhZGlhbEN1cnNvclBvaW50cyIsImdldEN1cnNvclBvaW50cyIsImxheW91dCIsImFjdGl2ZUNvb3JkaW5hdGUiLCJvZmZzZXQiLCJ4MSIsInkxIiwieDIiLCJ5MiIsIngiLCJ0b3AiLCJoZWlnaHQiLCJ5IiwibGVmdCIsIndpZHRoIiwiY3giLCJjeSIsImlubmVyUmFkaXVzIiwib3V0ZXJSYWRpdXMiLCJhbmdsZSIsImlubmVyUG9pbnQiLCJvdXRlclBvaW50Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorPoints.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorRectangle.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorRectangle.js ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCursorRectangle: () => (/* binding */ getCursorRectangle)\n/* harmony export */ });\nfunction getCursorRectangle(layout, activeCoordinate, offset, tooltipAxisBandSize) {\n    var halfSize = tooltipAxisBandSize / 2;\n    return {\n        stroke: 'none',\n        fill: '#ccc',\n        x: layout === 'horizontal' ? activeCoordinate.x - halfSize : offset.left + 0.5,\n        y: layout === 'horizontal' ? offset.top + 0.5 : activeCoordinate.y - halfSize,\n        width: layout === 'horizontal' ? tooltipAxisBandSize : offset.width - 1,\n        height: layout === 'horizontal' ? offset.height - 1 : tooltipAxisBandSize\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL2N1cnNvci9nZXRDdXJzb3JSZWN0YW5nbGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLG1CQUFtQkMsTUFBTSxFQUFFQyxnQkFBZ0IsRUFBRUMsTUFBTSxFQUFFQyxtQkFBbUI7SUFDdEYsSUFBSUMsV0FBV0Qsc0JBQXNCO0lBQ3JDLE9BQU87UUFDTEUsUUFBUTtRQUNSQyxNQUFNO1FBQ05DLEdBQUdQLFdBQVcsZUFBZUMsaUJBQWlCTSxDQUFDLEdBQUdILFdBQVdGLE9BQU9NLElBQUksR0FBRztRQUMzRUMsR0FBR1QsV0FBVyxlQUFlRSxPQUFPUSxHQUFHLEdBQUcsTUFBTVQsaUJBQWlCUSxDQUFDLEdBQUdMO1FBQ3JFTyxPQUFPWCxXQUFXLGVBQWVHLHNCQUFzQkQsT0FBT1MsS0FBSyxHQUFHO1FBQ3RFQyxRQUFRWixXQUFXLGVBQWVFLE9BQU9VLE1BQU0sR0FBRyxJQUFJVDtJQUN4RDtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L3V0aWwvY3Vyc29yL2dldEN1cnNvclJlY3RhbmdsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0Q3Vyc29yUmVjdGFuZ2xlKGxheW91dCwgYWN0aXZlQ29vcmRpbmF0ZSwgb2Zmc2V0LCB0b29sdGlwQXhpc0JhbmRTaXplKSB7XG4gIHZhciBoYWxmU2l6ZSA9IHRvb2x0aXBBeGlzQmFuZFNpemUgLyAyO1xuICByZXR1cm4ge1xuICAgIHN0cm9rZTogJ25vbmUnLFxuICAgIGZpbGw6ICcjY2NjJyxcbiAgICB4OiBsYXlvdXQgPT09ICdob3Jpem9udGFsJyA/IGFjdGl2ZUNvb3JkaW5hdGUueCAtIGhhbGZTaXplIDogb2Zmc2V0LmxlZnQgKyAwLjUsXG4gICAgeTogbGF5b3V0ID09PSAnaG9yaXpvbnRhbCcgPyBvZmZzZXQudG9wICsgMC41IDogYWN0aXZlQ29vcmRpbmF0ZS55IC0gaGFsZlNpemUsXG4gICAgd2lkdGg6IGxheW91dCA9PT0gJ2hvcml6b250YWwnID8gdG9vbHRpcEF4aXNCYW5kU2l6ZSA6IG9mZnNldC53aWR0aCAtIDEsXG4gICAgaGVpZ2h0OiBsYXlvdXQgPT09ICdob3Jpem9udGFsJyA/IG9mZnNldC5oZWlnaHQgLSAxIDogdG9vbHRpcEF4aXNCYW5kU2l6ZVxuICB9O1xufSJdLCJuYW1lcyI6WyJnZXRDdXJzb3JSZWN0YW5nbGUiLCJsYXlvdXQiLCJhY3RpdmVDb29yZGluYXRlIiwib2Zmc2V0IiwidG9vbHRpcEF4aXNCYW5kU2l6ZSIsImhhbGZTaXplIiwic3Ryb2tlIiwiZmlsbCIsIngiLCJsZWZ0IiwieSIsInRvcCIsIndpZHRoIiwiaGVpZ2h0Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getCursorRectangle.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getRadialCursorPoints.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getRadialCursorPoints.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRadialCursorPoints: () => (/* binding */ getRadialCursorPoints)\n/* harmony export */ });\n/* harmony import */ var _PolarUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../PolarUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/PolarUtils.js\");\n\n/**\n * Only applicable for radial layouts\n * @param {Object} activeCoordinate ChartCoordinate\n * @returns {Object} RadialCursorPoints\n */ function getRadialCursorPoints(activeCoordinate) {\n    var cx = activeCoordinate.cx, cy = activeCoordinate.cy, radius = activeCoordinate.radius, startAngle = activeCoordinate.startAngle, endAngle = activeCoordinate.endAngle;\n    var startPoint = (0,_PolarUtils__WEBPACK_IMPORTED_MODULE_0__.polarToCartesian)(cx, cy, radius, startAngle);\n    var endPoint = (0,_PolarUtils__WEBPACK_IMPORTED_MODULE_0__.polarToCartesian)(cx, cy, radius, endAngle);\n    return {\n        points: [\n            startPoint,\n            endPoint\n        ],\n        cx: cx,\n        cy: cy,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL2N1cnNvci9nZXRSYWRpYWxDdXJzb3JQb2ludHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDakQ7Ozs7Q0FJQyxHQUNNLFNBQVNDLHNCQUFzQkMsZ0JBQWdCO0lBQ3BELElBQUlDLEtBQUtELGlCQUFpQkMsRUFBRSxFQUMxQkMsS0FBS0YsaUJBQWlCRSxFQUFFLEVBQ3hCQyxTQUFTSCxpQkFBaUJHLE1BQU0sRUFDaENDLGFBQWFKLGlCQUFpQkksVUFBVSxFQUN4Q0MsV0FBV0wsaUJBQWlCSyxRQUFRO0lBQ3RDLElBQUlDLGFBQWFSLDZEQUFnQkEsQ0FBQ0csSUFBSUMsSUFBSUMsUUFBUUM7SUFDbEQsSUFBSUcsV0FBV1QsNkRBQWdCQSxDQUFDRyxJQUFJQyxJQUFJQyxRQUFRRTtJQUNoRCxPQUFPO1FBQ0xHLFFBQVE7WUFBQ0Y7WUFBWUM7U0FBUztRQUM5Qk4sSUFBSUE7UUFDSkMsSUFBSUE7UUFDSkMsUUFBUUE7UUFDUkMsWUFBWUE7UUFDWkMsVUFBVUE7SUFDWjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L3V0aWwvY3Vyc29yL2dldFJhZGlhbEN1cnNvclBvaW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwb2xhclRvQ2FydGVzaWFuIH0gZnJvbSAnLi4vUG9sYXJVdGlscyc7XG4vKipcbiAqIE9ubHkgYXBwbGljYWJsZSBmb3IgcmFkaWFsIGxheW91dHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBhY3RpdmVDb29yZGluYXRlIENoYXJ0Q29vcmRpbmF0ZVxuICogQHJldHVybnMge09iamVjdH0gUmFkaWFsQ3Vyc29yUG9pbnRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSYWRpYWxDdXJzb3JQb2ludHMoYWN0aXZlQ29vcmRpbmF0ZSkge1xuICB2YXIgY3ggPSBhY3RpdmVDb29yZGluYXRlLmN4LFxuICAgIGN5ID0gYWN0aXZlQ29vcmRpbmF0ZS5jeSxcbiAgICByYWRpdXMgPSBhY3RpdmVDb29yZGluYXRlLnJhZGl1cyxcbiAgICBzdGFydEFuZ2xlID0gYWN0aXZlQ29vcmRpbmF0ZS5zdGFydEFuZ2xlLFxuICAgIGVuZEFuZ2xlID0gYWN0aXZlQ29vcmRpbmF0ZS5lbmRBbmdsZTtcbiAgdmFyIHN0YXJ0UG9pbnQgPSBwb2xhclRvQ2FydGVzaWFuKGN4LCBjeSwgcmFkaXVzLCBzdGFydEFuZ2xlKTtcbiAgdmFyIGVuZFBvaW50ID0gcG9sYXJUb0NhcnRlc2lhbihjeCwgY3ksIHJhZGl1cywgZW5kQW5nbGUpO1xuICByZXR1cm4ge1xuICAgIHBvaW50czogW3N0YXJ0UG9pbnQsIGVuZFBvaW50XSxcbiAgICBjeDogY3gsXG4gICAgY3k6IGN5LFxuICAgIHJhZGl1czogcmFkaXVzLFxuICAgIHN0YXJ0QW5nbGU6IHN0YXJ0QW5nbGUsXG4gICAgZW5kQW5nbGU6IGVuZEFuZ2xlXG4gIH07XG59Il0sIm5hbWVzIjpbInBvbGFyVG9DYXJ0ZXNpYW4iLCJnZXRSYWRpYWxDdXJzb3JQb2ludHMiLCJhY3RpdmVDb29yZGluYXRlIiwiY3giLCJjeSIsInJhZGl1cyIsInN0YXJ0QW5nbGUiLCJlbmRBbmdsZSIsInN0YXJ0UG9pbnQiLCJlbmRQb2ludCIsInBvaW50cyJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/cursor/getRadialCursorPoints.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getEveryNthWithCondition.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getEveryNthWithCondition.js ***!
  \***************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEveryNthWithCondition: () => (/* binding */ getEveryNthWithCondition)\n/* harmony export */ });\n/**\n * Given an array and a number N, return a new array which contains every nTh\n * element of the input array. For n below 1, an empty array is returned.\n * If isValid is provided, all candidates must suffice the condition, else undefined is returned.\n * @param {T[]} array An input array.\n * @param {integer} n A number\n * @param {Function} isValid A function to evaluate a candidate form the array\n * @returns {T[]} The result array of the same type as the input array.\n */ function getEveryNthWithCondition(array, n, isValid) {\n    if (n < 1) {\n        return [];\n    }\n    if (n === 1 && isValid === undefined) {\n        return array;\n    }\n    var result = [];\n    for(var i = 0; i < array.length; i += n){\n        if (isValid === undefined || isValid(array[i]) === true) {\n            result.push(array[i]);\n        } else {\n            return undefined;\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL2dldEV2ZXJ5TnRoV2l0aENvbmRpdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7O0NBUUMsR0FDTSxTQUFTQSx5QkFBeUJDLEtBQUssRUFBRUMsQ0FBQyxFQUFFQyxPQUFPO0lBQ3hELElBQUlELElBQUksR0FBRztRQUNULE9BQU8sRUFBRTtJQUNYO0lBQ0EsSUFBSUEsTUFBTSxLQUFLQyxZQUFZQyxXQUFXO1FBQ3BDLE9BQU9IO0lBQ1Q7SUFDQSxJQUFJSSxTQUFTLEVBQUU7SUFDZixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUwsTUFBTU0sTUFBTSxFQUFFRCxLQUFLSixFQUFHO1FBQ3hDLElBQUlDLFlBQVlDLGFBQWFELFFBQVFGLEtBQUssQ0FBQ0ssRUFBRSxNQUFNLE1BQU07WUFDdkRELE9BQU9HLElBQUksQ0FBQ1AsS0FBSyxDQUFDSyxFQUFFO1FBQ3RCLE9BQU87WUFDTCxPQUFPRjtRQUNUO0lBQ0Y7SUFDQSxPQUFPQztBQUNUIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L3V0aWwvZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYW4gYXJyYXkgYW5kIGEgbnVtYmVyIE4sIHJldHVybiBhIG5ldyBhcnJheSB3aGljaCBjb250YWlucyBldmVyeSBuVGhcbiAqIGVsZW1lbnQgb2YgdGhlIGlucHV0IGFycmF5LiBGb3IgbiBiZWxvdyAxLCBhbiBlbXB0eSBhcnJheSBpcyByZXR1cm5lZC5cbiAqIElmIGlzVmFsaWQgaXMgcHJvdmlkZWQsIGFsbCBjYW5kaWRhdGVzIG11c3Qgc3VmZmljZSB0aGUgY29uZGl0aW9uLCBlbHNlIHVuZGVmaW5lZCBpcyByZXR1cm5lZC5cbiAqIEBwYXJhbSB7VFtdfSBhcnJheSBBbiBpbnB1dCBhcnJheS5cbiAqIEBwYXJhbSB7aW50ZWdlcn0gbiBBIG51bWJlclxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXNWYWxpZCBBIGZ1bmN0aW9uIHRvIGV2YWx1YXRlIGEgY2FuZGlkYXRlIGZvcm0gdGhlIGFycmF5XG4gKiBAcmV0dXJucyB7VFtdfSBUaGUgcmVzdWx0IGFycmF5IG9mIHRoZSBzYW1lIHR5cGUgYXMgdGhlIGlucHV0IGFycmF5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RXZlcnlOdGhXaXRoQ29uZGl0aW9uKGFycmF5LCBuLCBpc1ZhbGlkKSB7XG4gIGlmIChuIDwgMSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBpZiAobiA9PT0gMSAmJiBpc1ZhbGlkID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gYXJyYXk7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSArPSBuKSB7XG4gICAgaWYgKGlzVmFsaWQgPT09IHVuZGVmaW5lZCB8fCBpc1ZhbGlkKGFycmF5W2ldKSA9PT0gdHJ1ZSkge1xuICAgICAgcmVzdWx0LnB1c2goYXJyYXlbaV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufSJdLCJuYW1lcyI6WyJnZXRFdmVyeU50aFdpdGhDb25kaXRpb24iLCJhcnJheSIsIm4iLCJpc1ZhbGlkIiwidW5kZWZpbmVkIiwicmVzdWx0IiwiaSIsImxlbmd0aCIsInB1c2giXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getEveryNthWithCondition.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getLegendProps.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getLegendProps.js ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLegendProps: () => (/* binding */ getLegendProps)\n/* harmony export */ });\n/* harmony import */ var _component_Legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/Legend */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/component/Legend.js\");\n/* harmony import */ var _ChartUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChartUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ChartUtils.js\");\n/* harmony import */ var _ReactUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ReactUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/ReactUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\n\nvar getLegendProps = function getLegendProps(_ref) {\n    var children = _ref.children, formattedGraphicalItems = _ref.formattedGraphicalItems, legendWidth = _ref.legendWidth, legendContent = _ref.legendContent;\n    var legendItem = (0,_ReactUtils__WEBPACK_IMPORTED_MODULE_0__.findChildByType)(children, _component_Legend__WEBPACK_IMPORTED_MODULE_1__.Legend);\n    if (!legendItem) {\n        return null;\n    }\n    var legendDefaultProps = _component_Legend__WEBPACK_IMPORTED_MODULE_1__.Legend.defaultProps;\n    var legendProps = legendDefaultProps !== undefined ? _objectSpread(_objectSpread({}, legendDefaultProps), legendItem.props) : {};\n    var legendData;\n    if (legendItem.props && legendItem.props.payload) {\n        legendData = legendItem.props && legendItem.props.payload;\n    } else if (legendContent === 'children') {\n        legendData = (formattedGraphicalItems || []).reduce(function(result, _ref2) {\n            var item = _ref2.item, props = _ref2.props;\n            var data = props.sectors || props.data || [];\n            return result.concat(data.map(function(entry) {\n                return {\n                    type: legendItem.props.iconType || item.props.legendType,\n                    value: entry.name,\n                    color: entry.fill,\n                    payload: entry\n                };\n            }));\n        }, []);\n    } else {\n        legendData = (formattedGraphicalItems || []).map(function(_ref3) {\n            var item = _ref3.item;\n            var itemDefaultProps = item.type.defaultProps;\n            var itemProps = itemDefaultProps !== undefined ? _objectSpread(_objectSpread({}, itemDefaultProps), item.props) : {};\n            var dataKey = itemProps.dataKey, name = itemProps.name, legendType = itemProps.legendType, hide = itemProps.hide;\n            return {\n                inactive: hide,\n                dataKey: dataKey,\n                type: legendProps.iconType || legendType || 'square',\n                color: (0,_ChartUtils__WEBPACK_IMPORTED_MODULE_2__.getMainColorOfGraphicItem)(item),\n                value: name || dataKey,\n                // @ts-expect-error property strokeDasharray is required in Payload but optional in props\n                payload: itemProps\n            };\n        });\n    }\n    return _objectSpread(_objectSpread(_objectSpread({}, legendProps), _component_Legend__WEBPACK_IMPORTED_MODULE_1__.Legend.getWithHeight(legendItem, legendWidth)), {}, {\n        payload: legendData,\n        item: legendItem\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/getLegendProps.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/isDomainSpecifiedByUser.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/isDomainSpecifiedByUser.js ***!
  \**************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDomainSpecifiedByUser: () => (/* binding */ isDomainSpecifiedByUser)\n/* harmony export */ });\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\n\n/**\n * Takes a domain and user props to determine whether he provided the domain via props or if we need to calculate it.\n * @param   {AxisDomain}  domain              The potential domain from props\n * @param   {Boolean}     allowDataOverflow   from props\n * @param   {String}      axisType            from props\n * @returns {Boolean}                         `true` if domain is specified by user\n */ function isDomainSpecifiedByUser(domain, allowDataOverflow, axisType) {\n    if (axisType === 'number' && allowDataOverflow === true && Array.isArray(domain)) {\n        var domainStart = domain === null || domain === void 0 ? void 0 : domain[0];\n        var domainEnd = domain === null || domain === void 0 ? void 0 : domain[1];\n        /*\n     * The `isNumber` check is needed because the user could also provide strings like \"dataMin\" via the domain props.\n     * In such case, we have to compute the domain from the data.\n     */ if (!!domainStart && !!domainEnd && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(domainStart) && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_0__.isNumber)(domainEnd)) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL2lzRG9tYWluU3BlY2lmaWVkQnlVc2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ3ZDOzs7Ozs7Q0FNQyxHQUNNLFNBQVNDLHdCQUF3QkMsTUFBTSxFQUFFQyxpQkFBaUIsRUFBRUMsUUFBUTtJQUN6RSxJQUFJQSxhQUFhLFlBQVlELHNCQUFzQixRQUFRRSxNQUFNQyxPQUFPLENBQUNKLFNBQVM7UUFDaEYsSUFBSUssY0FBY0wsV0FBVyxRQUFRQSxXQUFXLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU0sQ0FBQyxFQUFFO1FBQzNFLElBQUlNLFlBQVlOLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxNQUFNLENBQUMsRUFBRTtRQUV6RTs7O0tBR0MsR0FDRCxJQUFJLENBQUMsQ0FBQ0ssZUFBZSxDQUFDLENBQUNDLGFBQWFSLG9EQUFRQSxDQUFDTyxnQkFBZ0JQLG9EQUFRQSxDQUFDUSxZQUFZO1lBQ2hGLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBTztBQUNUIiwic291cmNlcyI6WyIvVXNlcnMvaGtzaGFybWEvRG93bmxvYWRzL2RlY2VudHJhLW5vc2FuYS1tYWluL25vZGVfbW9kdWxlcy8ucG5wbS9yZWNoYXJ0c0AyLjE1LjRfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVjaGFydHMvZXM2L3V0aWwvaXNEb21haW5TcGVjaWZpZWRCeVVzZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdW1iZXIgfSBmcm9tICcuL0RhdGFVdGlscyc7XG4vKipcbiAqIFRha2VzIGEgZG9tYWluIGFuZCB1c2VyIHByb3BzIHRvIGRldGVybWluZSB3aGV0aGVyIGhlIHByb3ZpZGVkIHRoZSBkb21haW4gdmlhIHByb3BzIG9yIGlmIHdlIG5lZWQgdG8gY2FsY3VsYXRlIGl0LlxuICogQHBhcmFtICAge0F4aXNEb21haW59ICBkb21haW4gICAgICAgICAgICAgIFRoZSBwb3RlbnRpYWwgZG9tYWluIGZyb20gcHJvcHNcbiAqIEBwYXJhbSAgIHtCb29sZWFufSAgICAgYWxsb3dEYXRhT3ZlcmZsb3cgICBmcm9tIHByb3BzXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgICAgIGF4aXNUeXBlICAgICAgICAgICAgZnJvbSBwcm9wc1xuICogQHJldHVybnMge0Jvb2xlYW59ICAgICAgICAgICAgICAgICAgICAgICAgIGB0cnVlYCBpZiBkb21haW4gaXMgc3BlY2lmaWVkIGJ5IHVzZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9tYWluU3BlY2lmaWVkQnlVc2VyKGRvbWFpbiwgYWxsb3dEYXRhT3ZlcmZsb3csIGF4aXNUeXBlKSB7XG4gIGlmIChheGlzVHlwZSA9PT0gJ251bWJlcicgJiYgYWxsb3dEYXRhT3ZlcmZsb3cgPT09IHRydWUgJiYgQXJyYXkuaXNBcnJheShkb21haW4pKSB7XG4gICAgdmFyIGRvbWFpblN0YXJ0ID0gZG9tYWluID09PSBudWxsIHx8IGRvbWFpbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogZG9tYWluWzBdO1xuICAgIHZhciBkb21haW5FbmQgPSBkb21haW4gPT09IG51bGwgfHwgZG9tYWluID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkb21haW5bMV07XG5cbiAgICAvKlxuICAgICAqIFRoZSBgaXNOdW1iZXJgIGNoZWNrIGlzIG5lZWRlZCBiZWNhdXNlIHRoZSB1c2VyIGNvdWxkIGFsc28gcHJvdmlkZSBzdHJpbmdzIGxpa2UgXCJkYXRhTWluXCIgdmlhIHRoZSBkb21haW4gcHJvcHMuXG4gICAgICogSW4gc3VjaCBjYXNlLCB3ZSBoYXZlIHRvIGNvbXB1dGUgdGhlIGRvbWFpbiBmcm9tIHRoZSBkYXRhLlxuICAgICAqL1xuICAgIGlmICghIWRvbWFpblN0YXJ0ICYmICEhZG9tYWluRW5kICYmIGlzTnVtYmVyKGRvbWFpblN0YXJ0KSAmJiBpc051bWJlcihkb21haW5FbmQpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufSJdLCJuYW1lcyI6WyJpc051bWJlciIsImlzRG9tYWluU3BlY2lmaWVkQnlVc2VyIiwiZG9tYWluIiwiYWxsb3dEYXRhT3ZlcmZsb3ciLCJheGlzVHlwZSIsIkFycmF5IiwiaXNBcnJheSIsImRvbWFpblN0YXJ0IiwiZG9tYWluRW5kIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/isDomainSpecifiedByUser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/payload/getUniqPayload.js":
/*!*************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/payload/getUniqPayload.js ***!
  \*************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUniqPayload: () => (/* binding */ getUniqPayload)\n/* harmony export */ });\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/uniqBy */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/uniqBy.js\");\n/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isFunction */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isFunction.js\");\n/* harmony import */ var lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * This is configuration option that decides how to filter for unique values only:\n *\n * - `false` means \"no filter\"\n * - `true` means \"use recharts default filter\"\n * - function means \"use return of this function as the default key\"\n */ function getUniqPayload(payload, option, defaultUniqBy) {\n    if (option === true) {\n        return lodash_uniqBy__WEBPACK_IMPORTED_MODULE_0___default()(payload, defaultUniqBy);\n    }\n    if (lodash_isFunction__WEBPACK_IMPORTED_MODULE_1___default()(option)) {\n        return lodash_uniqBy__WEBPACK_IMPORTED_MODULE_0___default()(payload, option);\n    }\n    return payload;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL3BheWxvYWQvZ2V0VW5pcVBheWxvYWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBbUM7QUFDUTtBQUUzQzs7Ozs7O0NBTUMsR0FFTSxTQUFTRSxlQUFlQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsYUFBYTtJQUMzRCxJQUFJRCxXQUFXLE1BQU07UUFDbkIsT0FBT0osb0RBQU1BLENBQUNHLFNBQVNFO0lBQ3pCO0lBQ0EsSUFBSUosd0RBQVVBLENBQUNHLFNBQVM7UUFDdEIsT0FBT0osb0RBQU1BLENBQUNHLFNBQVNDO0lBQ3pCO0lBQ0EsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsiL1VzZXJzL2hrc2hhcm1hL0Rvd25sb2Fkcy9kZWNlbnRyYS1ub3NhbmEtbWFpbi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHNAMi4xNS40X3JlYWN0LWRvbUAxOS4xLjBfcmVhY3RAMTkuMS4wX19yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlY2hhcnRzL2VzNi91dGlsL3BheWxvYWQvZ2V0VW5pcVBheWxvYWQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVuaXFCeSBmcm9tICdsb2Rhc2gvdW5pcUJ5JztcbmltcG9ydCBpc0Z1bmN0aW9uIGZyb20gJ2xvZGFzaC9pc0Z1bmN0aW9uJztcblxuLyoqXG4gKiBUaGlzIGlzIGNvbmZpZ3VyYXRpb24gb3B0aW9uIHRoYXQgZGVjaWRlcyBob3cgdG8gZmlsdGVyIGZvciB1bmlxdWUgdmFsdWVzIG9ubHk6XG4gKlxuICogLSBgZmFsc2VgIG1lYW5zIFwibm8gZmlsdGVyXCJcbiAqIC0gYHRydWVgIG1lYW5zIFwidXNlIHJlY2hhcnRzIGRlZmF1bHQgZmlsdGVyXCJcbiAqIC0gZnVuY3Rpb24gbWVhbnMgXCJ1c2UgcmV0dXJuIG9mIHRoaXMgZnVuY3Rpb24gYXMgdGhlIGRlZmF1bHQga2V5XCJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VW5pcVBheWxvYWQocGF5bG9hZCwgb3B0aW9uLCBkZWZhdWx0VW5pcUJ5KSB7XG4gIGlmIChvcHRpb24gPT09IHRydWUpIHtcbiAgICByZXR1cm4gdW5pcUJ5KHBheWxvYWQsIGRlZmF1bHRVbmlxQnkpO1xuICB9XG4gIGlmIChpc0Z1bmN0aW9uKG9wdGlvbikpIHtcbiAgICByZXR1cm4gdW5pcUJ5KHBheWxvYWQsIG9wdGlvbik7XG4gIH1cbiAgcmV0dXJuIHBheWxvYWQ7XG59Il0sIm5hbWVzIjpbInVuaXFCeSIsImlzRnVuY3Rpb24iLCJnZXRVbmlxUGF5bG9hZCIsInBheWxvYWQiLCJvcHRpb24iLCJkZWZhdWx0VW5pcUJ5Il0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/payload/getUniqPayload.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/tooltip/translate.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/tooltip/translate.js ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTooltipCSSClassName: () => (/* binding */ getTooltipCSSClassName),\n/* harmony export */   getTooltipTranslate: () => (/* binding */ getTooltipTranslate),\n/* harmony export */   getTooltipTranslateXY: () => (/* binding */ getTooltipTranslateXY),\n/* harmony export */   getTransformStyle: () => (/* binding */ getTransformStyle)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var _DataUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../DataUtils */ \"(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/DataUtils.js\");\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != _typeof(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != _typeof(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n\nvar CSS_CLASS_PREFIX = 'recharts-tooltip-wrapper';\nvar TOOLTIP_HIDDEN = {\n    visibility: 'hidden'\n};\nfunction getTooltipCSSClassName(_ref) {\n    var coordinate = _ref.coordinate, translateX = _ref.translateX, translateY = _ref.translateY;\n    return (0,clsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(CSS_CLASS_PREFIX, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, \"\".concat(CSS_CLASS_PREFIX, \"-right\"), (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(translateX) && coordinate && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(coordinate.x) && translateX >= coordinate.x), \"\".concat(CSS_CLASS_PREFIX, \"-left\"), (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(translateX) && coordinate && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(coordinate.x) && translateX < coordinate.x), \"\".concat(CSS_CLASS_PREFIX, \"-bottom\"), (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(translateY) && coordinate && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(coordinate.y) && translateY >= coordinate.y), \"\".concat(CSS_CLASS_PREFIX, \"-top\"), (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(translateY) && coordinate && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(coordinate.y) && translateY < coordinate.y));\n}\nfunction getTooltipTranslateXY(_ref2) {\n    var allowEscapeViewBox = _ref2.allowEscapeViewBox, coordinate = _ref2.coordinate, key = _ref2.key, offsetTopLeft = _ref2.offsetTopLeft, position = _ref2.position, reverseDirection = _ref2.reverseDirection, tooltipDimension = _ref2.tooltipDimension, viewBox = _ref2.viewBox, viewBoxDimension = _ref2.viewBoxDimension;\n    if (position && (0,_DataUtils__WEBPACK_IMPORTED_MODULE_1__.isNumber)(position[key])) {\n        return position[key];\n    }\n    var negative = coordinate[key] - tooltipDimension - offsetTopLeft;\n    var positive = coordinate[key] + offsetTopLeft;\n    if (allowEscapeViewBox[key]) {\n        return reverseDirection[key] ? negative : positive;\n    }\n    if (reverseDirection[key]) {\n        var _tooltipBoundary = negative;\n        var _viewBoxBoundary = viewBox[key];\n        if (_tooltipBoundary < _viewBoxBoundary) {\n            return Math.max(positive, viewBox[key]);\n        }\n        return Math.max(negative, viewBox[key]);\n    }\n    var tooltipBoundary = positive + tooltipDimension;\n    var viewBoxBoundary = viewBox[key] + viewBoxDimension;\n    if (tooltipBoundary > viewBoxBoundary) {\n        return Math.max(negative, viewBox[key]);\n    }\n    return Math.max(positive, viewBox[key]);\n}\nfunction getTransformStyle(_ref3) {\n    var translateX = _ref3.translateX, translateY = _ref3.translateY, useTranslate3d = _ref3.useTranslate3d;\n    return {\n        transform: useTranslate3d ? \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px, 0)\") : \"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\")\n    };\n}\nfunction getTooltipTranslate(_ref4) {\n    var allowEscapeViewBox = _ref4.allowEscapeViewBox, coordinate = _ref4.coordinate, offsetTopLeft = _ref4.offsetTopLeft, position = _ref4.position, reverseDirection = _ref4.reverseDirection, tooltipBox = _ref4.tooltipBox, useTranslate3d = _ref4.useTranslate3d, viewBox = _ref4.viewBox;\n    var cssProperties, translateX, translateY;\n    if (tooltipBox.height > 0 && tooltipBox.width > 0 && coordinate) {\n        translateX = getTooltipTranslateXY({\n            allowEscapeViewBox: allowEscapeViewBox,\n            coordinate: coordinate,\n            key: 'x',\n            offsetTopLeft: offsetTopLeft,\n            position: position,\n            reverseDirection: reverseDirection,\n            tooltipDimension: tooltipBox.width,\n            viewBox: viewBox,\n            viewBoxDimension: viewBox.width\n        });\n        translateY = getTooltipTranslateXY({\n            allowEscapeViewBox: allowEscapeViewBox,\n            coordinate: coordinate,\n            key: 'y',\n            offsetTopLeft: offsetTopLeft,\n            position: position,\n            reverseDirection: reverseDirection,\n            tooltipDimension: tooltipBox.height,\n            viewBox: viewBox,\n            viewBoxDimension: viewBox.height\n        });\n        cssProperties = getTransformStyle({\n            translateX: translateX,\n            translateY: translateY,\n            useTranslate3d: useTranslate3d\n        });\n    } else {\n        cssProperties = TOOLTIP_HIDDEN;\n    }\n    return {\n        cssProperties: cssProperties,\n        cssClasses: getTooltipCSSClassName({\n            translateX: translateX,\n            translateY: translateY,\n            coordinate: coordinate\n        })\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/tooltip/translate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventKeys: () => (/* binding */ EventKeys),\n/* harmony export */   FilteredElementKeyMap: () => (/* binding */ FilteredElementKeyMap),\n/* harmony export */   SVGElementPropKeys: () => (/* binding */ SVGElementPropKeys),\n/* harmony export */   adaptEventHandlers: () => (/* binding */ adaptEventHandlers),\n/* harmony export */   adaptEventsOfChild: () => (/* binding */ adaptEventsOfChild)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.5.6_@babel+core@7.28.4_@opentelemetry+api@1.9.0_@playwright+test@1.56.0_babel-p_155a732b828a73e629035ffdbfa08ea8/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/isObject */ \"(ssr)/./node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js\");\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\n\n\n/**\n * Determines how values are stacked:\n *\n * - `none` is the default, it adds values on top of each other. No smarts. Negative values will overlap.\n * - `expand` make it so that the values always add up to 1 - so the chart will look like a rectangle.\n * - `wiggle` and `silhouette` tries to keep the chart centered.\n * - `sign` stacks positive values above zero and negative values below zero. Similar to `none` but handles negatives.\n * - `positive` ignores all negative values, and then behaves like \\`none\\`.\n *\n * Also see https://d3js.org/d3-shape/stack#stack-offsets\n * (note that the `diverging` offset in d3 is named `sign` in recharts)\n */ //\n// Event Handler Types -- Copied from @types/react/index.d.ts and adapted for Props.\n//\nvar SVGContainerPropKeys = [\n    'viewBox',\n    'children'\n];\nvar SVGElementPropKeys = [\n    'aria-activedescendant',\n    'aria-atomic',\n    'aria-autocomplete',\n    'aria-busy',\n    'aria-checked',\n    'aria-colcount',\n    'aria-colindex',\n    'aria-colspan',\n    'aria-controls',\n    'aria-current',\n    'aria-describedby',\n    'aria-details',\n    'aria-disabled',\n    'aria-errormessage',\n    'aria-expanded',\n    'aria-flowto',\n    'aria-haspopup',\n    'aria-hidden',\n    'aria-invalid',\n    'aria-keyshortcuts',\n    'aria-label',\n    'aria-labelledby',\n    'aria-level',\n    'aria-live',\n    'aria-modal',\n    'aria-multiline',\n    'aria-multiselectable',\n    'aria-orientation',\n    'aria-owns',\n    'aria-placeholder',\n    'aria-posinset',\n    'aria-pressed',\n    'aria-readonly',\n    'aria-relevant',\n    'aria-required',\n    'aria-roledescription',\n    'aria-rowcount',\n    'aria-rowindex',\n    'aria-rowspan',\n    'aria-selected',\n    'aria-setsize',\n    'aria-sort',\n    'aria-valuemax',\n    'aria-valuemin',\n    'aria-valuenow',\n    'aria-valuetext',\n    'className',\n    'color',\n    'height',\n    'id',\n    'lang',\n    'max',\n    'media',\n    'method',\n    'min',\n    'name',\n    'style',\n    /*\n * removed 'type' SVGElementPropKey because we do not currently use any SVG elements\n * that can use it and it conflicts with the recharts prop 'type'\n * https://github.com/recharts/recharts/pull/3327\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/type\n */ // 'type',\n    'target',\n    'width',\n    'role',\n    'tabIndex',\n    'accentHeight',\n    'accumulate',\n    'additive',\n    'alignmentBaseline',\n    'allowReorder',\n    'alphabetic',\n    'amplitude',\n    'arabicForm',\n    'ascent',\n    'attributeName',\n    'attributeType',\n    'autoReverse',\n    'azimuth',\n    'baseFrequency',\n    'baselineShift',\n    'baseProfile',\n    'bbox',\n    'begin',\n    'bias',\n    'by',\n    'calcMode',\n    'capHeight',\n    'clip',\n    'clipPath',\n    'clipPathUnits',\n    'clipRule',\n    'colorInterpolation',\n    'colorInterpolationFilters',\n    'colorProfile',\n    'colorRendering',\n    'contentScriptType',\n    'contentStyleType',\n    'cursor',\n    'cx',\n    'cy',\n    'd',\n    'decelerate',\n    'descent',\n    'diffuseConstant',\n    'direction',\n    'display',\n    'divisor',\n    'dominantBaseline',\n    'dur',\n    'dx',\n    'dy',\n    'edgeMode',\n    'elevation',\n    'enableBackground',\n    'end',\n    'exponent',\n    'externalResourcesRequired',\n    'fill',\n    'fillOpacity',\n    'fillRule',\n    'filter',\n    'filterRes',\n    'filterUnits',\n    'floodColor',\n    'floodOpacity',\n    'focusable',\n    'fontFamily',\n    'fontSize',\n    'fontSizeAdjust',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontWeight',\n    'format',\n    'from',\n    'fx',\n    'fy',\n    'g1',\n    'g2',\n    'glyphName',\n    'glyphOrientationHorizontal',\n    'glyphOrientationVertical',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'hanging',\n    'horizAdvX',\n    'horizOriginX',\n    'href',\n    'ideographic',\n    'imageRendering',\n    'in2',\n    'in',\n    'intercept',\n    'k1',\n    'k2',\n    'k3',\n    'k4',\n    'k',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'kerning',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'letterSpacing',\n    'lightingColor',\n    'limitingConeAngle',\n    'local',\n    'markerEnd',\n    'markerHeight',\n    'markerMid',\n    'markerStart',\n    'markerUnits',\n    'markerWidth',\n    'mask',\n    'maskContentUnits',\n    'maskUnits',\n    'mathematical',\n    'mode',\n    'numOctaves',\n    'offset',\n    'opacity',\n    'operator',\n    'order',\n    'orient',\n    'orientation',\n    'origin',\n    'overflow',\n    'overlinePosition',\n    'overlineThickness',\n    'paintOrder',\n    'panose1',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointerEvents',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'r',\n    'radius',\n    'refX',\n    'refY',\n    'renderingIntent',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'restart',\n    'result',\n    'rotate',\n    'rx',\n    'ry',\n    'seed',\n    'shapeRendering',\n    'slope',\n    'spacing',\n    'specularConstant',\n    'specularExponent',\n    'speed',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stemh',\n    'stemv',\n    'stitchTiles',\n    'stopColor',\n    'stopOpacity',\n    'strikethroughPosition',\n    'strikethroughThickness',\n    'string',\n    'stroke',\n    'strokeDasharray',\n    'strokeDashoffset',\n    'strokeLinecap',\n    'strokeLinejoin',\n    'strokeMiterlimit',\n    'strokeOpacity',\n    'strokeWidth',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textAnchor',\n    'textDecoration',\n    'textLength',\n    'textRendering',\n    'to',\n    'transform',\n    'u1',\n    'u2',\n    'underlinePosition',\n    'underlineThickness',\n    'unicode',\n    'unicodeBidi',\n    'unicodeRange',\n    'unitsPerEm',\n    'vAlphabetic',\n    'values',\n    'vectorEffect',\n    'version',\n    'vertAdvY',\n    'vertOriginX',\n    'vertOriginY',\n    'vHanging',\n    'vIdeographic',\n    'viewTarget',\n    'visibility',\n    'vMathematical',\n    'widths',\n    'wordSpacing',\n    'writingMode',\n    'x1',\n    'x2',\n    'x',\n    'xChannelSelector',\n    'xHeight',\n    'xlinkActuate',\n    'xlinkArcrole',\n    'xlinkHref',\n    'xlinkRole',\n    'xlinkShow',\n    'xlinkTitle',\n    'xlinkType',\n    'xmlBase',\n    'xmlLang',\n    'xmlns',\n    'xmlnsXlink',\n    'xmlSpace',\n    'y1',\n    'y2',\n    'y',\n    'yChannelSelector',\n    'z',\n    'zoomAndPan',\n    'ref',\n    'key',\n    'angle'\n];\nvar PolyElementKeys = [\n    'points',\n    'pathLength'\n];\n/** svg element types that have specific attribute filtration requirements */ /** map of svg element types to unique svg attributes that belong to that element */ var FilteredElementKeyMap = {\n    svg: SVGContainerPropKeys,\n    polygon: PolyElementKeys,\n    polyline: PolyElementKeys\n};\nvar EventKeys = [\n    'dangerouslySetInnerHTML',\n    'onCopy',\n    'onCopyCapture',\n    'onCut',\n    'onCutCapture',\n    'onPaste',\n    'onPasteCapture',\n    'onCompositionEnd',\n    'onCompositionEndCapture',\n    'onCompositionStart',\n    'onCompositionStartCapture',\n    'onCompositionUpdate',\n    'onCompositionUpdateCapture',\n    'onFocus',\n    'onFocusCapture',\n    'onBlur',\n    'onBlurCapture',\n    'onChange',\n    'onChangeCapture',\n    'onBeforeInput',\n    'onBeforeInputCapture',\n    'onInput',\n    'onInputCapture',\n    'onReset',\n    'onResetCapture',\n    'onSubmit',\n    'onSubmitCapture',\n    'onInvalid',\n    'onInvalidCapture',\n    'onLoad',\n    'onLoadCapture',\n    'onError',\n    'onErrorCapture',\n    'onKeyDown',\n    'onKeyDownCapture',\n    'onKeyPress',\n    'onKeyPressCapture',\n    'onKeyUp',\n    'onKeyUpCapture',\n    'onAbort',\n    'onAbortCapture',\n    'onCanPlay',\n    'onCanPlayCapture',\n    'onCanPlayThrough',\n    'onCanPlayThroughCapture',\n    'onDurationChange',\n    'onDurationChangeCapture',\n    'onEmptied',\n    'onEmptiedCapture',\n    'onEncrypted',\n    'onEncryptedCapture',\n    'onEnded',\n    'onEndedCapture',\n    'onLoadedData',\n    'onLoadedDataCapture',\n    'onLoadedMetadata',\n    'onLoadedMetadataCapture',\n    'onLoadStart',\n    'onLoadStartCapture',\n    'onPause',\n    'onPauseCapture',\n    'onPlay',\n    'onPlayCapture',\n    'onPlaying',\n    'onPlayingCapture',\n    'onProgress',\n    'onProgressCapture',\n    'onRateChange',\n    'onRateChangeCapture',\n    'onSeeked',\n    'onSeekedCapture',\n    'onSeeking',\n    'onSeekingCapture',\n    'onStalled',\n    'onStalledCapture',\n    'onSuspend',\n    'onSuspendCapture',\n    'onTimeUpdate',\n    'onTimeUpdateCapture',\n    'onVolumeChange',\n    'onVolumeChangeCapture',\n    'onWaiting',\n    'onWaitingCapture',\n    'onAuxClick',\n    'onAuxClickCapture',\n    'onClick',\n    'onClickCapture',\n    'onContextMenu',\n    'onContextMenuCapture',\n    'onDoubleClick',\n    'onDoubleClickCapture',\n    'onDrag',\n    'onDragCapture',\n    'onDragEnd',\n    'onDragEndCapture',\n    'onDragEnter',\n    'onDragEnterCapture',\n    'onDragExit',\n    'onDragExitCapture',\n    'onDragLeave',\n    'onDragLeaveCapture',\n    'onDragOver',\n    'onDragOverCapture',\n    'onDragStart',\n    'onDragStartCapture',\n    'onDrop',\n    'onDropCapture',\n    'onMouseDown',\n    'onMouseDownCapture',\n    'onMouseEnter',\n    'onMouseLeave',\n    'onMouseMove',\n    'onMouseMoveCapture',\n    'onMouseOut',\n    'onMouseOutCapture',\n    'onMouseOver',\n    'onMouseOverCapture',\n    'onMouseUp',\n    'onMouseUpCapture',\n    'onSelect',\n    'onSelectCapture',\n    'onTouchCancel',\n    'onTouchCancelCapture',\n    'onTouchEnd',\n    'onTouchEndCapture',\n    'onTouchMove',\n    'onTouchMoveCapture',\n    'onTouchStart',\n    'onTouchStartCapture',\n    'onPointerDown',\n    'onPointerDownCapture',\n    'onPointerMove',\n    'onPointerMoveCapture',\n    'onPointerUp',\n    'onPointerUpCapture',\n    'onPointerCancel',\n    'onPointerCancelCapture',\n    'onPointerEnter',\n    'onPointerEnterCapture',\n    'onPointerLeave',\n    'onPointerLeaveCapture',\n    'onPointerOver',\n    'onPointerOverCapture',\n    'onPointerOut',\n    'onPointerOutCapture',\n    'onGotPointerCapture',\n    'onGotPointerCaptureCapture',\n    'onLostPointerCapture',\n    'onLostPointerCaptureCapture',\n    'onScroll',\n    'onScrollCapture',\n    'onWheel',\n    'onWheelCapture',\n    'onAnimationStart',\n    'onAnimationStartCapture',\n    'onAnimationEnd',\n    'onAnimationEndCapture',\n    'onAnimationIteration',\n    'onAnimationIterationCapture',\n    'onTransitionEnd',\n    'onTransitionEndCapture'\n];\n/** The type of easing function to use for animations */ /** Specifies the duration of animation, the unit of this option is ms. */ /** the offset of a chart, which define the blank space all around */ /**\n * The domain of axis.\n * This is the definition\n *\n * Numeric domain is always defined by an array of exactly two values, for the min and the max of the axis.\n * Categorical domain is defined as array of all possible values.\n *\n * Can be specified in many ways:\n * - array of numbers\n * - with special strings like 'dataMin' and 'dataMax'\n * - with special string math like 'dataMin - 100'\n * - with keyword 'auto'\n * - or a function\n * - array of functions\n * - or a combination of the above\n */ /**\n * NumberDomain is an evaluated {@link AxisDomain}.\n * Unlike {@link AxisDomain}, it has no variety - it's a tuple of two number.\n * This is after all the keywords and functions were evaluated and what is left is [min, max].\n *\n * Know that the min, max values are not guaranteed to be nice numbers - values like -Infinity or NaN are possible.\n *\n * There are also `category` axes that have different things than numbers in their domain.\n */ /** The props definition of base axis */ /** Defines how ticks are placed and whether / how tick collisions are handled.\n * 'preserveStart' keeps the left tick on collision and ensures that the first tick is always shown.\n * 'preserveEnd' keeps the right tick on collision and ensures that the last tick is always shown.\n * 'preserveStartEnd' keeps the left tick on collision and ensures that the first and last ticks are always shown.\n * 'equidistantPreserveStart' selects a number N such that every nTh tick will be shown without collision.\n */ var adaptEventHandlers = function adaptEventHandlers(props, newHandler) {\n    if (!props || typeof props === 'function' || typeof props === 'boolean') {\n        return null;\n    }\n    var inputProps = props;\n    if (/*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(props)) {\n        inputProps = props.props;\n    }\n    if (!lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default()(inputProps)) {\n        return null;\n    }\n    var out = {};\n    Object.keys(inputProps).forEach(function(key) {\n        if (EventKeys.includes(key)) {\n            out[key] = newHandler || function(e) {\n                return inputProps[key](inputProps, e);\n            };\n        }\n    });\n    return out;\n};\nvar getEventHandlerOfChild = function getEventHandlerOfChild(originalHandler, data, index) {\n    return function(e) {\n        originalHandler(data, index, e);\n        return null;\n    };\n};\nvar adaptEventsOfChild = function adaptEventsOfChild(props, data, index) {\n    if (!lodash_isObject__WEBPACK_IMPORTED_MODULE_1___default()(props) || _typeof(props) !== 'object') {\n        return null;\n    }\n    var out = null;\n    Object.keys(props).forEach(function(key) {\n        var item = props[key];\n        if (EventKeys.includes(key) && typeof item === 'function') {\n            if (!out) out = {};\n            out[key] = getEventHandlerOfChild(item, data, index);\n        }\n    });\n    return out;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/recharts@2.15.4_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/recharts/es6/util/types.js\n");

/***/ })

};
;